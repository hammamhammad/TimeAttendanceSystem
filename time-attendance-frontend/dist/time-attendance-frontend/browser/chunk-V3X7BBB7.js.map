{
  "version": 3,
  "sources": ["src/app/core/services/shifts.service.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Shift, PagedResult } from '../../shared/models/shift.model';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShiftsService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/api/v1/shifts`;\n\n  getShifts(page: number = 1, pageSize: number = 100, search?: string): Observable<PagedResult<Shift>> {\n    let httpParams = new HttpParams()\n      .set('page', page.toString())\n      .set('pageSize', pageSize.toString());\n\n    if (search) {\n      httpParams = httpParams.set('search', search);\n    }\n\n    return this.http.get<PagedResult<Shift>>(this.baseUrl, { params: httpParams });\n  }\n\n  getShiftById(id: number): Observable<Shift> {\n    return this.http.get<Shift>(`${this.baseUrl}/${id}`);\n  }\n\n  getActiveShifts(): Observable<PagedResult<Shift>> {\n    // Get only active shifts for assignment selection\n    return this.getShifts(1, 1000, ''); // Get up to 1000 active shifts\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;AASM,IAAO,iBAAP,MAAO,eAAa;EAChB,OAAO,OAAO,UAAU;EACxB,UAAU,GAAG,YAAY,MAAM;EAEvC,UAAU,OAAe,GAAG,WAAmB,KAAK,QAAe;AACjE,QAAI,aAAa,IAAI,WAAU,EAC5B,IAAI,QAAQ,KAAK,SAAQ,CAAE,EAC3B,IAAI,YAAY,SAAS,SAAQ,CAAE;AAEtC,QAAI,QAAQ;AACV,mBAAa,WAAW,IAAI,UAAU,MAAM;IAC9C;AAEA,WAAO,KAAK,KAAK,IAAwB,KAAK,SAAS,EAAE,QAAQ,WAAU,CAAE;EAC/E;EAEA,aAAa,IAAU;AACrB,WAAO,KAAK,KAAK,IAAW,GAAG,KAAK,OAAO,IAAI,EAAE,EAAE;EACrD;EAEA,kBAAe;AAEb,WAAO,KAAK,UAAU,GAAG,KAAM,EAAE;EACnC;;AAvBwB;cAAb;mCAAA,gBAAa;AAAA;cAAb,oFAAA,gBAAa,SAAb,eAAa,WAAA,YAFZ,OAAM,CAAA;AAEd,IAAO,gBAAP;;sEAAO,eAAa,CAAA;UAHzB;WAAW;MACV,YAAY;KACb;;;",
  "names": []
}
