{
  "version": 3,
  "sources": ["src/app/shared/components/detail-card/detail-card.component.ts"],
  "sourcesContent": ["import { Component, Input, TemplateRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nexport interface DetailField {\r\n  label: string;\r\n  value: any;\r\n  type?: 'text' | 'badge' | 'date' | 'time' | 'datetime' | 'currency' | 'percentage' | 'custom';\r\n  badgeVariant?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark';\r\n  customTemplate?: TemplateRef<any>;\r\n  visible?: boolean;\r\n  onClick?: () => void;\r\n  copyable?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-detail-card',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div class=\"app-detail-card card\">\r\n      @if (title) {\r\n        <div class=\"card-header\">\r\n          <h5 class=\"card-title mb-0\">\r\n            @if (icon) {\r\n              <i [class]=\"icon + ' me-2'\"></i>\r\n            }\r\n            {{ title }}\r\n          </h5>\r\n          @if (subtitle) {\r\n            <small class=\"text-muted\">{{ subtitle }}</small>\r\n          }\r\n        </div>\r\n      }\r\n\r\n      <div class=\"card-body\">\r\n        @if (layout === 'two-column') {\r\n          <!-- Two-column layout for forms -->\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <dl class=\"app-definition-list\">\r\n                @for (field of getLeftColumnFields(); track field.label) {\r\n                  @if (field.visible !== false) {\r\n                    <div class=\"app-definition-item\">\r\n                      <dt class=\"app-data-label\">{{ field.label }}:</dt>\r\n                      <dd class=\"app-data-value\">\r\n                        <ng-container [ngSwitch]=\"field.type || 'text'\">\r\n                          <!-- Badge type -->\r\n                          <span *ngSwitchCase=\"'badge'\"\r\n                                [class]=\"'badge bg-' + (field.badgeVariant || 'primary')\">\r\n                            {{ field.value }}\r\n                          </span>\r\n\r\n                          <!-- Date type -->\r\n                          <span *ngSwitchCase=\"'date'\">\r\n                            {{ formatDate(field.value) }}\r\n                          </span>\r\n\r\n                          <!-- Time type -->\r\n                          <span *ngSwitchCase=\"'time'\">\r\n                            {{ formatTime(field.value) }}\r\n                          </span>\r\n\r\n                          <!-- DateTime type -->\r\n                          <span *ngSwitchCase=\"'datetime'\">\r\n                            {{ formatDateTime(field.value) }}\r\n                          </span>\r\n\r\n                          <!-- Currency type -->\r\n                          <span *ngSwitchCase=\"'currency'\">\r\n                            {{ formatCurrency(field.value) }}\r\n                          </span>\r\n\r\n                          <!-- Percentage type -->\r\n                          <span *ngSwitchCase=\"'percentage'\">\r\n                            {{ field.value }}%\r\n                          </span>\r\n\r\n                          <!-- Custom template -->\r\n                          <ng-container *ngSwitchCase=\"'custom'\">\r\n                            @if (field.customTemplate) {\r\n                              <ng-container [ngTemplateOutlet]=\"field.customTemplate\"\r\n                                          [ngTemplateOutletContext]=\"{ $implicit: field.value, field: field }\"></ng-container>\r\n                            }\r\n                          </ng-container>\r\n\r\n                          <!-- Default text -->\r\n                          <span *ngSwitchDefault\r\n                                [class.text-muted]=\"!field.value || field.value === '-'\"\r\n                                [class.app-clickable]=\"field.onClick\"\r\n                                (click)=\"field.onClick && field.onClick()\">\r\n                            {{ field.value || '-' }}\r\n                            @if (field.copyable && field.value) {\r\n                              <i class=\"fas fa-copy ms-2 text-muted app-clickable\"\r\n                                 (click)=\"copyToClipboard(field.value)\"\r\n                                 title=\"Copy to clipboard\"></i>\r\n                            }\r\n                          </span>\r\n                        </ng-container>\r\n                      </dd>\r\n                    </div>\r\n                  }\r\n                }\r\n              </dl>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <dl class=\"app-definition-list\">\r\n                @for (field of getRightColumnFields(); track field.label) {\r\n                  @if (field.visible !== false) {\r\n                    <div class=\"app-definition-item\">\r\n                      <dt class=\"app-data-label\">{{ field.label }}:</dt>\r\n                      <dd class=\"app-data-value\">\r\n                        <ng-container [ngSwitch]=\"field.type || 'text'\">\r\n                          <!-- Badge type -->\r\n                          <span *ngSwitchCase=\"'badge'\"\r\n                                [class]=\"'badge bg-' + (field.badgeVariant || 'primary')\">\r\n                            {{ field.value }}\r\n                          </span>\r\n\r\n                          <!-- Date type -->\r\n                          <span *ngSwitchCase=\"'date'\">\r\n                            {{ formatDate(field.value) }}\r\n                          </span>\r\n\r\n                          <!-- Time type -->\r\n                          <span *ngSwitchCase=\"'time'\">\r\n                            {{ formatTime(field.value) }}\r\n                          </span>\r\n\r\n                          <!-- DateTime type -->\r\n                          <span *ngSwitchCase=\"'datetime'\">\r\n                            {{ formatDateTime(field.value) }}\r\n                          </span>\r\n\r\n                          <!-- Currency type -->\r\n                          <span *ngSwitchCase=\"'currency'\">\r\n                            {{ formatCurrency(field.value) }}\r\n                          </span>\r\n\r\n                          <!-- Percentage type -->\r\n                          <span *ngSwitchCase=\"'percentage'\">\r\n                            {{ field.value }}%\r\n                          </span>\r\n\r\n                          <!-- Custom template -->\r\n                          <ng-container *ngSwitchCase=\"'custom'\">\r\n                            @if (field.customTemplate) {\r\n                              <ng-container [ngTemplateOutlet]=\"field.customTemplate\"\r\n                                          [ngTemplateOutletContext]=\"{ $implicit: field.value, field: field }\"></ng-container>\r\n                            }\r\n                          </ng-container>\r\n\r\n                          <!-- Default text -->\r\n                          <span *ngSwitchDefault\r\n                                [class.text-muted]=\"!field.value || field.value === '-'\"\r\n                                [class.app-clickable]=\"field.onClick\"\r\n                                (click)=\"field.onClick && field.onClick()\">\r\n                            {{ field.value || '-' }}\r\n                            @if (field.copyable && field.value) {\r\n                              <i class=\"fas fa-copy ms-2 text-muted app-clickable\"\r\n                                 (click)=\"copyToClipboard(field.value)\"\r\n                                 title=\"Copy to clipboard\"></i>\r\n                            }\r\n                          </span>\r\n                        </ng-container>\r\n                      </dd>\r\n                    </div>\r\n                  }\r\n                }\r\n              </dl>\r\n            </div>\r\n          </div>\r\n        } @else {\r\n          <!-- Single column layout -->\r\n          <dl class=\"app-definition-list\">\r\n            @for (field of fields; track field.label) {\r\n              @if (field.visible !== false) {\r\n                <div class=\"app-definition-item\">\r\n                  <dt class=\"app-data-label\">{{ field.label }}:</dt>\r\n                  <dd class=\"app-data-value\">\r\n                    <ng-container [ngSwitch]=\"field.type || 'text'\">\r\n                      <!-- Badge type -->\r\n                      <span *ngSwitchCase=\"'badge'\"\r\n                            [class]=\"'badge bg-' + (field.badgeVariant || 'primary')\">\r\n                        {{ field.value }}\r\n                      </span>\r\n\r\n                      <!-- Date type -->\r\n                      <span *ngSwitchCase=\"'date'\">\r\n                        {{ formatDate(field.value) }}\r\n                      </span>\r\n\r\n                      <!-- Time type -->\r\n                      <span *ngSwitchCase=\"'time'\">\r\n                        {{ formatTime(field.value) }}\r\n                      </span>\r\n\r\n                      <!-- DateTime type -->\r\n                      <span *ngSwitchCase=\"'datetime'\">\r\n                        {{ formatDateTime(field.value) }}\r\n                      </span>\r\n\r\n                      <!-- Currency type -->\r\n                      <span *ngSwitchCase=\"'currency'\">\r\n                        {{ formatCurrency(field.value) }}\r\n                      </span>\r\n\r\n                      <!-- Percentage type -->\r\n                      <span *ngSwitchCase=\"'percentage'\">\r\n                        {{ field.value }}%\r\n                      </span>\r\n\r\n                      <!-- Custom template -->\r\n                      <ng-container *ngSwitchCase=\"'custom'\">\r\n                        @if (field.customTemplate) {\r\n                          <ng-container [ngTemplateOutlet]=\"field.customTemplate\"\r\n                                      [ngTemplateOutletContext]=\"{ $implicit: field.value, field: field }\"></ng-container>\r\n                        }\r\n                      </ng-container>\r\n\r\n                      <!-- Default text -->\r\n                      <span *ngSwitchDefault\r\n                            [class.text-muted]=\"!field.value || field.value === '-'\"\r\n                            [class.app-clickable]=\"field.onClick\"\r\n                            (click)=\"field.onClick && field.onClick()\">\r\n                        {{ field.value || '-' }}\r\n                        @if (field.copyable && field.value) {\r\n                          <i class=\"fas fa-copy ms-2 text-muted app-clickable\"\r\n                             (click)=\"copyToClipboard(field.value)\"\r\n                             title=\"Copy to clipboard\"></i>\r\n                        }\r\n                      </span>\r\n                    </ng-container>\r\n                  </dd>\r\n                </div>\r\n              }\r\n            }\r\n          </dl>\r\n        }\r\n\r\n        @if (customContent) {\r\n          <div class=\"mt-3\">\r\n            <ng-container [ngTemplateOutlet]=\"customContent\"></ng-container>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  `\r\n})\r\nexport class DetailCardComponent {\r\n  @Input() title?: string;\r\n  @Input() subtitle?: string;\r\n  @Input() icon?: string;\r\n  @Input() fields: DetailField[] = [];\r\n  @Input() layout: 'single' | 'two-column' = 'single';\r\n  @Input() customContent?: TemplateRef<any>;\r\n\r\n  getLeftColumnFields(): DetailField[] {\r\n    return this.fields.filter((_, index) => index % 2 === 0);\r\n  }\r\n\r\n  getRightColumnFields(): DetailField[] {\r\n    return this.fields.filter((_, index) => index % 2 === 1);\r\n  }\r\n\r\n  formatDate(dateString: string | Date): string {\r\n    if (!dateString) return '-';\r\n    try {\r\n      return new Date(dateString).toLocaleDateString();\r\n    } catch {\r\n      return dateString.toString();\r\n    }\r\n  }\r\n\r\n  formatTime(timeString: string | Date): string {\r\n    if (!timeString) return '-';\r\n    try {\r\n      return new Date(timeString).toLocaleTimeString();\r\n    } catch {\r\n      return timeString.toString();\r\n    }\r\n  }\r\n\r\n  formatDateTime(dateTimeString: string | Date): string {\r\n    if (!dateTimeString) return '-';\r\n    try {\r\n      return new Date(dateTimeString).toLocaleString();\r\n    } catch {\r\n      return dateTimeString.toString();\r\n    }\r\n  }\r\n\r\n  formatCurrency(amount: number): string {\r\n    if (amount == null) return '-';\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    }).format(amount);\r\n  }\r\n\r\n  copyToClipboard(text: string): void {\r\n    if (navigator.clipboard) {\r\n      navigator.clipboard.writeText(text).then(() => {\r\n        // You can add a toast notification here\r\n        console.log('Copied to clipboard:', text);\r\n      });\r\n    }\r\n  }\r\n}"],
  "mappings": "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",
  "names": []
}
