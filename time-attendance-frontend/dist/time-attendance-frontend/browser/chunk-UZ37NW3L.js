import{a as h}from"./chunk-TJ2U7DWW.js";import{Bc as u,Cc as f,J as n,M as v,Q as _,Yb as d,da as l,k as r,n as y,x as s}from"./chunk-JSQL33QG.js";import{a as c,b as p}from"./chunk-DGAILPFQ.js";var b=class g{constructor(e){this.http=e}baseUrl=`${h.apiUrl}/api/v1/vacation-types`;_vacationTypes=l([]);_pagedResult=l(null);_loading=l(!1);_error=l(null);_selectedVacationType=l(null);_currentFilter=l({});vacationTypes=this._vacationTypes.asReadonly();pagedResult=this._pagedResult.asReadonly();loading=this._loading.asReadonly();error=this._error.asReadonly();selectedVacationType=this._selectedVacationType.asReadonly();currentFilter=this._currentFilter.asReadonly();totalItems=d(()=>this._pagedResult()?.totalCount??0);totalPages=d(()=>{let e=this._pagedResult();return!e||e.pageSize===0?1:Math.ceil(e.totalCount/e.pageSize)});hasNextPage=d(()=>{let e=this._pagedResult();return e?e.page<this.totalPages():!1});hasPreviousPage=d(()=>{let e=this._pagedResult();return e?e.page>1:!1});filteredVacationTypes=d(()=>{let e=this._vacationTypes(),t=this._currentFilter();return t?e.filter(a=>{if(t.search){let i=t.search.toLowerCase(),o=a.name.toLowerCase().includes(i),T=a.nameAr?.toLowerCase().includes(i)??!1;if(!o&&!T)return!1}return!(t.branchId!==void 0&&a.branchId!==t.branchId||t.isActive!==void 0&&a.isActive!==t.isActive)}):e});getVacationTypes(e={}){this._loading.set(!0),this._error.set(null);let t=new u;return e.page&&(t=t.set("page",e.page.toString())),e.pageSize&&(t=t.set("pageSize",e.pageSize.toString())),e.search&&(t=t.set("search",e.search)),e.branchId&&(t=t.set("branchId",e.branchId.toString())),e.isActive!==void 0&&(t=t.set("isActive",e.isActive.toString())),this.http.get(this.baseUrl,{params:t}).pipe(n(a=>{this._pagedResult.set(a),this._vacationTypes.set(a.items),this._loading.set(!1)}),s(a=>(this._loading.set(!1),this._error.set("Failed to load vacation types"),console.error("Error loading vacation types:",a),r(()=>a))))}getVacationTypeById(e,t=!1){this._loading.set(!0),this._error.set(null);let a=new u;return t&&(a=a.set("includeStatistics","true")),this.http.get(`${this.baseUrl}/${e}`,{params:a}).pipe(n(i=>{this._selectedVacationType.set(i),this._loading.set(!1)}),s(i=>(this._loading.set(!1),this._error.set("Failed to load vacation type details"),console.error("Error loading vacation type:",i),r(()=>i))))}createVacationType(e){return this._loading.set(!0),this._error.set(null),this.http.post(this.baseUrl,e).pipe(n(()=>{this._loading.set(!1)}),s(t=>(this._loading.set(!1),this._error.set("Failed to create vacation type"),console.error("Error creating vacation type:",t),r(()=>t))))}updateVacationType(e,t){return this._loading.set(!0),this._error.set(null),this.http.put(`${this.baseUrl}/${e}`,t).pipe(n(()=>{this._loading.set(!1);let i=this._vacationTypes().map(o=>o.id===e?p(c(c({},o),t),{modifiedAtUtc:new Date().toISOString()}):o);this._vacationTypes.set(i)}),s(a=>(this._loading.set(!1),this._error.set("Failed to update vacation type"),console.error("Error updating vacation type:",a),r(()=>a))))}deleteVacationType(e){return this._loading.set(!0),this._error.set(null),this.http.delete(`${this.baseUrl}/${e}`).pipe(n(()=>{this._loading.set(!1);let a=this._vacationTypes().filter(o=>o.id!==e);this._vacationTypes.set(a);let i=this._pagedResult();i&&this._pagedResult.set(p(c({},i),{items:a,totalCount:i.totalCount-1}))}),s(t=>(this._loading.set(!1),this._error.set("Failed to delete vacation type"),console.error("Error deleting vacation type:",t),r(()=>t))))}toggleVacationTypeStatus(e){return this._loading.set(!0),this._error.set(null),this.http.patch(`${this.baseUrl}/${e}/toggle-status`,{}).pipe(n(()=>{this._loading.set(!1);let a=this._vacationTypes().map(i=>i.id===e?p(c({},i),{isActive:!i.isActive,modifiedAtUtc:new Date().toISOString()}):i);this._vacationTypes.set(a)}),s(t=>(this._loading.set(!1),this._error.set("Failed to toggle vacation type status"),console.error("Error toggling vacation type status:",t),r(()=>t))))}updateFilter(e){this._currentFilter.set(e)}clearFilter(){this._currentFilter.set({})}clearSelectedVacationType(){this._selectedVacationType.set(null)}clearError(){this._error.set(null)}getBranches(){let e=new u().set("pageSize","1000").set("isActive","true");return this.http.get(`${h.apiUrl}/api/v1/branches`,{params:e}).pipe(y(t=>t.items||[]),s(t=>(console.error("Error loading branches:",t),r(()=>t))))}static \u0275fac=function(t){return new(t||g)(_(f))};static \u0275prov=v({token:g,factory:g.\u0275fac,providedIn:"root"})};export{b as a};
