{
  "version": 3,
  "sources": ["src/app/pages/settings/public-holidays/public-holidays.component.ts", "src/app/pages/settings/public-holidays/public-holidays.component.html"],
  "sourcesContent": ["import { Component, OnInit, signal, inject, computed } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { I18nService } from '../../../core/i18n/i18n.service';\r\nimport { PublicHolidaysService } from './public-holidays.service';\r\nimport { NotificationService } from '../../../core/notifications/notification.service';\r\nimport { ConfirmationService } from '../../../core/confirmation/confirmation.service';\r\nimport { PermissionService } from '../../../core/auth/permission.service';\r\nimport { DataTableComponent, TableColumn, TableAction } from '../../../shared/components/data-table/data-table.component';\r\nimport { PageHeaderComponent } from '../../../shared/components/page-header/page-header.component';\r\nimport { UnifiedFilterComponent } from '../../../shared/components/unified-filter/unified-filter.component';\r\nimport { PublicHoliday, HolidayType, HolidayTemplate } from '../../../shared/models/public-holiday.model';\r\nimport { ModalWrapperComponent } from '../../../shared/components/modal-wrapper/modal-wrapper.component';\r\n\r\n@Component({\r\n  selector: 'app-public-holidays',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, DataTableComponent, PageHeaderComponent, UnifiedFilterComponent, ModalWrapperComponent],\r\n  templateUrl: './public-holidays.component.html',\r\n  styleUrls: ['./public-holidays.component.css']\r\n})\r\nexport class PublicHolidaysComponent implements OnInit {\r\n  private publicHolidaysService = inject(PublicHolidaysService);\r\n  private router = inject(Router);\r\n  private notificationService = inject(NotificationService);\r\n  private confirmationService = inject(ConfirmationService);\r\n  public i18n = inject(I18nService);\r\n  public permissionService = inject(PermissionService);\r\n\r\n  // Permission constants for use in template\r\n  readonly PERMISSIONS = {\r\n    HOLIDAY_CREATE: 'publicHoliday.create',\r\n    HOLIDAY_READ: 'publicHoliday.read',\r\n    HOLIDAY_UPDATE: 'publicHoliday.update',\r\n    HOLIDAY_DELETE: 'publicHoliday.delete',\r\n    HOLIDAY_IMPORT: 'publicHoliday.import',\r\n    HOLIDAY_EXPORT: 'publicHoliday.export'\r\n  };\r\n\r\n  // Holiday type and template references for template\r\n  readonly HolidayType = HolidayType;\r\n  readonly HolidayTemplate = HolidayTemplate;\r\n\r\n  // Signals for state management\r\n  loading = signal(false);\r\n  holidays = signal<PublicHoliday[]>([]);\r\n  totalCount = signal(0);\r\n  currentPage = signal(1);\r\n  pageSize = signal(10);\r\n  totalPages = signal(0);\r\n\r\n  // Filter signals\r\n  searchTerm = signal('');\r\n  selectedYear = signal<number | undefined>(new Date().getFullYear());\r\n  selectedBranchId = signal<number | undefined>(undefined);\r\n  selectedHolidayType = signal<HolidayType | undefined>(undefined);\r\n  selectedActiveStatus = signal<boolean | undefined>(undefined);\r\n  selectedNationalStatus = signal<boolean | undefined>(undefined);\r\n\r\n  // Sorting state\r\n  sortColumn = signal<keyof PublicHoliday>('name');\r\n  sortDirection = signal<'asc' | 'desc'>('asc');\r\n\r\n  // Import state\r\n  showImportModal = signal(false);\r\n  importLoading = signal(false);\r\n  selectedTemplate = signal<HolidayTemplate>(HolidayTemplate.USA_Federal);\r\n  importYear = signal(new Date().getFullYear());\r\n  importBranchId = signal<number | undefined>(undefined);\r\n  overwriteExisting = signal(false);\r\n\r\n  // Data table configuration\r\n  tableColumns = computed<TableColumn[]>(() => [\r\n    {\r\n      key: 'name',\r\n      label: this.t('settings.holidays.name'),\r\n      sortable: true,\r\n      width: '200px',\r\n      priority: 'high',\r\n      mobileLabel: this.t('settings.holidays.name')\r\n    },\r\n    {\r\n      key: 'holidayType',\r\n      label: this.t('settings.holidays.type'),\r\n      sortable: true,\r\n      width: '120px',\r\n      priority: 'high',\r\n      mobileLabel: this.t('settings.holidays.type'),\r\n      renderHtml: true\r\n    },\r\n    {\r\n      key: 'nextOccurrence',\r\n      label: this.t('settings.holidays.nextOccurrence'),\r\n      sortable: true,\r\n      width: '150px',\r\n      priority: 'medium',\r\n      mobileLabel: this.t('settings.holidays.nextOccurrence')\r\n    },\r\n    {\r\n      key: 'scope',\r\n      label: this.t('settings.holidays.scope'),\r\n      sortable: false,\r\n      width: '120px',\r\n      priority: 'medium',\r\n      mobileLabel: this.t('settings.holidays.scope'),\r\n      renderHtml: true\r\n    },\r\n    {\r\n      key: 'status',\r\n      label: this.t('settings.holidays.status'),\r\n      sortable: false,\r\n      width: '100px',\r\n      align: 'center',\r\n      priority: 'high',\r\n      mobileLabel: this.t('settings.holidays.status'),\r\n      renderHtml: true\r\n    },\r\n    {\r\n      key: 'priority',\r\n      label: this.t('settings.holidays.priority'),\r\n      sortable: true,\r\n      width: '80px',\r\n      align: 'center',\r\n      priority: 'low',\r\n      hideOnMobile: true,\r\n      mobileLabel: this.t('settings.holidays.priority')\r\n    },\r\n    {\r\n      key: 'createdAt',\r\n      label: this.t('common.created'),\r\n      sortable: true,\r\n      width: '150px',\r\n      priority: 'low',\r\n      hideOnMobile: true,\r\n      mobileLabel: this.t('common.created')\r\n    }\r\n  ]);\r\n\r\n  tableActions = computed<TableAction[]>(() => [\r\n    {\r\n      key: 'view',\r\n      label: this.t('common.view'),\r\n      icon: 'fa-eye',\r\n      color: 'primary',\r\n      condition: () => this.permissionService.has(this.PERMISSIONS.HOLIDAY_READ)\r\n    },\r\n    {\r\n      key: 'edit',\r\n      label: this.t('common.edit'),\r\n      icon: 'fa-edit',\r\n      color: 'secondary',\r\n      condition: () => this.permissionService.canManagePublicHolidays()\r\n    },\r\n    {\r\n      key: 'delete',\r\n      label: this.t('common.delete'),\r\n      icon: 'fa-trash',\r\n      color: 'danger',\r\n      condition: () => this.permissionService.canManagePublicHolidays()\r\n    }\r\n  ]);\r\n\r\n  // Transform holidays data for data table\r\n  tableData = computed(() => {\r\n    return this.holidays().map(holiday => ({\r\n      ...holiday,\r\n      holidayType: this.formatHolidayType(holiday.holidayType),\r\n      nextOccurrence: holiday.nextOccurrence ? this.formatDate(holiday.nextOccurrence) : this.t('settings.holidays.noUpcoming'),\r\n      scope: this.formatScope(holiday),\r\n      status: this.formatStatus(holiday),\r\n      createdAt: this.formatDate(holiday.createdAt)\r\n    }));\r\n  });\r\n\r\n  // Available holiday types for filters\r\n  holidayTypes = computed(() => this.publicHolidaysService.getHolidayTypes());\r\n\r\n  // Available templates for import\r\n  availableTemplates = computed(() => this.publicHolidaysService.getAvailableTemplates());\r\n\r\n  ngOnInit(): void {\r\n    this.loadHolidays();\r\n  }\r\n\r\n  t(key: string): string {\r\n    return this.i18n.t(key);\r\n  }\r\n\r\n  loadHolidays(): void {\r\n    this.loading.set(true);\r\n\r\n    this.publicHolidaysService.getPublicHolidays(\r\n      this.currentPage(),\r\n      this.pageSize(),\r\n      this.searchTerm() || undefined,\r\n      this.selectedYear(),\r\n      this.selectedBranchId(),\r\n      this.selectedHolidayType(),\r\n      this.selectedActiveStatus(),\r\n      this.selectedNationalStatus()\r\n    ).subscribe({\r\n      next: (response) => {\r\n        this.holidays.set(response.holidays);\r\n        this.totalCount.set(response.totalCount);\r\n        this.totalPages.set(response.totalPages);\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load public holidays:', error);\r\n        this.loading.set(false);\r\n        this.notificationService.error(\r\n          this.t('app.error'),\r\n          this.t('errors.server')\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(this.i18n.getCurrentLocale(), {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  }\r\n\r\n  formatHolidayType(type: HolidayType): string {\r\n    const typeLabels = {\r\n      [HolidayType.OneTime]: 'One Time',\r\n      [HolidayType.Annual]: 'Annual',\r\n      [HolidayType.Monthly]: 'Monthly',\r\n      [HolidayType.Floating]: 'Floating'\r\n    };\r\n\r\n    const typeColors = {\r\n      [HolidayType.OneTime]: 'info',\r\n      [HolidayType.Annual]: 'primary',\r\n      [HolidayType.Monthly]: 'warning',\r\n      [HolidayType.Floating]: 'secondary'\r\n    };\r\n\r\n    return `<span class=\"badge bg-${typeColors[type]}\">${typeLabels[type]}</span>`;\r\n  }\r\n\r\n  formatScope(holiday: PublicHoliday): string {\r\n    if (holiday.isNational) {\r\n      return `<span class=\"badge bg-success\">${this.t('settings.holidays.national')}</span>`;\r\n    } else {\r\n      return `<span class=\"badge bg-info\">${holiday.branchName || this.t('settings.holidays.regional')}</span>`;\r\n    }\r\n  }\r\n\r\n  formatStatus(holiday: PublicHoliday): string {\r\n    if (holiday.isActive) {\r\n      return `<span class=\"badge bg-success\">${this.t('settings.holidays.active')}</span>`;\r\n    } else {\r\n      return `<span class=\"badge bg-light text-dark border\">${this.t('settings.holidays.inactive')}</span>`;\r\n    }\r\n  }\r\n\r\n  // Data table action handler\r\n  onActionClick(event: {action: string, item: PublicHoliday}): void {\r\n    const { action, item } = event;\r\n\r\n    switch (action) {\r\n      case 'view':\r\n        this.onViewHoliday(item);\r\n        break;\r\n      case 'edit':\r\n        this.onEditHoliday(item);\r\n        break;\r\n      case 'delete':\r\n        this.onDeleteHoliday(item);\r\n        break;\r\n      default:\r\n        console.warn('Unknown action:', action);\r\n    }\r\n  }\r\n\r\n  // Pagination handlers\r\n  onPageChange(page: number): void {\r\n    this.currentPage.set(page);\r\n    this.loadHolidays();\r\n  }\r\n\r\n  onPageSizeChange(pageSize: number): void {\r\n    this.pageSize.set(pageSize);\r\n    this.currentPage.set(1);\r\n    this.loadHolidays();\r\n  }\r\n\r\n  // Filter handlers\r\n  onSearchChange(): void {\r\n    this.currentPage.set(1);\r\n    this.loadHolidays();\r\n  }\r\n\r\n  onYearChange(): void {\r\n    this.currentPage.set(1);\r\n    this.loadHolidays();\r\n  }\r\n\r\n  onHolidayTypeChange(): void {\r\n    this.currentPage.set(1);\r\n    this.loadHolidays();\r\n  }\r\n\r\n  onActiveStatusChange(): void {\r\n    this.currentPage.set(1);\r\n    this.loadHolidays();\r\n  }\r\n\r\n  onNationalStatusChange(): void {\r\n    this.currentPage.set(1);\r\n    this.loadHolidays();\r\n  }\r\n\r\n  onClearFilters(): void {\r\n    this.searchTerm.set('');\r\n    this.selectedYear.set(new Date().getFullYear());\r\n    this.selectedBranchId.set(undefined);\r\n    this.selectedHolidayType.set(undefined);\r\n    this.selectedActiveStatus.set(undefined);\r\n    this.selectedNationalStatus.set(undefined);\r\n    this.currentPage.set(1);\r\n    this.loadHolidays();\r\n  }\r\n\r\n  hasActiveFilters(): boolean {\r\n    return !!(\r\n      this.searchTerm() ||\r\n      this.selectedHolidayType() !== undefined ||\r\n      this.selectedActiveStatus() !== undefined ||\r\n      this.selectedNationalStatus() !== undefined ||\r\n      this.selectedYear() !== new Date().getFullYear()\r\n    );\r\n  }\r\n\r\n  // Unified filter handlers\r\n  onSearchTermChange(searchTerm: string): void {\r\n    this.searchTerm.set(searchTerm);\r\n    this.onSearchChange();\r\n  }\r\n\r\n  onFiltersChange(filters: any): void {\r\n    if (filters.branchId !== undefined) {\r\n      this.selectedBranchId.set(filters.branchId ? parseInt(filters.branchId) : undefined);\r\n    }\r\n    if (filters.isActive !== undefined) {\r\n      this.selectedActiveStatus.set(filters.isActive === 'true' ? true : filters.isActive === 'false' ? false : undefined);\r\n    }\r\n    if (filters.year !== undefined) {\r\n      this.selectedYear.set(filters.year ? parseInt(filters.year) : new Date().getFullYear());\r\n    }\r\n    this.currentPage.set(1);\r\n    this.loadHolidays();\r\n  }\r\n\r\n  onRefreshData(): void {\r\n    this.onClearFilters();\r\n  }\r\n\r\n  // Holiday CRUD operations\r\n  onCreateHoliday(): void {\r\n    this.router.navigate(['/settings/public-holidays/create']);\r\n  }\r\n\r\n  onViewHoliday(holiday: PublicHoliday): void {\r\n    this.router.navigate(['/settings/public-holidays', holiday.id, 'view']);\r\n  }\r\n\r\n  onEditHoliday(holiday: PublicHoliday): void {\r\n    this.router.navigate(['/settings/public-holidays', holiday.id, 'edit']);\r\n  }\r\n\r\n  async onDeleteHoliday(holiday: PublicHoliday): Promise<void> {\r\n    const result = await this.confirmationService.confirm({\r\n      title: this.t('settings.holidays.deleteHoliday'),\r\n      message: this.t('settings.holidays.deleteHolidayConfirmation'),\r\n      confirmText: this.t('common.delete'),\r\n      cancelText: this.t('common.cancel'),\r\n      confirmButtonClass: 'btn-danger',\r\n      icon: 'fa-trash',\r\n      iconClass: 'text-danger'\r\n    });\r\n\r\n    if (result.confirmed) {\r\n      this.publicHolidaysService.deletePublicHoliday(holiday.id).subscribe({\r\n        next: () => {\r\n          this.loadHolidays();\r\n          this.notificationService.success(\r\n            this.t('app.success'),\r\n            this.t('settings.holidays.holidayDeletedSuccessfully')\r\n          );\r\n        },\r\n        error: (error) => {\r\n          console.error('Failed to delete holiday:', error);\r\n          this.notificationService.error(\r\n            this.t('app.error'),\r\n            this.t('errors.server')\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Import functionality\r\n  onShowImportModal(): void {\r\n    this.showImportModal.set(true);\r\n  }\r\n\r\n  onHideImportModal(): void {\r\n    this.showImportModal.set(false);\r\n    this.selectedTemplate.set(HolidayTemplate.USA_Federal);\r\n    this.importYear.set(new Date().getFullYear());\r\n    this.importBranchId.set(undefined);\r\n    this.overwriteExisting.set(false);\r\n  }\r\n\r\n  async onImportTemplate(): Promise<void> {\r\n    const result = await this.confirmationService.confirm({\r\n      title: this.t('settings.holidays.importTemplate'),\r\n      message: this.t('settings.holidays.importTemplateConfirmation'),\r\n      confirmText: this.t('settings.holidays.import'),\r\n      cancelText: this.t('common.cancel'),\r\n      confirmButtonClass: 'btn-primary',\r\n      icon: 'fa-download',\r\n      iconClass: 'text-primary'\r\n    });\r\n\r\n    if (result.confirmed) {\r\n      this.importLoading.set(true);\r\n\r\n      this.publicHolidaysService.importHolidayTemplate({\r\n        template: this.selectedTemplate(),\r\n        year: this.importYear(),\r\n        branchId: this.importBranchId(),\r\n        countryCode: 'US', // This should be dynamic based on template\r\n        overwriteExisting: this.overwriteExisting()\r\n      }).subscribe({\r\n        next: (importedHolidays) => {\r\n          this.importLoading.set(false);\r\n          this.onHideImportModal();\r\n          this.loadHolidays();\r\n          this.notificationService.success(\r\n            this.t('app.success'),\r\n            this.t('settings.holidays.templateImportedSuccessfully')\r\n          );\r\n        },\r\n        error: (error) => {\r\n          console.error('Failed to import template:', error);\r\n          this.importLoading.set(false);\r\n          this.notificationService.error(\r\n            this.t('app.error'),\r\n            this.t('errors.server')\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Export functionality\r\n  onExportHolidays(format: 'json' | 'csv' | 'ical' = 'json'): void {\r\n    const year = this.selectedYear() || new Date().getFullYear();\r\n\r\n    this.publicHolidaysService.exportHolidays(\r\n      year,\r\n      format,\r\n      this.selectedBranchId(),\r\n      false\r\n    ).subscribe({\r\n      next: (blob) => {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = `public-holidays-${year}.${format}`;\r\n        link.click();\r\n        window.URL.revokeObjectURL(url);\r\n\r\n        this.notificationService.success(\r\n          this.t('app.success'),\r\n          this.t('settings.holidays.exportedSuccessfully')\r\n        );\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to export holidays:', error);\r\n        this.notificationService.error(\r\n          this.t('app.error'),\r\n          this.t('errors.server')\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  // Permission checks\r\n  canCreateHolidays(): boolean {\r\n    return this.permissionService.canManagePublicHolidays();\r\n  }\r\n\r\n  canImportHolidays(): boolean {\r\n    return this.permissionService.canImportPublicHolidays();\r\n  }\r\n\r\n  canExportHolidays(): boolean {\r\n    return this.permissionService.canExportPublicHolidays();\r\n  }\r\n\r\n  // Utility methods\r\n  getYearOptions(): number[] {\r\n    const currentYear = new Date().getFullYear();\r\n    const years: number[] = [];\r\n    for (let i = currentYear - 5; i <= currentYear + 5; i++) {\r\n      years.push(i);\r\n    }\r\n    return years;\r\n  }\r\n\r\n  getTemplateDisplayName(template: HolidayTemplate): string {\r\n    const templateNames = {\r\n      [HolidayTemplate.USA_Federal]: 'USA Federal Holidays',\r\n      [HolidayTemplate.UK_BankHolidays]: 'UK Bank Holidays',\r\n      [HolidayTemplate.SaudiArabia_National]: 'Saudi Arabia National Holidays'\r\n    };\r\n    return templateNames[template];\r\n  }\r\n}", "<div class=\"container-fluid\">\r\n  <!-- Page Header -->\r\n  <app-page-header\r\n    [title]=\"t('settings.holidays.title')\">\r\n  </app-page-header>\r\n\r\n  <!-- Unified Filter Component -->\r\n  <app-unified-filter\r\n    moduleName=\"public-holidays\"\r\n    [refreshing]=\"loading()\"\r\n    (searchChange)=\"onSearchTermChange($event)\"\r\n    (filtersChange)=\"onFiltersChange($event)\"\r\n    (add)=\"onCreateHoliday()\"\r\n    (refresh)=\"onRefreshData()\">\r\n  </app-unified-filter>\r\n\r\n  <!-- Additional Action Buttons -->\r\n  <div class=\"d-flex justify-content-end align-items-center mb-4\">\r\n    <div class=\"d-flex gap-2\">\r\n      <!-- Export Dropdown -->\r\n      @if (canExportHolidays()) {\r\n        <div class=\"dropdown\">\r\n          <button class=\"btn btn-outline-secondary dropdown-toggle\"\r\n                  type=\"button\"\r\n                  data-bs-toggle=\"dropdown\"\r\n                  aria-expanded=\"false\">\r\n            <i class=\"fas fa-download me-1\"></i>\r\n            {{ t('settings.holidays.export') }}\r\n          </button>\r\n          <ul class=\"dropdown-menu\">\r\n            <li>\r\n              <a class=\"dropdown-item\" href=\"#\" (click)=\"onExportHolidays('json'); $event.preventDefault()\">\r\n                <i class=\"fas fa-file-code me-2\"></i>\r\n                {{ t('settings.holidays.exportJson') }}\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a class=\"dropdown-item\" href=\"#\" (click)=\"onExportHolidays('csv'); $event.preventDefault()\">\r\n                <i class=\"fas fa-file-csv me-2\"></i>\r\n                {{ t('settings.holidays.exportCsv') }}\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a class=\"dropdown-item\" href=\"#\" (click)=\"onExportHolidays('ical'); $event.preventDefault()\">\r\n                <i class=\"fas fa-calendar me-2\"></i>\r\n                {{ t('settings.holidays.exportIcal') }}\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      }\r\n\r\n      <!-- Import Button -->\r\n      @if (canImportHolidays()) {\r\n        <button type=\"button\"\r\n                class=\"btn btn-outline-primary\"\r\n                (click)=\"onShowImportModal()\">\r\n          <i class=\"fas fa-upload me-1\"></i>\r\n          {{ t('settings.holidays.import') }}\r\n        </button>\r\n      }\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <!-- Data Table -->\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <app-data-table\r\n        [data]=\"tableData()\"\r\n        [columns]=\"tableColumns()\"\r\n        [actions]=\"tableActions()\"\r\n        [loading]=\"loading\"\r\n        [totalItems]=\"totalCount\"\r\n        [currentPage]=\"currentPage\"\r\n        [pageSize]=\"pageSize\"\r\n        [totalPages]=\"totalPages\"\r\n        (actionClick)=\"onActionClick($event)\"\r\n        (pageChange)=\"onPageChange($event)\"\r\n        (pageSizeChange)=\"onPageSizeChange($event)\">\r\n      </app-data-table>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Import Modal -->\r\n  <app-modal-wrapper\r\n    [show]=\"showImportModal()\"\r\n    [title]=\"t('settings.holidays.importTemplate')\"\r\n    [centered]=\"true\"\r\n    [loading]=\"importLoading()\"\r\n    (close)=\"onHideImportModal()\">\r\n\r\n    <div class=\"modal-body\">\r\n      <form>\r\n              <!-- Template Selection -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"template\" class=\"form-label\">{{ t('settings.holidays.template') }}</label>\r\n                <select id=\"template\"\r\n                        class=\"form-select\"\r\n                        [ngModel]=\"selectedTemplate()\"\r\n                        (ngModelChange)=\"selectedTemplate.set($event)\">\r\n                  @for (template of availableTemplates(); track template) {\r\n                    <option [value]=\"template\">{{ getTemplateDisplayName(template) }}</option>\r\n                  }\r\n                </select>\r\n              </div>\r\n\r\n              <!-- Year -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"importYear\" class=\"form-label\">{{ t('settings.holidays.year') }}</label>\r\n                <select id=\"importYear\"\r\n                        class=\"form-select\"\r\n                        [ngModel]=\"importYear()\"\r\n                        (ngModelChange)=\"importYear.set($event)\">\r\n                  @for (year of getYearOptions(); track year) {\r\n                    <option [value]=\"year\">{{ year }}</option>\r\n                  }\r\n                </select>\r\n              </div>\r\n\r\n              <!-- Branch (Optional) -->\r\n              <div class=\"mb-3\">\r\n                <label for=\"importBranch\" class=\"form-label\">{{ t('settings.holidays.branch') }}</label>\r\n                <select id=\"importBranch\"\r\n                        class=\"form-select\"\r\n                        [ngModel]=\"importBranchId()\"\r\n                        (ngModelChange)=\"importBranchId.set($event)\">\r\n                  <option [value]=\"undefined\">{{ t('settings.holidays.allBranches') }}</option>\r\n                  <!-- Branch options would be loaded from a branches service -->\r\n                </select>\r\n                <div class=\"form-text\">{{ t('settings.holidays.branchHelpText') }}</div>\r\n              </div>\r\n\r\n              <!-- Overwrite Existing -->\r\n              <div class=\"mb-3\">\r\n                <div class=\"form-check\">\r\n                  <input class=\"form-check-input\"\r\n                         type=\"checkbox\"\r\n                         id=\"overwriteExisting\"\r\n                         [ngModel]=\"overwriteExisting()\"\r\n                         (ngModelChange)=\"overwriteExisting.set($event)\">\r\n                  <label class=\"form-check-label\" for=\"overwriteExisting\">\r\n                    {{ t('settings.holidays.overwriteExisting') }}\r\n                  </label>\r\n                </div>\r\n                <div class=\"form-text\">{{ t('settings.holidays.overwriteHelpText') }}</div>\r\n              </div>\r\n      </form>\r\n    </div>\r\n\r\n    <div modal-footer class=\"d-flex gap-2 justify-content-end\">\r\n      <button type=\"button\"\r\n              class=\"btn btn-secondary\"\r\n              (click)=\"onHideImportModal()\"\r\n              [disabled]=\"importLoading()\">\r\n        {{ t('common.cancel') }}\r\n      </button>\r\n      <button type=\"button\"\r\n              class=\"btn btn-primary\"\r\n              (click)=\"onImportTemplate()\"\r\n              [disabled]=\"importLoading()\">\r\n        @if (importLoading()) {\r\n          <span class=\"spinner-border spinner-border-sm me-1\" role=\"status\" aria-hidden=\"true\"></span>\r\n        }\r\n        {{ t('settings.holidays.import') }}\r\n      </button>\r\n    </div>\r\n\r\n  </app-modal-wrapper>\r\n</div>"],
  "mappings": "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",
  "names": []
}
