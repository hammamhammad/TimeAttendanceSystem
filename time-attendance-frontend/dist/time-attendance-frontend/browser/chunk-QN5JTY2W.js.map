{
  "version": 3,
  "sources": ["src/app/pages/shifts/view-shift/view-shift.component.ts", "src/app/pages/shifts/view-shift/view-shift.component.html"],
  "sourcesContent": ["import { Component, signal, inject, OnInit, computed } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { I18nService } from '../../../core/i18n/i18n.service';\r\nimport { NotificationService } from '../../../core/notifications/notification.service';\r\nimport { ConfirmationService } from '../../../core/confirmation/confirmation.service';\r\nimport { PermissionService } from '../../../core/auth/permission.service';\r\nimport { ShiftsService } from '../shifts.service';\r\nimport { Shift, ShiftType, ShiftStatus, ShiftPeriod } from '../../../shared/models/shift.model';\r\nimport { PermissionActions } from '../../../shared/utils/permission.utils';\r\nimport { PageHeaderComponent } from '../../../shared/components/page-header/page-header.component';\r\nimport { DetailCardComponent, DetailField } from '../../../shared/components/detail-card/detail-card.component';\r\nimport { StatusBadgeComponent } from '../../../shared/components/status-badge/status-badge.component';\r\nimport { FormHeaderComponent } from '../../../shared/components/form-header/form-header.component';\r\nimport { LoadingSpinnerComponent } from '../../../shared/components/loading-spinner/loading-spinner.component';\r\n\r\n@Component({\r\n  selector: 'app-view-shift',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    LoadingSpinnerComponent,\r\n    DetailCardComponent,\r\n    FormHeaderComponent,\r\n    StatusBadgeComponent\r\n  ],\r\n  templateUrl: './view-shift.component.html',\r\n  styleUrls: ['./view-shift.component.css']\r\n})\r\nexport class ViewShiftComponent implements OnInit {\r\n  public i18n = inject(I18nService);\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n  private shiftsService = inject(ShiftsService);\r\n  private notificationService = inject(NotificationService);\r\n  private confirmationService = inject(ConfirmationService);\r\n  public permissionService = inject(PermissionService);\r\n\r\n  // Signals\r\n  loading = signal(false);\r\n  processing = signal(false);\r\n  shift = signal<Shift | null>(null);\r\n  error = signal<string | null>(null);\r\n\r\n  // Expose enums for template\r\n  ShiftType = ShiftType;\r\n  ShiftStatus = ShiftStatus;\r\n\r\n  get basicInfoFields(): DetailField[] {\r\n    const shift = this.shift();\r\n    if (!shift) return [];\r\n\r\n    return [\r\n      {\r\n        label: this.i18n.t('fields.name'),\r\n        value: shift.name\r\n      },\r\n      {\r\n        label: this.i18n.t('fields.description'),\r\n        value: shift.description || this.i18n.t('common.not_specified')\r\n      },\r\n      {\r\n        label: this.i18n.t('fields.shiftType'),\r\n        value: this.getShiftTypeLabel(shift.shiftType),\r\n        type: 'badge',\r\n        badgeVariant: shift.shiftType === ShiftType.TimeBased ? 'info' : 'secondary'\r\n      },\r\n      {\r\n        label: this.i18n.t('fields.status'),\r\n        value: this.getShiftStatusLabel(shift.status),\r\n        type: 'badge',\r\n        badgeVariant: this.getStatusBadgeVariant(shift.status) as 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark'\r\n      },\r\n      {\r\n        label: this.i18n.t('shifts.is_night_shift'),\r\n        value: shift.isNightShift ? this.i18n.t('common.yes') : this.i18n.t('common.no'),\r\n        type: 'badge',\r\n        badgeVariant: shift.isNightShift ? 'warning' : 'secondary'\r\n      }\r\n    ];\r\n  }\r\n\r\n  get workingHoursFields(): DetailField[] {\r\n    const shift = this.shift();\r\n    if (!shift) return [];\r\n\r\n    const fields: DetailField[] = [];\r\n\r\n    if (shift.requiredHours !== undefined) {\r\n      fields.push({\r\n        label: this.i18n.t('shifts.required_hours'),\r\n        value: `${shift.requiredHours} ${this.i18n.t('fields.hoursUnit')}`\r\n      });\r\n    }\r\n\r\n    if (shift.requiredWeeklyHours !== undefined) {\r\n      fields.push({\r\n        label: this.i18n.t('shifts.required_weekly_hours'),\r\n        value: `${shift.requiredWeeklyHours} ${this.i18n.t('fields.hoursUnit')}`\r\n      });\r\n    }\r\n\r\n    if (shift.hasCoreHours && shift.coreStart && shift.coreEnd) {\r\n      fields.push({\r\n        label: this.i18n.t('shifts.core_hours'),\r\n        value: `${shift.coreStart} - ${shift.coreEnd}`\r\n      });\r\n    }\r\n\r\n    return fields;\r\n  }\r\n\r\n  get workingDaysFields(): DetailField[] {\r\n    const shift = this.shift();\r\n    if (!shift) return [];\r\n\r\n    const workingDays = [];\r\n    if (shift.isSunday) workingDays.push(this.i18n.t('days.sunday'));\r\n    if (shift.isMonday) workingDays.push(this.i18n.t('days.monday'));\r\n    if (shift.isTuesday) workingDays.push(this.i18n.t('days.tuesday'));\r\n    if (shift.isWednesday) workingDays.push(this.i18n.t('days.wednesday'));\r\n    if (shift.isThursday) workingDays.push(this.i18n.t('days.thursday'));\r\n    if (shift.isFriday) workingDays.push(this.i18n.t('days.friday'));\r\n    if (shift.isSaturday) workingDays.push(this.i18n.t('days.saturday'));\r\n\r\n    return [\r\n      {\r\n        label: this.i18n.t('shifts.working_days'),\r\n        value: workingDays.length > 0 ? workingDays.join(', ') : this.i18n.t('shifts.no_working_days')\r\n      },\r\n      {\r\n        label: this.i18n.t('shifts.total_working_days'),\r\n        value: `${workingDays.length} ${workingDays.length === 1 ? this.i18n.t('fields.dayUnit') : this.i18n.t('fields.daysUnit')}`\r\n      }\r\n    ];\r\n  }\r\n\r\n  get settingsFields(): DetailField[] {\r\n    const shift = this.shift();\r\n    if (!shift) return [];\r\n\r\n    const fields: DetailField[] = [\r\n      {\r\n        label: this.i18n.t('shifts.check_in_required'),\r\n        value: shift.isCheckInRequired ? this.i18n.t('common.yes') : this.i18n.t('common.no'),\r\n        type: 'badge',\r\n        badgeVariant: shift.isCheckInRequired ? 'success' : 'secondary'\r\n      },\r\n      {\r\n        label: this.i18n.t('shifts.auto_check_out'),\r\n        value: shift.isAutoCheckOut ? this.i18n.t('common.yes') : this.i18n.t('common.no'),\r\n        type: 'badge',\r\n        badgeVariant: shift.isAutoCheckOut ? 'info' : 'secondary'\r\n      },\r\n      {\r\n        label: this.i18n.t('shifts.flexible_hours'),\r\n        value: shift.allowFlexibleHours ? this.i18n.t('common.enabled') : this.i18n.t('common.disabled'),\r\n        type: 'badge',\r\n        badgeVariant: shift.allowFlexibleHours ? 'success' : 'secondary'\r\n      }\r\n    ];\r\n\r\n    if (shift.allowFlexibleHours) {\r\n      if (shift.flexMinutesBefore !== undefined) {\r\n        fields.push({\r\n          label: this.i18n.t('shifts.flex_minutes_before'),\r\n          value: `${shift.flexMinutesBefore} ${this.i18n.t('fields.minutesUnit')}`\r\n        });\r\n      }\r\n      if (shift.flexMinutesAfter !== undefined) {\r\n        fields.push({\r\n          label: this.i18n.t('shifts.flex_minutes_after'),\r\n          value: `${shift.flexMinutesAfter} ${this.i18n.t('fields.minutesUnit')}`\r\n        });\r\n      }\r\n    }\r\n\r\n    if (shift.gracePeriodMinutes !== undefined) {\r\n      fields.push({\r\n        label: this.i18n.t('shifts.grace_period'),\r\n        value: `${shift.gracePeriodMinutes} ${this.i18n.t('fields.minutesUnit')}`\r\n      });\r\n    }\r\n\r\n    return fields;\r\n  }\r\n\r\n  get auditFields(): DetailField[] {\r\n    const shift = this.shift();\r\n    if (!shift) return [];\r\n\r\n    const fields: DetailField[] = [\r\n      {\r\n        label: this.i18n.t('fields.createdAt'),\r\n        value: shift.createdAtUtc,\r\n        type: 'datetime'\r\n      },\r\n      {\r\n        label: this.i18n.t('fields.createdBy'),\r\n        value: shift.createdBy\r\n      }\r\n    ];\r\n\r\n    if (shift.modifiedAtUtc && shift.modifiedBy) {\r\n      fields.push(\r\n        {\r\n          label: this.i18n.t('fields.modifiedAt'),\r\n          value: shift.modifiedAtUtc,\r\n          type: 'datetime'\r\n        },\r\n        {\r\n          label: this.i18n.t('fields.modifiedBy'),\r\n          value: shift.modifiedBy\r\n        }\r\n      );\r\n    }\r\n\r\n    return fields;\r\n  }\r\n\r\n  get shiftPeriods(): ShiftPeriod[] {\r\n    return this.shift()?.shiftPeriods || [];\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadShiftDetails();\r\n  }\r\n\r\n  private loadShiftDetails(): void {\r\n    const shiftId = this.route.snapshot.paramMap.get('id');\r\n    if (!shiftId) {\r\n      this.router.navigate(['/shifts']);\r\n      return;\r\n    }\r\n\r\n    this.loading.set(true);\r\n    this.error.set(null);\r\n\r\n    this.shiftsService.getShiftById(+shiftId).subscribe({\r\n      next: (shift) => {\r\n        this.shift.set(shift);\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load shift details:', error);\r\n        this.error.set(this.i18n.t('shifts.errors.load_failed'));\r\n        this.loading.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  async setAsDefault(): Promise<void> {\r\n    if (!this.shift()) return;\r\n\r\n    const result = await this.confirmationService.confirm({\r\n      title: this.i18n.t('shifts.set_default_shift'),\r\n      message: this.i18n.t('shifts.confirm_set_default'),\r\n      confirmText: this.i18n.t('shifts.set_default'),\r\n      cancelText: this.i18n.t('common.cancel'),\r\n      confirmButtonClass: 'btn-primary',\r\n      icon: 'fa-star',\r\n      iconClass: 'text-warning'\r\n    });\r\n\r\n    if (result.confirmed) {\r\n      this.processing.set(true);\r\n\r\n      this.shiftsService.setDefaultShift(this.shift()!.id).subscribe({\r\n        next: () => {\r\n          this.notificationService.success(\r\n            this.i18n.t('shifts.success.set_as_default')\r\n          );\r\n          this.processing.set(false);\r\n        },\r\n        error: (error) => {\r\n          console.error('Failed to set default shift:', error);\r\n          this.notificationService.error(\r\n            this.i18n.t('shifts.errors.set_default_failed')\r\n          );\r\n          this.processing.set(false);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async deleteShift(): Promise<void> {\r\n    if (!this.shift()) return;\r\n\r\n    const result = await this.confirmationService.confirm({\r\n      title: this.i18n.t('shifts.delete_shift'),\r\n      message: this.i18n.t('shifts.confirm_delete'),\r\n      confirmText: this.i18n.t('common.delete'),\r\n      cancelText: this.i18n.t('common.cancel'),\r\n      confirmButtonClass: 'btn-danger',\r\n      icon: 'fa-trash',\r\n      iconClass: 'text-danger'\r\n    });\r\n\r\n    if (result.confirmed) {\r\n      this.processing.set(true);\r\n\r\n      this.shiftsService.deleteShift(this.shift()!.id).subscribe({\r\n        next: () => {\r\n          this.notificationService.success(\r\n            this.i18n.t('shifts.success.deleted')\r\n          );\r\n          this.router.navigate(['/shifts']);\r\n        },\r\n        error: (error) => {\r\n          console.error('Failed to delete shift:', error);\r\n          this.notificationService.error(\r\n            this.i18n.t('shifts.errors.delete_failed')\r\n          );\r\n          this.processing.set(false);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Helper methods\r\n  public getShiftName(): string {\r\n    const shift = this.shift();\r\n    return shift ? shift.name : '';\r\n  }\r\n\r\n  public getShiftTypeLabel(shiftType: ShiftType): string {\r\n    switch (shiftType) {\r\n      case ShiftType.TimeBased:\r\n        return this.i18n.t('shifts.time_based');\r\n      case ShiftType.HoursOnly:\r\n        return this.i18n.t('shifts.hours_only');\r\n      default:\r\n        return (shiftType as any).toString();\r\n    }\r\n  }\r\n\r\n  public getShiftStatusLabel(status: ShiftStatus): string {\r\n    switch (status) {\r\n      case ShiftStatus.Active:\r\n        return this.i18n.t('common.active');\r\n      case ShiftStatus.Inactive:\r\n        return this.i18n.t('common.inactive');\r\n      case ShiftStatus.Draft:\r\n        return this.i18n.t('shifts.draft');\r\n      case ShiftStatus.Archived:\r\n        return this.i18n.t('shifts.archived');\r\n      default:\r\n        return (status as any).toString();\r\n    }\r\n  }\r\n\r\n  public getStatusBadgeVariant(status: ShiftStatus): 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' {\r\n    switch (status) {\r\n      case ShiftStatus.Active:\r\n        return 'success';\r\n      case ShiftStatus.Inactive:\r\n        return 'secondary';\r\n      case ShiftStatus.Draft:\r\n        return 'warning';\r\n      case ShiftStatus.Archived:\r\n        return 'dark';\r\n      default:\r\n        return 'secondary';\r\n    }\r\n  }\r\n\r\n  // Permission checks\r\n  canEdit(): boolean {\r\n    return this.permissionService.has(`shift.${PermissionActions.UPDATE}`);\r\n  }\r\n\r\n  canSetDefault(): boolean {\r\n    return this.permissionService.has(`shift.${PermissionActions.UPDATE}`);\r\n  }\r\n\r\n  canDelete(): boolean {\r\n    return this.permissionService.has(`shift.${PermissionActions.DELETE}`);\r\n  }\r\n\r\n  hasActiveActions(): boolean {\r\n    return this.canEdit() || this.canSetDefault() || this.canDelete();\r\n  }\r\n\r\n\r\n  formatTime(time: string): string {\r\n    // Assuming time is in HH:mm format\r\n    return time;\r\n  }\r\n\r\n  calculatePeriodHours(period: ShiftPeriod): string {\r\n    return `${period.hours} ${this.i18n.t('fields.hoursUnit')}`;\r\n  }\r\n\r\n  getTotalShiftHours(): string {\r\n    const periods = this.shiftPeriods;\r\n    if (periods.length === 0) return '0';\r\n\r\n    const totalHours = periods.reduce((sum, period) => sum + period.hours, 0);\r\n    return `${totalHours} ${this.i18n.t('fields.hoursUnit')}`;\r\n  }\r\n\r\n  // Computed properties for summary badges\r\n  shiftTypeBadge = computed(() => {\r\n    const shift = this.shift();\r\n    if (!shift) return { label: '', variant: 'secondary' as const };\r\n\r\n    const variant: 'info' | 'secondary' = shift.shiftType === ShiftType.TimeBased ? 'info' : 'secondary';\r\n    return {\r\n      label: this.getShiftTypeLabel(shift.shiftType),\r\n      variant\r\n    };\r\n  });\r\n\r\n  statusBadge = computed(() => {\r\n    const shift = this.shift();\r\n    if (!shift) return { label: '', variant: 'secondary' as const };\r\n\r\n    return {\r\n      label: this.getShiftStatusLabel(shift.status),\r\n      variant: this.getStatusBadgeVariant(shift.status)\r\n    };\r\n  });\r\n\r\n  flexibilityBadge = computed(() => {\r\n    const shift = this.shift();\r\n    if (!shift) return { label: '', variant: 'secondary' as const };\r\n\r\n    const variant: 'success' | 'secondary' = shift.allowFlexibleHours ? 'success' : 'secondary';\r\n    return {\r\n      label: shift.allowFlexibleHours ? this.i18n.t('common.enabled') : this.i18n.t('common.disabled'),\r\n      variant\r\n    };\r\n  });\r\n\r\n  nightShiftBadge = computed(() => {\r\n    const shift = this.shift();\r\n    return {\r\n      label: this.i18n.t('common.yes'),\r\n      variant: 'warning' as const,\r\n      visible: shift?.isNightShift || false\r\n    };\r\n  });\r\n}", "<div class=\"app-view-page\">\r\n  <!-- Standardized Page Header -->\r\n  <app-form-header\r\n    mode=\"view\"\r\n    [title]=\"i18n.t('shifts.view_shift')\"\r\n    moduleName=\"shifts\"\r\n    moduleRoute=\"shifts\"\r\n    [entityId]=\"shift()?.id\"\r\n    [loading]=\"loading()\">\r\n  </app-form-header>\r\n\r\n  <!-- Loading State -->\r\n  @if (loading()) {\r\n    <div class=\"text-center py-5\">\r\n      <app-loading-spinner\r\n        [message]=\"i18n.t('shifts.loading_details')\"\r\n        [variant]=\"'primary'\"\r\n        [centered]=\"true\">\r\n      </app-loading-spinner>\r\n    </div>\r\n  }\r\n\r\n  <!-- Error State -->\r\n  @if (error()) {\r\n    <div class=\"alert alert-danger\" role=\"alert\">\r\n      <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n      {{ error() }}\r\n    </div>\r\n  }\r\n\r\n  <!-- Shift Details -->\r\n  @if (shift() && !loading()) {\r\n    <div class=\"app-desktop-sidebar\">\r\n      <!-- Main Content -->\r\n      <div class=\"app-main-content\">\r\n        <!-- Basic Information Card -->\r\n        <app-detail-card\r\n          [title]=\"i18n.t('shifts.basic_information')\"\r\n          icon=\"fas fa-info-circle\"\r\n          [fields]=\"basicInfoFields\"\r\n          layout=\"two-column\">\r\n        </app-detail-card>\r\n\r\n        <!-- Working Hours Card -->\r\n        @if (workingHoursFields.length > 0) {\r\n          <app-detail-card\r\n            [title]=\"i18n.t('shifts.working_hours')\"\r\n            icon=\"fas fa-clock\"\r\n            [fields]=\"workingHoursFields\"\r\n            layout=\"two-column\"\r\n            class=\"mt-4\">\r\n          </app-detail-card>\r\n        }\r\n\r\n        <!-- Shift Periods Card -->\r\n        @if (shiftPeriods.length > 0) {\r\n          <div class=\"card mt-4\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">\r\n                <i class=\"fas fa-calendar-day me-2\"></i>\r\n                {{ i18n.t('shifts.shift_periods') }}\r\n              </h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"shift-periods\">\r\n                @for (period of shiftPeriods; track period.id) {\r\n                  <div class=\"period-item\" [class.night-period]=\"period.isNightPeriod\">\r\n                    <div class=\"period-header\">\r\n                      <span class=\"period-order\">#{{ period.periodOrder }}</span>\r\n                      <span class=\"period-time\">{{ formatTime(period.startTime) }} - {{ formatTime(period.endTime) }}</span>\r\n                      @if (period.isNightPeriod) {\r\n                        <span class=\"badge bg-warning ms-2\">{{ i18n.t('shifts.night_period') }}</span>\r\n                      }\r\n                    </div>\r\n                    <div class=\"period-duration\">\r\n                      <i class=\"fas fa-clock me-1\"></i>\r\n                      {{ calculatePeriodHours(period) }}\r\n                    </div>\r\n                  </div>\r\n                }\r\n              </div>\r\n              <div class=\"total-hours mt-3\">\r\n                <strong>{{ i18n.t('shifts.total_shift_hours') }}: {{ getTotalShiftHours() }}</strong>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <!-- Working Days Card -->\r\n        <app-detail-card\r\n          [title]=\"i18n.t('shifts.working_days')\"\r\n          icon=\"fas fa-calendar-week\"\r\n          [fields]=\"workingDaysFields\"\r\n          layout=\"two-column\"\r\n          class=\"mt-4\">\r\n        </app-detail-card>\r\n\r\n        <!-- Settings Card -->\r\n        <app-detail-card\r\n          [title]=\"i18n.t('shifts.shift_settings')\"\r\n          icon=\"fas fa-cogs\"\r\n          [fields]=\"settingsFields\"\r\n          layout=\"two-column\"\r\n          class=\"mt-4\">\r\n        </app-detail-card>\r\n\r\n        <!-- Audit Information Card -->\r\n        <app-detail-card\r\n          [title]=\"i18n.t('shifts.audit_information')\"\r\n          icon=\"fas fa-history\"\r\n          [fields]=\"auditFields\"\r\n          layout=\"two-column\"\r\n          class=\"mt-4\">\r\n        </app-detail-card>\r\n      </div>\r\n\r\n      <!-- Sidebar -->\r\n      <div class=\"app-sidebar-content\">\r\n        <!-- Actions Card -->\r\n        @if (hasActiveActions()) {\r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-header\">\r\n              <h6 class=\"card-title mb-0\">\r\n                <i class=\"fas fa-cogs me-2\"></i>\r\n                {{ i18n.t('common.actions') }}\r\n              </h6>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"d-grid gap-2\">\r\n\r\n                <!-- Set as Default Action -->\r\n                @if (canSetDefault()) {\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-warning\"\r\n                    (click)=\"setAsDefault()\"\r\n                    [disabled]=\"processing()\">\r\n                    @if (processing()) {\r\n                      <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                    } @else {\r\n                      <i class=\"fas fa-star me-2\"></i>\r\n                    }\r\n                    {{ i18n.t('shifts.set_default') }}\r\n                  </button>\r\n                }\r\n\r\n                <!-- Delete Action -->\r\n                @if (canDelete()) {\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-outline-danger\"\r\n                    (click)=\"deleteShift()\"\r\n                    [disabled]=\"processing()\">\r\n                    @if (processing()) {\r\n                      <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                    } @else {\r\n                      <i class=\"fas fa-trash me-2\"></i>\r\n                    }\r\n                    {{ i18n.t('common.delete') }}\r\n                  </button>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <!-- Shift Summary -->\r\n        <div class=\"card mb-3\">\r\n          <div class=\"card-header\">\r\n            <h6 class=\"card-title mb-0\">\r\n              <i class=\"fas fa-chart-pie me-2\"></i>\r\n              {{ i18n.t('shifts.shift_summary') }}\r\n            </h6>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"shift-summary\">\r\n              <!-- Shift Type -->\r\n              <div class=\"summary-item\">\r\n                <div class=\"summary-label\">{{ i18n.t('fields.type') }}</div>\r\n                <div class=\"summary-value\">\r\n                  <app-status-badge\r\n                    [status]=\"shiftTypeBadge().label\"\r\n                    [variant]=\"shiftTypeBadge().variant\">\r\n                  </app-status-badge>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Status -->\r\n              <div class=\"summary-item\">\r\n                <div class=\"summary-label\">{{ i18n.t('fields.status') }}</div>\r\n                <div class=\"summary-value\">\r\n                  <app-status-badge\r\n                    [status]=\"statusBadge().label\"\r\n                    [variant]=\"statusBadge().variant\">\r\n                  </app-status-badge>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Total Periods -->\r\n              <div class=\"summary-item\">\r\n                <div class=\"summary-label\">{{ i18n.t('shifts.total_periods') }}</div>\r\n                <div class=\"summary-value periods-count\">{{ shiftPeriods.length }}</div>\r\n              </div>\r\n\r\n              <!-- Total Hours -->\r\n              @if (shiftPeriods.length > 0) {\r\n                <div class=\"summary-item\">\r\n                  <div class=\"summary-label\">{{ i18n.t('shifts.total_hours') }}</div>\r\n                  <div class=\"summary-value hours-value\">{{ getTotalShiftHours() }}</div>\r\n                </div>\r\n              }\r\n\r\n              <!-- Flexibility -->\r\n              <div class=\"summary-item\">\r\n                <div class=\"summary-label\">{{ i18n.t('shifts.flexible_hours') }}</div>\r\n                <div class=\"summary-value\">\r\n                  <app-status-badge\r\n                    [status]=\"flexibilityBadge().label\"\r\n                    [variant]=\"flexibilityBadge().variant\">\r\n                  </app-status-badge>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Night Shift -->\r\n              @if (nightShiftBadge().visible) {\r\n                <div class=\"summary-item\">\r\n                  <div class=\"summary-label\">{{ i18n.t('shifts.night_shift') }}</div>\r\n                  <div class=\"summary-value\">\r\n                    <app-status-badge\r\n                      [status]=\"nightShiftBadge().label\"\r\n                      [variant]=\"nightShiftBadge().variant\"\r\n                      icon=\"fas fa-moon\">\r\n                    </app-status-badge>\r\n                  </div>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Back Navigation -->\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h6 class=\"card-title mb-0\">\r\n              <i class=\"fas fa-arrow-left me-2\"></i>\r\n              {{ i18n.t('common.navigation') }}\r\n            </h6>\r\n          </div>\r\n          <div class=\"card-body\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n</div>"],
  "mappings": "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",
  "names": []
}
