{
  "version": 3,
  "sources": ["src/app/pages/employee-excuses/excuse-request-form/excuse-request-form.component.ts", "src/app/pages/employee-excuses/excuse-request-form/excuse-request-form.component.html"],
  "sourcesContent": ["import { Component, OnInit, signal, inject, computed } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { I18nService } from '../../../core/i18n/i18n.service';\r\nimport { NotificationService } from '../../../core/notifications/notification.service';\r\nimport { EmployeeExcusesService } from '../employee-excuses.service';\r\nimport { EmployeesService } from '../../employees/employees.service';\r\nimport { SearchableSelectComponent, SearchableSelectOption } from '../../../shared/components/searchable-select/searchable-select.component';\r\nimport { FormHeaderComponent } from '../../../shared/components/form-header/form-header.component';\r\nimport {\r\n  CreateEmployeeExcuseRequest,\r\n  UpdateEmployeeExcuseRequest,\r\n  EmployeeExcuseDto,\r\n  ExcuseType\r\n} from '../../../shared/models/employee-excuse.model';\r\n\r\n@Component({\r\n  selector: 'app-excuse-request-form',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SearchableSelectComponent,\r\n    FormHeaderComponent\r\n  ],\r\n  templateUrl: './excuse-request-form.component.html',\r\n  styleUrls: ['./excuse-request-form.component.css']\r\n})\r\nexport class ExcuseRequestFormComponent implements OnInit {\r\n  public i18n = inject(I18nService);\r\n  private fb = inject(FormBuilder);\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n  private employeeExcusesService = inject(EmployeeExcusesService);\r\n  private employeesService = inject(EmployeesService);\r\n  private notificationService = inject(NotificationService);\r\n\r\n  // Signals\r\n  loading = signal(false);\r\n  saving = signal(false);\r\n  isEditMode = signal(false);\r\n  currentExcuse = signal<EmployeeExcuseDto | null>(null);\r\n  selectedFile = signal<File | null>(null);\r\n  currentUser = signal<any>(null);\r\n  availableEmployees = signal<Array<{id: number, name: string, employeeNumber: string}>>([]);\r\n  noPolicyActive = signal(false);\r\n  policyError = signal<string | null>(null);\r\n\r\n  // Computed property for searchable select options\r\n  employeeOptions = computed<SearchableSelectOption[]>(() => {\r\n    return this.availableEmployees().map(employee => ({\r\n      value: employee.id,\r\n      label: employee.name,\r\n      subLabel: employee.employeeNumber ? `Employee #${employee.employeeNumber}` : undefined\r\n    }));\r\n  });\r\n\r\n\r\n  // Form\r\n  form: FormGroup;\r\n\r\n  constructor() {\r\n    this.form = this.createForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadEmployees();\r\n    this.checkEditMode();\r\n\r\n    // Check policy status after component initialization\r\n    setTimeout(() => {\r\n      this.checkPolicyStatus();\r\n    }, 100);\r\n  }\r\n\r\n  private createForm(): FormGroup {\r\n    return this.fb.group({\r\n      employeeId: ['', [Validators.required]],\r\n      excuseType: ['PersonalExcuse', [Validators.required]],\r\n      excuseDate: ['', [Validators.required]],\r\n      startTime: ['', [Validators.required]],\r\n      endTime: ['', [Validators.required]],\r\n      reason: ['', [Validators.required, Validators.maxLength(500)]],\r\n      approvalStatus: ['Approved', [Validators.required]], // Default to Approved for HR entry\r\n      reviewerComments: [''],\r\n      attachment: [null]\r\n    });\r\n  }\r\n\r\n  private loadEmployees(): void {\r\n    this.employeesService.getEmployeesDropdown().subscribe({\r\n      next: (employees) => {\r\n        this.availableEmployees.set(employees);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load employees:', error);\r\n        this.notificationService.error(\r\n          this.i18n.t('employee_excuses.load_employees_error')\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  private checkEditMode(): void {\r\n    const excuseId = this.route.snapshot.paramMap.get('id');\r\n    if (excuseId) {\r\n      this.isEditMode.set(true);\r\n      this.loadExcuse(+excuseId);\r\n    }\r\n  }\r\n\r\n  private loadExcuse(id: number): void {\r\n    this.loading.set(true);\r\n\r\n    this.employeeExcusesService.getEmployeeExcuseById(id).subscribe({\r\n      next: (excuse) => {\r\n        if (excuse) {\r\n          this.currentExcuse.set(excuse);\r\n          this.populateForm(excuse);\r\n        } else {\r\n          this.notificationService.error(\r\n            this.i18n.t('employee_excuses.not_found')\r\n          );\r\n          this.router.navigate(['/employee-excuses']);\r\n        }\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load excuse:', error);\r\n        this.notificationService.error(\r\n          this.i18n.t('employee_excuses.load_error')\r\n        );\r\n        this.loading.set(false);\r\n        this.router.navigate(['/employee-excuses']);\r\n      }\r\n    });\r\n  }\r\n\r\n  private populateForm(excuse: EmployeeExcuseDto): void {\r\n    // Convert dates to proper format for inputs\r\n    const excuseDate = new Date(excuse.excuseDate).toISOString().split('T')[0];\r\n\r\n    this.form.patchValue({\r\n      employeeId: excuse.employeeId,\r\n      excuseType: excuse.excuseType || 'PersonalExcuse',\r\n      excuseDate: excuseDate,\r\n      startTime: excuse.startTime,\r\n      endTime: excuse.endTime,\r\n      reason: excuse.reason,\r\n      approvalStatus: excuse.status || 'Pending',\r\n      reviewerComments: excuse.reviewerComments || ''\r\n    });\r\n\r\n    // Disable the employee field in edit mode\r\n    if (this.isEditMode()) {\r\n      this.form.get('employeeId')?.disable();\r\n    }\r\n  }\r\n\r\n  onFileSelect(event: Event): void {\r\n    const target = event.target as HTMLInputElement;\r\n    const file = target.files?.[0] || null;\r\n\r\n    if (file) {\r\n      // Validate file size (max 5MB)\r\n      const maxSize = 5 * 1024 * 1024; // 5MB\r\n      if (file.size > maxSize) {\r\n        this.notificationService.error(\r\n          this.i18n.t('employee_excuses.file_too_large')\r\n        );\r\n        target.value = '';\r\n        return;\r\n      }\r\n\r\n      // Validate file type\r\n      const allowedTypes = [\r\n        'image/jpeg',\r\n        'image/png',\r\n        'image/gif',\r\n        'application/pdf',\r\n        'application/msword',\r\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document'\r\n      ];\r\n\r\n      if (!allowedTypes.includes(file.type)) {\r\n        this.notificationService.error(\r\n          this.i18n.t('employee_excuses.invalid_file_type')\r\n        );\r\n        target.value = '';\r\n        return;\r\n      }\r\n\r\n      this.selectedFile.set(file);\r\n    } else {\r\n      this.selectedFile.set(null);\r\n    }\r\n  }\r\n\r\n  private checkPolicyStatus(): void {\r\n    // Only check policy status for new excuse creation (not edit mode)\r\n    if (this.isEditMode()) return;\r\n\r\n    // Check if we have at least one employee to validate with\r\n    if (this.availableEmployees().length === 0) {\r\n      // Wait for employees to load, then check policy\r\n      setTimeout(() => this.checkPolicyStatus(), 500);\r\n      return;\r\n    }\r\n\r\n    const firstEmployee = this.availableEmployees()[0];\r\n    if (!firstEmployee) return;\r\n\r\n    // Use current date and default times for validation\r\n    const validationRequest = {\r\n      employeeId: firstEmployee.id,\r\n      excuseDate: new Date().toISOString().split('T')[0],\r\n      startTime: '09:00',\r\n      endTime: '10:00',\r\n      excuseType: 'PersonalExcuse' as ExcuseType\r\n    };\r\n\r\n    this.employeeExcusesService.validateExcuse(validationRequest).subscribe({\r\n      next: (result) => {\r\n        if (result.data && result.data.validationErrors) {\r\n          const noPolicyError = result.data.validationErrors.find((error: string) =>\r\n            error.includes('No active excuse policy') ||\r\n            error.includes('policy')\r\n          );\r\n\r\n          if (noPolicyError) {\r\n            this.noPolicyActive.set(true);\r\n            this.policyError.set(noPolicyError);\r\n          }\r\n        }\r\n      },\r\n      error: (error) => {\r\n        console.error('Policy validation error:', error);\r\n        // If the API returns an error about no policy, handle it\r\n        if (error.error?.error?.includes('policy') || error.error?.message?.includes('policy')) {\r\n          this.noPolicyActive.set(true);\r\n          this.policyError.set(error.error?.error || error.error?.message || 'No active excuse policy found');\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.form.invalid) {\r\n      this.markFormGroupTouched();\r\n      return;\r\n    }\r\n\r\n    // Check if no policy is active and prevent submission\r\n    if (this.noPolicyActive()) {\r\n      this.notificationService.error(\r\n        this.policyError() || this.i18n.t('employee_excuses.no_active_policy')\r\n      );\r\n      return;\r\n    }\r\n\r\n    // Validate time range\r\n    if (!this.isValidTimeRange()) {\r\n      this.notificationService.error(\r\n        this.i18n.t('employee_excuses.invalid_time_range')\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.saving.set(true);\r\n    const formValue = this.form.value;\r\n\r\n    if (this.isEditMode()) {\r\n      this.updateExcuse(formValue);\r\n    } else {\r\n      this.createExcuse(formValue);\r\n    }\r\n  }\r\n\r\n  private createExcuse(formValue: any): void {\r\n    const request: CreateEmployeeExcuseRequest = {\r\n      employeeId: +formValue.employeeId,\r\n      excuseDate: formValue.excuseDate,\r\n      startTime: formValue.startTime,\r\n      endTime: formValue.endTime,\r\n      reason: formValue.reason,\r\n      excuseType: formValue.excuseType as ExcuseType,\r\n      attachmentFile: this.selectedFile() || undefined\r\n    };\r\n\r\n    this.employeeExcusesService.createEmployeeExcuse(request).subscribe({\r\n      next: () => {\r\n        this.notificationService.success(\r\n          this.i18n.t('employee_excuses.create_success')\r\n        );\r\n        this.router.navigate(['/employee-excuses']);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to create excuse:', error);\r\n\r\n        // Extract meaningful error message from API response\r\n        let errorMessage = this.i18n.t('employee_excuses.create_error');\r\n\r\n        if (error?.error?.error) {\r\n          // Handle case where error message is in error.error.error\r\n          errorMessage = error.error.error;\r\n        } else if (error?.error?.message) {\r\n          // Handle case where error message is in error.error.message\r\n          errorMessage = error.error.message;\r\n        } else if (typeof error?.error === 'string') {\r\n          // Handle case where error.error is a string\r\n          errorMessage = error.error;\r\n        } else if (error?.message) {\r\n          // Handle case where error message is in error.message\r\n          errorMessage = error.message;\r\n        }\r\n\r\n        this.notificationService.error(errorMessage);\r\n        this.saving.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateExcuse(formValue: any): void {\r\n    if (!this.currentExcuse()) return;\r\n\r\n    const request: UpdateEmployeeExcuseRequest = {\r\n      excuseDate: formValue.excuseDate,\r\n      excuseType: formValue.excuseType as ExcuseType,\r\n      startTime: formValue.startTime,\r\n      endTime: formValue.endTime,\r\n      reason: formValue.reason,\r\n      approvalStatus: formValue.approvalStatus,\r\n      reviewerComments: formValue.reviewerComments || undefined,\r\n      attachmentFile: this.selectedFile() || undefined\r\n    };\r\n\r\n    this.employeeExcusesService.updateEmployeeExcuse(\r\n      this.currentExcuse()!.id,\r\n      request\r\n    ).subscribe({\r\n      next: () => {\r\n        this.notificationService.success(\r\n          this.i18n.t('employee_excuses.update_success')\r\n        );\r\n        this.router.navigate(['/employee-excuses']);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to update excuse:', error);\r\n\r\n        // Extract meaningful error message from API response\r\n        let errorMessage = this.i18n.t('employee_excuses.update_error');\r\n\r\n        if (error?.error?.error) {\r\n          // Handle case where error message is in error.error.error\r\n          errorMessage = error.error.error;\r\n        } else if (error?.error?.message) {\r\n          // Handle case where error message is in error.error.message\r\n          errorMessage = error.error.message;\r\n        } else if (typeof error?.error === 'string') {\r\n          // Handle case where error.error is a string\r\n          errorMessage = error.error;\r\n        } else if (error?.message) {\r\n          // Handle case where error message is in error.message\r\n          errorMessage = error.message;\r\n        }\r\n\r\n        this.notificationService.error(errorMessage);\r\n        this.saving.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  private isValidTimeRange(): boolean {\r\n    const startTime = this.form.get('startTime')?.value;\r\n    const endTime = this.form.get('endTime')?.value;\r\n\r\n    if (!startTime || !endTime) return false;\r\n\r\n    return startTime < endTime;\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.router.navigate(['/employee-excuses']);\r\n  }\r\n\r\n  onReset(): void {\r\n    if (this.isEditMode() && this.currentExcuse()) {\r\n      this.populateForm(this.currentExcuse()!);\r\n    } else {\r\n      this.form.reset();\r\n      this.selectedFile.set(null);\r\n      // Reset file input\r\n      const fileInput = document.getElementById('attachment') as HTMLInputElement;\r\n      if (fileInput) {\r\n        fileInput.value = '';\r\n      }\r\n    }\r\n  }\r\n\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.form.controls).forEach(key => {\r\n      const control = this.form.get(key);\r\n      if (control) {\r\n        control.markAsTouched();\r\n      }\r\n    });\r\n  }\r\n\r\n  isFieldInvalid(fieldName: string): boolean {\r\n    const field = this.form.get(fieldName);\r\n    return !!(field && field.invalid && field.touched);\r\n  }\r\n\r\n  getFieldError(fieldName: string): string {\r\n    const field = this.form.get(fieldName);\r\n    if (!field || !field.errors || !field.touched) return '';\r\n\r\n    const errors = field.errors;\r\n    if (errors['required']) return this.i18n.t('validation.required');\r\n    if (errors['maxlength']) return this.i18n.t('validation.maxLength');\r\n\r\n    return '';\r\n  }\r\n\r\n  calculateDuration(): string {\r\n    const startTime = this.form.get('startTime')?.value;\r\n    const endTime = this.form.get('endTime')?.value;\r\n\r\n    if (!startTime || !endTime) return '';\r\n\r\n    // Parse times\r\n    const [startHour, startMinute] = startTime.split(':').map(Number);\r\n    const [endHour, endMinute] = endTime.split(':').map(Number);\r\n\r\n    // Calculate duration in minutes\r\n    const startMinutes = startHour * 60 + startMinute;\r\n    const endMinutes = endHour * 60 + endMinute;\r\n    const durationMinutes = endMinutes - startMinutes;\r\n\r\n    if (durationMinutes <= 0) return '';\r\n\r\n    const hours = Math.floor(durationMinutes / 60);\r\n    const minutes = durationMinutes % 60;\r\n\r\n    if (hours === 0) {\r\n      return `${minutes} ${this.i18n.t('common.minutes')}`;\r\n    } else if (minutes === 0) {\r\n      return `${hours} ${this.i18n.t('common.hours')}`;\r\n    } else {\r\n      return `${hours} ${this.i18n.t('common.hours')} ${minutes} ${this.i18n.t('common.minutes')}`;\r\n    }\r\n  }\r\n\r\n  getFormattedFileSize(): string {\r\n    const file = this.selectedFile();\r\n    if (!file) return '';\r\n\r\n    const size = file.size;\r\n    if (size < 1024) {\r\n      return `${size} B`;\r\n    } else if (size < 1024 * 1024) {\r\n      return `${(size / 1024).toFixed(1)} KB`;\r\n    } else {\r\n      return `${(size / (1024 * 1024)).toFixed(1)} MB`;\r\n    }\r\n  }\r\n\r\n  removeSelectedFile(): void {\r\n    this.selectedFile.set(null);\r\n    const fileInput = document.getElementById('attachment') as HTMLInputElement;\r\n    if (fileInput) {\r\n      fileInput.value = '';\r\n    }\r\n  }\r\n\r\n  hasExistingAttachment(): boolean {\r\n    return this.isEditMode() && !!this.currentExcuse()?.attachmentUrl;\r\n  }\r\n\r\n  getPageTitle(): string {\r\n    return this.isEditMode()\r\n      ? this.i18n.t('employee_excuses.edit_request')\r\n      : this.i18n.t('employee_excuses.create_request');\r\n  }\r\n\r\n  getFormMode(): 'create' | 'edit' {\r\n    return this.isEditMode() ? 'edit' : 'create';\r\n  }\r\n\r\n  getExcuseId(): number | undefined {\r\n    return this.currentExcuse()?.id;\r\n  }\r\n\r\n  getSubmitButtonText(): string {\r\n    if (this.saving()) {\r\n      return this.isEditMode()\r\n        ? this.i18n.t('employee_excuses.updating')\r\n        : this.i18n.t('employee_excuses.creating');\r\n    }\r\n    return this.isEditMode()\r\n      ? this.i18n.t('employee_excuses.update_request')\r\n      : this.i18n.t('employee_excuses.submit_request');\r\n  }\r\n\r\n}", "<div class=\"container-fluid\">\r\n  <!-- Header -->\r\n  <app-form-header\r\n    [mode]=\"getFormMode()\"\r\n    [title]=\"getPageTitle()\"\r\n    moduleName=\"employee-excuses\"\r\n    moduleRoute=\"employee-excuses\"\r\n    [entityId]=\"getExcuseId()\"\r\n    [loading]=\"saving()\">\r\n  </app-form-header>\r\n\r\n  <!-- Loading State -->\r\n  @if (loading()) {\r\n    <div class=\"d-flex justify-content-center py-5\">\r\n      <div class=\"spinner-border\" role=\"status\">\r\n        <span class=\"visually-hidden\">{{ i18n.t('common.loading') }}</span>\r\n      </div>\r\n    </div>\r\n  } @else {\r\n    <!-- Main Form -->\r\n    <div class=\"card\">\r\n      <div class=\"card-header\">\r\n        <h5 class=\"card-title mb-0\">\r\n          <i class=\"fa-solid fa-clipboard-user me-2\"></i>\r\n          {{ i18n.t('employee_excuses.excuse_information') }}\r\n        </h5>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <!-- No Policy Alert -->\r\n        @if (noPolicyActive()) {\r\n          <div class=\"alert alert-danger d-flex align-items-center mb-4\" role=\"alert\">\r\n            <i class=\"fas fa-exclamation-triangle me-3\"></i>\r\n            <div>\r\n              <h6 class=\"alert-heading mb-1\">{{ i18n.t('employee_excuses.no_policy_title') }}</h6>\r\n              <p class=\"mb-2\">{{ policyError() || i18n.t('employee_excuses.no_active_policy') }}</p>\r\n              <p class=\"mb-0\">\r\n                <strong>{{ i18n.t('employee_excuses.contact_admin') }}</strong>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" [class.pe-none]=\"noPolicyActive()\">\r\n          <!-- Required Information Section -->\r\n          <div class=\"mb-4\">\r\n            <h6 class=\"text-primary mb-3\">\r\n              <i class=\"fa-solid fa-asterisk me-2\"></i>\r\n              {{ i18n.t('employee_excuses.required_information') }}\r\n            </h6>\r\n            <div class=\"row g-3\">\r\n              <!-- Employee Selection -->\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">\r\n                  {{ i18n.t('employee_excuses.employee') }}\r\n                  <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <app-searchable-select\r\n                  [options]=\"employeeOptions()\"\r\n                  [placeholder]=\"i18n.t('employee_excuses.select_employee')\"\r\n                  [searchable]=\"true\"\r\n                  [clearable]=\"true\"\r\n                  [disabled]=\"noPolicyActive() || isEditMode()\"\r\n                  formControlName=\"employeeId\"\r\n                  [class.is-invalid]=\"isFieldInvalid('employeeId')\">\r\n                </app-searchable-select>\r\n                @if (isFieldInvalid('employeeId')) {\r\n                  <div class=\"invalid-feedback\">{{ getFieldError('employeeId') }}</div>\r\n                }\r\n              </div>\r\n\r\n              <!-- Excuse Date -->\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">\r\n                  {{ i18n.t('employee_excuses.excuse_date') }}\r\n                  <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"excuseDate\"\r\n                  [class.is-invalid]=\"isFieldInvalid('excuseDate')\">\r\n                @if (isFieldInvalid('excuseDate')) {\r\n                  <div class=\"invalid-feedback\">{{ getFieldError('excuseDate') }}</div>\r\n                }\r\n              </div>\r\n\r\n              <!-- Start Time -->\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">\r\n                  {{ i18n.t('employee_excuses.start_time') }}\r\n                  <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"time\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"startTime\"\r\n                  [class.is-invalid]=\"isFieldInvalid('startTime')\">\r\n                @if (isFieldInvalid('startTime')) {\r\n                  <div class=\"invalid-feedback\">{{ getFieldError('startTime') }}</div>\r\n                }\r\n              </div>\r\n\r\n              <!-- End Time -->\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">\r\n                  {{ i18n.t('employee_excuses.end_time') }}\r\n                  <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"time\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"endTime\"\r\n                  [class.is-invalid]=\"isFieldInvalid('endTime')\">\r\n                @if (isFieldInvalid('endTime')) {\r\n                  <div class=\"invalid-feedback\">{{ getFieldError('endTime') }}</div>\r\n                }\r\n              </div>\r\n\r\n              <!-- Duration Display -->\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">{{ i18n.t('employee_excuses.duration') }}</label>\r\n                <div class=\"form-control-plaintext bg-light border rounded p-2\">\r\n                  @if (calculateDuration()) {\r\n                    <i class=\"fas fa-clock text-primary me-2\"></i>\r\n                    {{ calculateDuration() }}\r\n                  } @else {\r\n                    <span class=\"text-muted\">{{ i18n.t('employee_excuses.select_time_range') }}</span>\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Excuse Type -->\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">\r\n                  {{ i18n.t('employee_excuses.excuse_type') }}\r\n                  <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <select\r\n                  class=\"form-select\"\r\n                  formControlName=\"excuseType\"\r\n                  [class.is-invalid]=\"isFieldInvalid('excuseType')\">\r\n                  <option value=\"PersonalExcuse\">{{ i18n.t('employee_excuses.personal') }}</option>\r\n                  <option value=\"OfficialDuty\">{{ i18n.t('employee_excuses.official') }}</option>\r\n                </select>\r\n                @if (isFieldInvalid('excuseType')) {\r\n                  <div class=\"invalid-feedback\">{{ getFieldError('excuseType') }}</div>\r\n                }\r\n              </div>\r\n\r\n              <!-- Reason -->\r\n              <div class=\"col-12\">\r\n                <label class=\"form-label\">\r\n                  {{ i18n.t('employee_excuses.reason') }}\r\n                  <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <textarea\r\n                  class=\"form-control\"\r\n                  rows=\"3\"\r\n                  formControlName=\"reason\"\r\n                  [placeholder]=\"i18n.t('employee_excuses.reason_placeholder')\"\r\n                  [class.is-invalid]=\"isFieldInvalid('reason')\"\r\n                  maxlength=\"500\"></textarea>\r\n                @if (isFieldInvalid('reason')) {\r\n                  <div class=\"invalid-feedback\">{{ getFieldError('reason') }}</div>\r\n                }\r\n                <div class=\"form-text\">\r\n                  {{ form.get('reason')?.value?.length || 0 }}/500 {{ i18n.t('common.characters') }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <hr>\r\n\r\n          <!-- Additional Information Section -->\r\n          <div class=\"mb-4\">\r\n            <h6 class=\"text-secondary mb-3\">\r\n              <i class=\"fa-solid fa-info-circle me-2\"></i>\r\n              {{ i18n.t('employee_excuses.additional_information') }}\r\n            </h6>\r\n            <div class=\"row g-3\">\r\n              <!-- Approval Status -->\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">\r\n                  {{ i18n.t('employee_excuses.status') }}\r\n                  <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <select\r\n                  class=\"form-select\"\r\n                  formControlName=\"approvalStatus\"\r\n                  [class.is-invalid]=\"isFieldInvalid('approvalStatus')\">\r\n                  <option value=\"Pending\">{{ i18n.t('employee_excuses.status_pending') }}</option>\r\n                  <option value=\"Approved\">{{ i18n.t('employee_excuses.status_approved') }}</option>\r\n                  <option value=\"Rejected\">{{ i18n.t('employee_excuses.status_rejected') }}</option>\r\n                  <option value=\"Cancelled\">{{ i18n.t('employee_excuses.status_cancelled') }}</option>\r\n                </select>\r\n                @if (isFieldInvalid('approvalStatus')) {\r\n                  <div class=\"invalid-feedback\">{{ getFieldError('approvalStatus') }}</div>\r\n                }\r\n              </div>\r\n\r\n              <!-- Reviewer Comments -->\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">{{ i18n.t('employee_excuses.reviewer_comments') }}</label>\r\n                <textarea\r\n                  class=\"form-control\"\r\n                  rows=\"3\"\r\n                  formControlName=\"reviewerComments\"\r\n                  [placeholder]=\"i18n.t('employee_excuses.reviewer_comments_placeholder')\"\r\n                  maxlength=\"1000\"></textarea>\r\n                <div class=\"form-text\">\r\n                  {{ form.get('reviewerComments')?.value?.length || 0 }}/1000 {{ i18n.t('common.characters') }}\r\n                </div>\r\n              </div>\r\n\r\n              <!-- File Attachment -->\r\n              <div class=\"col-12\">\r\n                <label class=\"form-label\">\r\n                  {{ i18n.t('employee_excuses.attachment') }}\r\n                  <span class=\"text-muted\">({{ i18n.t('common.optional') }})</span>\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  class=\"form-control\"\r\n                  accept=\".jpg,.jpeg,.png,.gif,.pdf,.doc,.docx\"\r\n                  (change)=\"onFileSelect($event)\">\r\n                <div class=\"form-text\">{{ i18n.t('employee_excuses.file_upload_help') }}</div>\r\n\r\n                <!-- Selected File Display -->\r\n                @if (selectedFile()) {\r\n                  <div class=\"mt-2\">\r\n                    <div class=\"d-flex align-items-center justify-content-between bg-light p-2 rounded\">\r\n                      <div class=\"d-flex align-items-center\">\r\n                        <i class=\"fas fa-file text-primary me-2\"></i>\r\n                        <div>\r\n                          <div class=\"fw-medium\">{{ selectedFile()!.name }}</div>\r\n                          <small class=\"text-muted\">{{ getFormattedFileSize() }}</small>\r\n                        </div>\r\n                      </div>\r\n                      <button\r\n                        type=\"button\"\r\n                        class=\"btn btn-sm btn-outline-danger\"\r\n                        (click)=\"removeSelectedFile()\">\r\n                        <i class=\"fas fa-times\"></i>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                }\r\n\r\n                <!-- Existing Attachment Info -->\r\n                @if (hasExistingAttachment()) {\r\n                  <div class=\"alert alert-info py-2 mt-2\">\r\n                    <i class=\"fas fa-paperclip me-2\"></i>\r\n                    {{ i18n.t('employee_excuses.existing_attachment') }}\r\n                    @if (selectedFile()) {\r\n                      <br><small>{{ i18n.t('employee_excuses.will_replace_existing') }}</small>\r\n                    }\r\n                  </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Policy Information -->\r\n          <div class=\"alert alert-info\">\r\n            <h6 class=\"alert-heading\">\r\n              <i class=\"fas fa-info-circle me-2\"></i>\r\n              {{ i18n.t('employee_excuses.policy_info_title') }}\r\n            </h6>\r\n            <ul class=\"mb-0\">\r\n              <li>{{ i18n.t('employee_excuses.policy_rule_1') }}</li>\r\n              <li>{{ i18n.t('employee_excuses.policy_rule_2') }}</li>\r\n              <li>{{ i18n.t('employee_excuses.policy_rule_3') }}</li>\r\n            </ul>\r\n          </div>\r\n\r\n          <!-- Form Actions -->\r\n          <div class=\"d-flex justify-content-end gap-2\">\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-outline-secondary\"\r\n              (click)=\"onCancel()\"\r\n              [disabled]=\"saving()\">\r\n              <i class=\"fa-solid fa-times me-2\"></i>\r\n              {{ i18n.t('common.cancel') }}\r\n            </button>\r\n            <button\r\n              type=\"submit\"\r\n              class=\"btn btn-primary\"\r\n              [disabled]=\"form.invalid || saving() || noPolicyActive()\">\r\n              @if (saving()) {\r\n                <div class=\"spinner-border spinner-border-sm me-2\"></div>\r\n              } @else {\r\n                <i class=\"fa-solid fa-save me-2\"></i>\r\n              }\r\n              {{ saving() ? (isEditMode() ? i18n.t('common.updating') : i18n.t('common.saving')) : getSubmitButtonText() }}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  }\r\n</div>"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACaI,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAgD,GAAA,OAAA,CAAA,EACJ,GAAA,QAAA,CAAA;AACV,IAAA,iBAAA,CAAA;AAA8B,IAAA,uBAAA,EAAO,EAC/D;;;;AAD0B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,gBAAA,CAAA;;;;;;AAe5B,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,KAAA,EAAA;AACA,IAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,MAAA,EAAA;AAC4B,IAAA,iBAAA,CAAA;AAAgD,IAAA,uBAAA;AAC/E,IAAA,yBAAA,GAAA,KAAA,EAAA;AAAgB,IAAA,iBAAA,CAAA;AAAkE,IAAA,uBAAA;AAClF,IAAA,yBAAA,GAAA,KAAA,EAAA,EAAgB,GAAA,QAAA;AACN,IAAA,iBAAA,CAAA;AAA8C,IAAA,uBAAA,EAAS,EAC7D,EACA;;;;AAL2B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,kCAAA,CAAA;AACf,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,YAAA,KAAA,OAAA,KAAA,EAAA,mCAAA,CAAA;AAEN,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,gCAAA,CAAA;;;;;;AA8BN,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA8B,IAAA,iBAAA,CAAA;AAAiC,IAAA,uBAAA;;;;AAAjC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,YAAA,CAAA;;;;;;AAgB9B,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA8B,IAAA,iBAAA,CAAA;AAAiC,IAAA,uBAAA;;;;AAAjC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,YAAA,CAAA;;;;;;AAgB9B,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA8B,IAAA,iBAAA,CAAA;AAAgC,IAAA,uBAAA;;;;AAAhC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,WAAA,CAAA;;;;;;AAgB9B,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA8B,IAAA,iBAAA,CAAA;AAA8B,IAAA,uBAAA;;;;AAA9B,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,SAAA,CAAA;;;;;;AAS5B,IAAA,oBAAA,GAAA,KAAA,EAAA;AACA,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,kBAAA,GAAA,GAAA;;;;;;AAEA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAyB,IAAA,iBAAA,CAAA;AAAkD,IAAA,uBAAA;;;;AAAlD,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,oCAAA,CAAA;;;;;;AAmB3B,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA8B,IAAA,iBAAA,CAAA;AAAiC,IAAA,uBAAA;;;;AAAjC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,YAAA,CAAA;;;;;;AAkB9B,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA8B,IAAA,iBAAA,CAAA;AAA6B,IAAA,uBAAA;;;;AAA7B,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,QAAA,CAAA;;;;;;AAkC9B,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA8B,IAAA,iBAAA,CAAA;AAAqC,IAAA,uBAAA;;;;AAArC,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,cAAA,gBAAA,CAAA;;;;;;;AAiC9B,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAkB,GAAA,OAAA,EAAA,EACoE,GAAA,OAAA,EAAA;AAEhF,IAAA,oBAAA,GAAA,KAAA,EAAA;AACA,IAAA,yBAAA,GAAA,KAAA,EAAK,GAAA,OAAA,EAAA;AACoB,IAAA,iBAAA,CAAA;AAA0B,IAAA,uBAAA;AACjD,IAAA,yBAAA,GAAA,SAAA,EAAA;AAA0B,IAAA,iBAAA,CAAA;AAA4B,IAAA,uBAAA,EAAQ,EAC1D;AAER,IAAA,yBAAA,GAAA,UAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,gCAAA,4FAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,mBAAA,CAAoB;IAAA,GAA7B,4FAA6B;AAC7B,IAAA,oBAAA,IAAA,KAAA,EAAA;AACF,IAAA,uBAAA,EAAS,EACL;;;;AAVuB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,aAAA,EAAA,IAAA;AACG,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,qBAAA,CAAA;;;;;;AAmB9B,IAAA,oBAAA,GAAA,IAAA;AAAI,IAAA,yBAAA,GAAA,OAAA;AAAO,IAAA,iBAAA,CAAA;AAAsD,IAAA,uBAAA;;;;AAAtD,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,wCAAA,CAAA;;;;;;AAJf,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,KAAA,EAAA;AACA,IAAA,iBAAA,CAAA;AACA,IAAA,8BAAA,GAAA,iFAAA,GAAA,CAAA;AAGF,IAAA,uBAAA;;;;AAJE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,sCAAA,GAAA,GAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,aAAA,IAAA,IAAA,EAAA;;;;;;AAqCJ,IAAA,oBAAA,GAAA,OAAA,EAAA;;;;;;AAEA,IAAA,oBAAA,GAAA,KAAA,EAAA;;;;;;;AAjRZ,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAkB,GAAA,OAAA,CAAA,EACS,GAAA,MAAA,CAAA;AAErB,IAAA,oBAAA,GAAA,KAAA,CAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA,EAAK;AAEP,IAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,IAAA,8BAAA,GAAA,iEAAA,IAAA,GAAA,OAAA,EAAA;AAaA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAAyB,IAAA,qBAAA,YAAA,gCAAA,6EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAY,OAAA,SAAA,CAAU;IAAA,GAAtB,6EAAsB;AAE7C,IAAA,yBAAA,GAAA,OAAA,EAAA,EAAkB,GAAA,MAAA,EAAA;AAEd,IAAA,oBAAA,IAAA,KAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAqB,IAAA,OAAA,EAAA,EAEG,IAAA,SAAA,EAAA;AAElB,IAAA,iBAAA,EAAA;AACA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEpC,IAAA,oBAAA,IAAA,yBAAA,EAAA;AASA,IAAA,8BAAA,IAAA,kEAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,SAAA,EAAA;AAElB,IAAA,iBAAA,EAAA;AACA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEpC,IAAA,oBAAA,IAAA,SAAA,EAAA;AAKA,IAAA,8BAAA,IAAA,kEAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,SAAA,EAAA;AAElB,IAAA,iBAAA,EAAA;AACA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEpC,IAAA,oBAAA,IAAA,SAAA,EAAA;AAKA,IAAA,8BAAA,IAAA,kEAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,SAAA,EAAA;AAElB,IAAA,iBAAA,EAAA;AACA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEpC,IAAA,oBAAA,IAAA,SAAA,EAAA;AAKA,IAAA,8BAAA,IAAA,kEAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,SAAA,EAAA;AACM,IAAA,iBAAA,EAAA;AAAyC,IAAA,uBAAA;AACnE,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,8BAAA,IAAA,kEAAA,GAAA,CAAA,EAA2B,IAAA,kEAAA,GAAA,GAAA,QAAA,EAAA;AAM7B,IAAA,uBAAA,EAAM;AAIR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,SAAA,EAAA;AAElB,IAAA,iBAAA,EAAA;AACA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEpC,IAAA,yBAAA,IAAA,UAAA,EAAA,EAGoD,IAAA,UAAA,EAAA;AACnB,IAAA,iBAAA,EAAA;AAAyC,IAAA,uBAAA;AACxE,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA6B,IAAA,iBAAA,EAAA;AAAyC,IAAA,uBAAA,EAAS;AAEjF,IAAA,8BAAA,IAAA,kEAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,SAAA,EAAA;AAEhB,IAAA,iBAAA,EAAA;AACA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEpC,IAAA,oBAAA,IAAA,YAAA,EAAA;AAOA,IAAA,8BAAA,IAAA,kEAAA,GAAA,GAAA,OAAA,EAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAM,EACF,EACF;AAGR,IAAA,oBAAA,IAAA,IAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAkB,IAAA,MAAA,EAAA;AAEd,IAAA,oBAAA,IAAA,KAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAqB,IAAA,OAAA,EAAA,EAEG,IAAA,SAAA,EAAA;AAElB,IAAA,iBAAA,EAAA;AACA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEpC,IAAA,yBAAA,IAAA,UAAA,EAAA,EAGwD,IAAA,UAAA,EAAA;AAC9B,IAAA,iBAAA,EAAA;AAA+C,IAAA,uBAAA;AACvE,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAyB,IAAA,iBAAA,EAAA;AAAgD,IAAA,uBAAA;AACzE,IAAA,yBAAA,IAAA,UAAA,EAAA;AAAyB,IAAA,iBAAA,EAAA;AAAgD,IAAA,uBAAA;AACzE,IAAA,yBAAA,IAAA,UAAA,EAAA;AAA0B,IAAA,iBAAA,EAAA;AAAiD,IAAA,uBAAA,EAAS;AAEtF,IAAA,8BAAA,IAAA,kEAAA,GAAA,GAAA,OAAA,EAAA;AAGF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAsB,IAAA,SAAA,EAAA;AACM,IAAA,iBAAA,EAAA;AAAkD,IAAA,uBAAA;AAC5E,IAAA,oBAAA,IAAA,YAAA,EAAA;AAMA,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAM;AAIR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,SAAA,EAAA;AAEhB,IAAA,iBAAA,EAAA;AACA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAAyB,IAAA,iBAAA,EAAA;AAAiC,IAAA,uBAAA,EAAO;AAEnE,IAAA,yBAAA,IAAA,SAAA,EAAA;AAIE,IAAA,qBAAA,UAAA,gCAAA,2EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAU,OAAA,aAAA,MAAA,CAAoB;IAAA,GAA9B,6EAA8B;AAJhC,IAAA,uBAAA;AAKA,IAAA,yBAAA,KAAA,OAAA,EAAA;AAAuB,IAAA,iBAAA,GAAA;AAAiD,IAAA,uBAAA;AAGxE,IAAA,8BAAA,KAAA,mEAAA,IAAA,GAAA,OAAA,EAAA;AAqBA,IAAA,8BAAA,KAAA,mEAAA,GAAA,GAAA,OAAA,EAAA;AASF,IAAA,uBAAA,EAAM,EACF;AAIR,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA8B,KAAA,MAAA,EAAA;AAE1B,IAAA,oBAAA,KAAA,KAAA,EAAA;AACA,IAAA,iBAAA,GAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,MAAA,EAAA,EAAiB,KAAA,IAAA;AACX,IAAA,iBAAA,GAAA;AAA8C,IAAA,uBAAA;AAClD,IAAA,yBAAA,KAAA,IAAA;AAAI,IAAA,iBAAA,GAAA;AAA8C,IAAA,uBAAA;AAClD,IAAA,yBAAA,KAAA,IAAA;AAAI,IAAA,iBAAA,GAAA;AAA8C,IAAA,uBAAA,EAAK,EACpD;AAIP,IAAA,yBAAA,KAAA,OAAA,EAAA,EAA8C,KAAA,UAAA,EAAA;AAI1C,IAAA,qBAAA,SAAA,gCAAA,8EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,GAAnB,8EAAmB;AAEnB,IAAA,oBAAA,KAAA,KAAA,EAAA;AACA,IAAA,iBAAA,GAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,UAAA,EAAA;AAIE,IAAA,8BAAA,KAAA,mEAAA,GAAA,GAAA,OAAA,EAAA,EAAgB,KAAA,mEAAA,GAAA,GAAA,KAAA,EAAA;AAKhB,IAAA,iBAAA,GAAA;AACF,IAAA,uBAAA,EAAS,EACL,EACD,EACH;;;;;;AAnRF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,qCAAA,GAAA,GAAA;AAKF,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,eAAA,IAAA,IAAA,EAAA;AAaiD,IAAA,oBAAA;AAAA,IAAA,sBAAA,WAAA,OAAA,eAAA,CAAA;AAA3C,IAAA,qBAAA,aAAA,OAAA,IAAA;AAKA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,uCAAA,GAAA,GAAA;AAMI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,2BAAA,GAAA,GAAA;AAUA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,YAAA,CAAA;AANA,IAAA,qBAAA,WAAA,OAAA,gBAAA,CAAA,EAA6B,eAAA,OAAA,KAAA,EAAA,kCAAA,CAAA,EAC6B,cAAA,IAAA,EACvC,aAAA,IAAA,EACD,YAAA,OAAA,eAAA,KAAA,OAAA,WAAA,CAAA;AAKpB,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,eAAA,YAAA,IAAA,KAAA,EAAA;AAQE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,8BAAA,GAAA,GAAA;AAOA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,YAAA,CAAA;AACF,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,eAAA,YAAA,IAAA,KAAA,EAAA;AAQE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,6BAAA,GAAA,GAAA;AAOA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,WAAA,CAAA;AACF,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,eAAA,WAAA,IAAA,KAAA,EAAA;AAQE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,2BAAA,GAAA,GAAA;AAOA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,SAAA,CAAA;AACF,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,eAAA,SAAA,IAAA,KAAA,EAAA;AAO0B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,2BAAA,CAAA;AAExB,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,kBAAA,IAAA,KAAA,EAAA;AAYA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,8BAAA,GAAA,GAAA;AAMA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,YAAA,CAAA;AAC+B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,2BAAA,CAAA;AACF,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,2BAAA,CAAA;AAE/B,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,eAAA,YAAA,IAAA,KAAA,EAAA;AAQE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,yBAAA,GAAA,GAAA;AAQA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,QAAA,CAAA;AADA,IAAA,qBAAA,eAAA,OAAA,KAAA,EAAA,qCAAA,CAAA;AAGF,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,eAAA,QAAA,IAAA,KAAA,EAAA;AAIE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,OAAA,WAAA,OAAA,KAAA,IAAA,QAAA,MAAA,OAAA,OAAA,SAAA,SAAA,OAAA,OAAA,SAAA,MAAA,WAAA,GAAA,SAAA,OAAA,KAAA,EAAA,mBAAA,GAAA,GAAA;AAYJ,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,yCAAA,GAAA,GAAA;AAMI,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,yBAAA,GAAA,GAAA;AAMA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,gBAAA,CAAA;AACwB,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,iCAAA,CAAA;AACC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,kCAAA,CAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,kCAAA,CAAA;AACC,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,mCAAA,CAAA;AAE5B,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,eAAA,gBAAA,IAAA,KAAA,EAAA;AAO0B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,oCAAA,CAAA;AAKxB,IAAA,oBAAA;AAAA,IAAA,qBAAA,eAAA,OAAA,KAAA,EAAA,gDAAA,CAAA;AAGA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,OAAA,WAAA,OAAA,KAAA,IAAA,kBAAA,MAAA,OAAA,OAAA,SAAA,SAAA,OAAA,OAAA,SAAA,MAAA,WAAA,GAAA,UAAA,OAAA,KAAA,EAAA,mBAAA,GAAA,GAAA;AAOA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,6BAAA,GAAA,GAAA;AACyB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,iBAAA,GAAA,GAAA;AAOJ,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,mCAAA,CAAA;AAGvB,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,aAAA,IAAA,MAAA,EAAA;AAqBA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,sBAAA,IAAA,MAAA,EAAA;AAiBF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,oCAAA,GAAA,GAAA;AAGI,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,gCAAA,CAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,gCAAA,CAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,gCAAA,CAAA;AAUJ,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,OAAA,CAAA;AAEA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,eAAA,GAAA,GAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,KAAA,WAAA,OAAA,OAAA,KAAA,OAAA,eAAA,CAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,OAAA,IAAA,MAAA,GAAA;AAKA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,OAAA,IAAA,OAAA,WAAA,IAAA,OAAA,KAAA,EAAA,iBAAA,IAAA,OAAA,KAAA,EAAA,eAAA,IAAA,OAAA,oBAAA,GAAA,GAAA;;;;AD1QR,IAAO,8BAAP,MAAO,4BAA0B;EAC9B,OAAO,OAAO,WAAW;EACxB,KAAK,OAAO,WAAW;EACvB,SAAS,OAAO,MAAM;EACtB,QAAQ,OAAO,cAAc;EAC7B,yBAAyB,OAAO,sBAAsB;EACtD,mBAAmB,OAAO,gBAAgB;EAC1C,sBAAsB,OAAO,mBAAmB;;EAGxD,UAAU,OAAO,OAAK,GAAA,YAAA,CAAA,EAAA,WAAA,UAAA,CAAA,IAAA,CAAA,CAAA;EACtB,SAAS,OAAO,OAAK,GAAA,YAAA,CAAA,EAAA,WAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EACrB,aAAa,OAAO,OAAK,GAAA,YAAA,CAAA,EAAA,WAAA,aAAA,CAAA,IAAA,CAAA,CAAA;EACzB,gBAAgB,OAAiC,MAAI,GAAA,YAAA,CAAA,EAAA,WAAA,gBAAA,CAAA,IAAA,CAAA,CAAA;EACrD,eAAe,OAAoB,MAAI,GAAA,YAAA,CAAA,EAAA,WAAA,eAAA,CAAA,IAAA,CAAA,CAAA;EACvC,cAAc,OAAY,MAAI,GAAA,YAAA,CAAA,EAAA,WAAA,cAAA,CAAA,IAAA,CAAA,CAAA;EAC9B,qBAAqB,OAAkE,CAAA,GAAE,GAAA,YAAA,CAAA,EAAA,WAAA,qBAAA,CAAA,IAAA,CAAA,CAAA;EACzF,iBAAiB,OAAO,OAAK,GAAA,YAAA,CAAA,EAAA,WAAA,iBAAA,CAAA,IAAA,CAAA,CAAA;EAC7B,cAAc,OAAsB,MAAI,GAAA,YAAA,CAAA,EAAA,WAAA,cAAA,CAAA,IAAA,CAAA,CAAA;;EAGxC,kBAAkB,SAAmC,MAAK;AACxD,WAAO,KAAK,mBAAkB,EAAG,IAAI,eAAa;MAChD,OAAO,SAAS;MAChB,OAAO,SAAS;MAChB,UAAU,SAAS,iBAAiB,aAAa,SAAS,cAAc,KAAK;MAC7E;EACJ,GAAC,GAAA,YAAA,CAAA,EAAA,WAAA,kBAAA,CAAA,IAAA,CAAA,CAAA;;EAID;EAEA,cAAA;AACE,SAAK,OAAO,KAAK,WAAU;EAC7B;EAEA,WAAQ;AACN,SAAK,cAAa;AAClB,SAAK,cAAa;AAGlB,eAAW,MAAK;AACd,WAAK,kBAAiB;IACxB,GAAG,GAAG;EACR;EAEQ,aAAU;AAChB,WAAO,KAAK,GAAG,MAAM;MACnB,YAAY,CAAC,IAAI,CAAC,WAAW,QAAQ,CAAC;MACtC,YAAY,CAAC,kBAAkB,CAAC,WAAW,QAAQ,CAAC;MACpD,YAAY,CAAC,IAAI,CAAC,WAAW,QAAQ,CAAC;MACtC,WAAW,CAAC,IAAI,CAAC,WAAW,QAAQ,CAAC;MACrC,SAAS,CAAC,IAAI,CAAC,WAAW,QAAQ,CAAC;MACnC,QAAQ,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,UAAU,GAAG,CAAC,CAAC;MAC7D,gBAAgB,CAAC,YAAY,CAAC,WAAW,QAAQ,CAAC;;MAClD,kBAAkB,CAAC,EAAE;MACrB,YAAY,CAAC,IAAI;KAClB;EACH;EAEQ,gBAAa;AACnB,SAAK,iBAAiB,qBAAoB,EAAG,UAAU;MACrD,MAAM,wBAAC,cAAa;AAClB,aAAK,mBAAmB,IAAI,SAAS;MACvC,GAFM;MAGN,OAAO,wBAAC,UAAS;AACf,gBAAQ,MAAM,6BAA6B,KAAK;AAChD,aAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,uCAAuC,CAAC;MAExD,GALO;KAMR;EACH;EAEQ,gBAAa;AACnB,UAAM,WAAW,KAAK,MAAM,SAAS,SAAS,IAAI,IAAI;AACtD,QAAI,UAAU;AACZ,WAAK,WAAW,IAAI,IAAI;AACxB,WAAK,WAAW,CAAC,QAAQ;IAC3B;EACF;EAEQ,WAAW,IAAU;AAC3B,SAAK,QAAQ,IAAI,IAAI;AAErB,SAAK,uBAAuB,sBAAsB,EAAE,EAAE,UAAU;MAC9D,MAAM,wBAAC,WAAU;AACf,YAAI,QAAQ;AACV,eAAK,cAAc,IAAI,MAAM;AAC7B,eAAK,aAAa,MAAM;QAC1B,OAAO;AACL,eAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,4BAA4B,CAAC;AAE3C,eAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;QAC5C;AACA,aAAK,QAAQ,IAAI,KAAK;MACxB,GAXM;MAYN,OAAO,wBAAC,UAAS;AACf,gBAAQ,MAAM,0BAA0B,KAAK;AAC7C,aAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,6BAA6B,CAAC;AAE5C,aAAK,QAAQ,IAAI,KAAK;AACtB,aAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;MAC5C,GAPO;KAQR;EACH;EAEQ,aAAa,QAAyB;AAE5C,UAAM,aAAa,IAAI,KAAK,OAAO,UAAU,EAAE,YAAW,EAAG,MAAM,GAAG,EAAE,CAAC;AAEzE,SAAK,KAAK,WAAW;MACnB,YAAY,OAAO;MACnB,YAAY,OAAO,cAAc;MACjC;MACA,WAAW,OAAO;MAClB,SAAS,OAAO;MAChB,QAAQ,OAAO;MACf,gBAAgB,OAAO,UAAU;MACjC,kBAAkB,OAAO,oBAAoB;KAC9C;AAGD,QAAI,KAAK,WAAU,GAAI;AACrB,WAAK,KAAK,IAAI,YAAY,GAAG,QAAO;IACtC;EACF;EAEA,aAAa,OAAY;AACvB,UAAM,SAAS,MAAM;AACrB,UAAM,OAAO,OAAO,QAAQ,CAAC,KAAK;AAElC,QAAI,MAAM;AAER,YAAM,UAAU,IAAI,OAAO;AAC3B,UAAI,KAAK,OAAO,SAAS;AACvB,aAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,iCAAiC,CAAC;AAEhD,eAAO,QAAQ;AACf;MACF;AAGA,YAAM,eAAe;QACnB;QACA;QACA;QACA;QACA;QACA;;AAGF,UAAI,CAAC,aAAa,SAAS,KAAK,IAAI,GAAG;AACrC,aAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,oCAAoC,CAAC;AAEnD,eAAO,QAAQ;AACf;MACF;AAEA,WAAK,aAAa,IAAI,IAAI;IAC5B,OAAO;AACL,WAAK,aAAa,IAAI,IAAI;IAC5B;EACF;EAEQ,oBAAiB;AAEvB,QAAI,KAAK,WAAU;AAAI;AAGvB,QAAI,KAAK,mBAAkB,EAAG,WAAW,GAAG;AAE1C,iBAAW,MAAM,KAAK,kBAAiB,GAAI,GAAG;AAC9C;IACF;AAEA,UAAM,gBAAgB,KAAK,mBAAkB,EAAG,CAAC;AACjD,QAAI,CAAC;AAAe;AAGpB,UAAM,oBAAoB;MACxB,YAAY,cAAc;MAC1B,aAAY,oBAAI,KAAI,GAAG,YAAW,EAAG,MAAM,GAAG,EAAE,CAAC;MACjD,WAAW;MACX,SAAS;MACT,YAAY;;AAGd,SAAK,uBAAuB,eAAe,iBAAiB,EAAE,UAAU;MACtE,MAAM,wBAAC,WAAU;AACf,YAAI,OAAO,QAAQ,OAAO,KAAK,kBAAkB;AAC/C,gBAAM,gBAAgB,OAAO,KAAK,iBAAiB,KAAK,CAAC,UACvD,MAAM,SAAS,yBAAyB,KACxC,MAAM,SAAS,QAAQ,CAAC;AAG1B,cAAI,eAAe;AACjB,iBAAK,eAAe,IAAI,IAAI;AAC5B,iBAAK,YAAY,IAAI,aAAa;UACpC;QACF;MACF,GAZM;MAaN,OAAO,wBAAC,UAAS;AACf,gBAAQ,MAAM,4BAA4B,KAAK;AAE/C,YAAI,MAAM,OAAO,OAAO,SAAS,QAAQ,KAAK,MAAM,OAAO,SAAS,SAAS,QAAQ,GAAG;AACtF,eAAK,eAAe,IAAI,IAAI;AAC5B,eAAK,YAAY,IAAI,MAAM,OAAO,SAAS,MAAM,OAAO,WAAW,+BAA+B;QACpG;MACF,GAPO;KAQR;EACH;EAEA,WAAQ;AACN,QAAI,KAAK,KAAK,SAAS;AACrB,WAAK,qBAAoB;AACzB;IACF;AAGA,QAAI,KAAK,eAAc,GAAI;AACzB,WAAK,oBAAoB,MACvB,KAAK,YAAW,KAAM,KAAK,KAAK,EAAE,mCAAmC,CAAC;AAExE;IACF;AAGA,QAAI,CAAC,KAAK,iBAAgB,GAAI;AAC5B,WAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,qCAAqC,CAAC;AAEpD;IACF;AAEA,SAAK,OAAO,IAAI,IAAI;AACpB,UAAM,YAAY,KAAK,KAAK;AAE5B,QAAI,KAAK,WAAU,GAAI;AACrB,WAAK,aAAa,SAAS;IAC7B,OAAO;AACL,WAAK,aAAa,SAAS;IAC7B;EACF;EAEQ,aAAa,WAAc;AACjC,UAAM,UAAuC;MAC3C,YAAY,CAAC,UAAU;MACvB,YAAY,UAAU;MACtB,WAAW,UAAU;MACrB,SAAS,UAAU;MACnB,QAAQ,UAAU;MAClB,YAAY,UAAU;MACtB,gBAAgB,KAAK,aAAY,KAAM;;AAGzC,SAAK,uBAAuB,qBAAqB,OAAO,EAAE,UAAU;MAClE,MAAM,6BAAK;AACT,aAAK,oBAAoB,QACvB,KAAK,KAAK,EAAE,iCAAiC,CAAC;AAEhD,aAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;MAC5C,GALM;MAMN,OAAO,wBAAC,UAAS;AACf,gBAAQ,MAAM,4BAA4B,KAAK;AAG/C,YAAI,eAAe,KAAK,KAAK,EAAE,+BAA+B;AAE9D,YAAI,OAAO,OAAO,OAAO;AAEvB,yBAAe,MAAM,MAAM;QAC7B,WAAW,OAAO,OAAO,SAAS;AAEhC,yBAAe,MAAM,MAAM;QAC7B,WAAW,OAAO,OAAO,UAAU,UAAU;AAE3C,yBAAe,MAAM;QACvB,WAAW,OAAO,SAAS;AAEzB,yBAAe,MAAM;QACvB;AAEA,aAAK,oBAAoB,MAAM,YAAY;AAC3C,aAAK,OAAO,IAAI,KAAK;MACvB,GAtBO;KAuBR;EACH;EAEQ,aAAa,WAAc;AACjC,QAAI,CAAC,KAAK,cAAa;AAAI;AAE3B,UAAM,UAAuC;MAC3C,YAAY,UAAU;MACtB,YAAY,UAAU;MACtB,WAAW,UAAU;MACrB,SAAS,UAAU;MACnB,QAAQ,UAAU;MAClB,gBAAgB,UAAU;MAC1B,kBAAkB,UAAU,oBAAoB;MAChD,gBAAgB,KAAK,aAAY,KAAM;;AAGzC,SAAK,uBAAuB,qBAC1B,KAAK,cAAa,EAAI,IACtB,OAAO,EACP,UAAU;MACV,MAAM,6BAAK;AACT,aAAK,oBAAoB,QACvB,KAAK,KAAK,EAAE,iCAAiC,CAAC;AAEhD,aAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;MAC5C,GALM;MAMN,OAAO,wBAAC,UAAS;AACf,gBAAQ,MAAM,4BAA4B,KAAK;AAG/C,YAAI,eAAe,KAAK,KAAK,EAAE,+BAA+B;AAE9D,YAAI,OAAO,OAAO,OAAO;AAEvB,yBAAe,MAAM,MAAM;QAC7B,WAAW,OAAO,OAAO,SAAS;AAEhC,yBAAe,MAAM,MAAM;QAC7B,WAAW,OAAO,OAAO,UAAU,UAAU;AAE3C,yBAAe,MAAM;QACvB,WAAW,OAAO,SAAS;AAEzB,yBAAe,MAAM;QACvB;AAEA,aAAK,oBAAoB,MAAM,YAAY;AAC3C,aAAK,OAAO,IAAI,KAAK;MACvB,GAtBO;KAuBR;EACH;EAEQ,mBAAgB;AACtB,UAAM,YAAY,KAAK,KAAK,IAAI,WAAW,GAAG;AAC9C,UAAM,UAAU,KAAK,KAAK,IAAI,SAAS,GAAG;AAE1C,QAAI,CAAC,aAAa,CAAC;AAAS,aAAO;AAEnC,WAAO,YAAY;EACrB;EAEA,WAAQ;AACN,SAAK,OAAO,SAAS,CAAC,mBAAmB,CAAC;EAC5C;EAEA,UAAO;AACL,QAAI,KAAK,WAAU,KAAM,KAAK,cAAa,GAAI;AAC7C,WAAK,aAAa,KAAK,cAAa,CAAG;IACzC,OAAO;AACL,WAAK,KAAK,MAAK;AACf,WAAK,aAAa,IAAI,IAAI;AAE1B,YAAM,YAAY,SAAS,eAAe,YAAY;AACtD,UAAI,WAAW;AACb,kBAAU,QAAQ;MACpB;IACF;EACF;EAEQ,uBAAoB;AAC1B,WAAO,KAAK,KAAK,KAAK,QAAQ,EAAE,QAAQ,SAAM;AAC5C,YAAM,UAAU,KAAK,KAAK,IAAI,GAAG;AACjC,UAAI,SAAS;AACX,gBAAQ,cAAa;MACvB;IACF,CAAC;EACH;EAEA,eAAe,WAAiB;AAC9B,UAAM,QAAQ,KAAK,KAAK,IAAI,SAAS;AACrC,WAAO,CAAC,EAAE,SAAS,MAAM,WAAW,MAAM;EAC5C;EAEA,cAAc,WAAiB;AAC7B,UAAM,QAAQ,KAAK,KAAK,IAAI,SAAS;AACrC,QAAI,CAAC,SAAS,CAAC,MAAM,UAAU,CAAC,MAAM;AAAS,aAAO;AAEtD,UAAM,SAAS,MAAM;AACrB,QAAI,OAAO,UAAU;AAAG,aAAO,KAAK,KAAK,EAAE,qBAAqB;AAChE,QAAI,OAAO,WAAW;AAAG,aAAO,KAAK,KAAK,EAAE,sBAAsB;AAElE,WAAO;EACT;EAEA,oBAAiB;AACf,UAAM,YAAY,KAAK,KAAK,IAAI,WAAW,GAAG;AAC9C,UAAM,UAAU,KAAK,KAAK,IAAI,SAAS,GAAG;AAE1C,QAAI,CAAC,aAAa,CAAC;AAAS,aAAO;AAGnC,UAAM,CAAC,WAAW,WAAW,IAAI,UAAU,MAAM,GAAG,EAAE,IAAI,MAAM;AAChE,UAAM,CAAC,SAAS,SAAS,IAAI,QAAQ,MAAM,GAAG,EAAE,IAAI,MAAM;AAG1D,UAAM,eAAe,YAAY,KAAK;AACtC,UAAM,aAAa,UAAU,KAAK;AAClC,UAAM,kBAAkB,aAAa;AAErC,QAAI,mBAAmB;AAAG,aAAO;AAEjC,UAAM,QAAQ,KAAK,MAAM,kBAAkB,EAAE;AAC7C,UAAM,UAAU,kBAAkB;AAElC,QAAI,UAAU,GAAG;AACf,aAAO,GAAG,OAAO,IAAI,KAAK,KAAK,EAAE,gBAAgB,CAAC;IACpD,WAAW,YAAY,GAAG;AACxB,aAAO,GAAG,KAAK,IAAI,KAAK,KAAK,EAAE,cAAc,CAAC;IAChD,OAAO;AACL,aAAO,GAAG,KAAK,IAAI,KAAK,KAAK,EAAE,cAAc,CAAC,IAAI,OAAO,IAAI,KAAK,KAAK,EAAE,gBAAgB,CAAC;IAC5F;EACF;EAEA,uBAAoB;AAClB,UAAM,OAAO,KAAK,aAAY;AAC9B,QAAI,CAAC;AAAM,aAAO;AAElB,UAAM,OAAO,KAAK;AAClB,QAAI,OAAO,MAAM;AACf,aAAO,GAAG,IAAI;IAChB,WAAW,OAAO,OAAO,MAAM;AAC7B,aAAO,IAAI,OAAO,MAAM,QAAQ,CAAC,CAAC;IACpC,OAAO;AACL,aAAO,IAAI,QAAQ,OAAO,OAAO,QAAQ,CAAC,CAAC;IAC7C;EACF;EAEA,qBAAkB;AAChB,SAAK,aAAa,IAAI,IAAI;AAC1B,UAAM,YAAY,SAAS,eAAe,YAAY;AACtD,QAAI,WAAW;AACb,gBAAU,QAAQ;IACpB;EACF;EAEA,wBAAqB;AACnB,WAAO,KAAK,WAAU,KAAM,CAAC,CAAC,KAAK,cAAa,GAAI;EACtD;EAEA,eAAY;AACV,WAAO,KAAK,WAAU,IAClB,KAAK,KAAK,EAAE,+BAA+B,IAC3C,KAAK,KAAK,EAAE,iCAAiC;EACnD;EAEA,cAAW;AACT,WAAO,KAAK,WAAU,IAAK,SAAS;EACtC;EAEA,cAAW;AACT,WAAO,KAAK,cAAa,GAAI;EAC/B;EAEA,sBAAmB;AACjB,QAAI,KAAK,OAAM,GAAI;AACjB,aAAO,KAAK,WAAU,IAClB,KAAK,KAAK,EAAE,2BAA2B,IACvC,KAAK,KAAK,EAAE,2BAA2B;IAC7C;AACA,WAAO,KAAK,WAAU,IAClB,KAAK,KAAK,EAAE,iCAAiC,IAC7C,KAAK,KAAK,EAAE,iCAAiC;EACnD;;AA1dqC;cAA1B;mCAAA,6BAA0B;AAAA;cAA1B,8FAAA,6BAA0B,WAAA,CAAA,CAAA,yBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,cAAA,oBAAA,eAAA,oBAAA,GAAA,QAAA,SAAA,YAAA,SAAA,GAAA,CAAA,GAAA,UAAA,0BAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,QAAA,UAAA,GAAA,gBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,cAAA,MAAA,GAAA,CAAA,GAAA,YAAA,qBAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,SAAA,GAAA,SAAA,gBAAA,UAAA,sBAAA,MAAA,GAAA,CAAA,GAAA,YAAA,WAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,gBAAA,MAAA,GAAA,CAAA,GAAA,YAAA,eAAA,MAAA,GAAA,CAAA,GAAA,OAAA,KAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,mBAAA,cAAA,GAAA,WAAA,eAAA,cAAA,aAAA,UAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,cAAA,GAAA,cAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,aAAA,GAAA,cAAA,GAAA,CAAA,QAAA,QAAA,mBAAA,WAAA,GAAA,cAAA,GAAA,CAAA,GAAA,0BAAA,YAAA,UAAA,WAAA,KAAA,GAAA,CAAA,GAAA,YAAA,GAAA,CAAA,mBAAA,cAAA,GAAA,aAAA,GAAA,CAAA,SAAA,gBAAA,GAAA,CAAA,SAAA,cAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,QAAA,KAAA,mBAAA,UAAA,aAAA,OAAA,GAAA,gBAAA,GAAA,aAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,kBAAA,MAAA,GAAA,CAAA,GAAA,YAAA,kBAAA,MAAA,GAAA,CAAA,mBAAA,kBAAA,GAAA,aAAA,GAAA,CAAA,SAAA,SAAA,GAAA,CAAA,SAAA,UAAA,GAAA,CAAA,SAAA,UAAA,GAAA,CAAA,SAAA,WAAA,GAAA,CAAA,QAAA,KAAA,mBAAA,oBAAA,aAAA,QAAA,GAAA,gBAAA,GAAA,aAAA,GAAA,CAAA,QAAA,QAAA,UAAA,wCAAA,GAAA,gBAAA,GAAA,QAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,SAAA,cAAA,QAAA,MAAA,GAAA,CAAA,GAAA,SAAA,YAAA,GAAA,CAAA,GAAA,eAAA,GAAA,CAAA,GAAA,OAAA,kBAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,UAAA,uBAAA,OAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,yBAAA,GAAA,SAAA,UAAA,GAAA,CAAA,GAAA,YAAA,YAAA,MAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,GAAA,UAAA,GAAA,CAAA,GAAA,kBAAA,qBAAA,MAAA,GAAA,CAAA,GAAA,YAAA,WAAA,MAAA,GAAA,CAAA,GAAA,OAAA,2BAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,OAAA,YAAA,gBAAA,MAAA,GAAA,CAAA,GAAA,UAAA,sBAAA,2BAAA,YAAA,OAAA,SAAA,GAAA,CAAA,GAAA,UAAA,oBAAA,GAAA,CAAA,GAAA,OAAA,WAAA,gBAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,UAAA,sBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,UAAA,GAAA,CAAA,GAAA,OAAA,gBAAA,MAAA,CAAA,GAAA,UAAA,gCAAA,oCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;AC7BvC,IAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,IAAA,oBAAA,GAAA,mBAAA,CAAA;AAUA,IAAA,8BAAA,GAAA,mDAAA,GAAA,GAAA,OAAA,CAAA,EAAiB,GAAA,mDAAA,KAAA,IAAA,OAAA,CAAA;AAkSnB,IAAA,uBAAA;;;AA3SI,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,YAAA,CAAA,EAAsB,SAAA,IAAA,aAAA,CAAA,EACE,YAAA,IAAA,YAAA,CAAA,EAGE,WAAA,IAAA,OAAA,CAAA;AAK5B,IAAA,oBAAA;AAAA,IAAA,wBAAA,IAAA,QAAA,IAAA,IAAA,CAAA;;GDiBqC;EARnC;EACA;EAAmB;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EACnB;EACA;AAAmB,GAAA,QAAA,CAAA,8pOAAA,EAAA,CAAA;AAKjB,IAAO,6BAAP;;sEAAO,4BAA0B,CAAA;UAZtC;uBACW,2BAAyB,YACvB,MAAI,SACP;MACP;MACA;MACA;MACA;OACD,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAAA,QAAA,CAAA,6oLAAA,EAAA,CAAA;;;;6EAIU,4BAA0B,EAAA,WAAA,8BAAA,UAAA,uFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
