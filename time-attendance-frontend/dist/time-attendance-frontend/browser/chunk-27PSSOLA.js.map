{
  "version": 3,
  "sources": ["src/app/pages/employees/view-employee/view-employee.component.ts", "src/app/pages/employees/view-employee/view-employee.component.html"],
  "sourcesContent": ["import { Component, inject, OnInit, signal, computed } from '@angular/core';\nimport { Router, ActivatedRoute, RouterLink } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { I18nService } from '../../../core/i18n/i18n.service';\nimport { EmployeesService } from '../employees.service';\nimport { AttendanceService } from '../../../core/services/attendance.service';\nimport { NotificationService } from '../../../core/notifications/notification.service';\nimport { EmployeeDto, Gender, EmploymentStatus, WorkLocationType } from '../../../shared/models/employee.model';\nimport { AttendanceRecord, AttendanceStatistics, AttendanceStatus, AttendanceTransaction } from '../../../shared/models/attendance.model';\nimport { PermissionService } from '../../../core/auth/permission.service';\nimport { PermissionResources, PermissionActions } from '../../../shared/utils/permission.utils';\nimport { HasPermissionDirective } from '../../../shared/directives/has-permission.directive';\nimport { FormHeaderComponent } from '../../../shared/components/form-header/form-header.component';\nimport { LoadingSpinnerComponent } from '../../../shared/components/loading-spinner/loading-spinner.component';\nimport { StatusBadgeComponent } from '../../../shared/components/status-badge/status-badge.component';\nimport { EmptyStateComponent } from '../../../shared/components/empty-state/empty-state.component';\nimport { DefinitionListComponent, DefinitionItem } from '../../../shared/components/definition-list/definition-list.component';\nimport { StatsGridComponent, StatGridItem } from '../../../shared/components/stats-grid/stats-grid.component';\n\n@Component({\n  selector: 'app-view-employee',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HasPermissionDirective, FormHeaderComponent, LoadingSpinnerComponent, StatusBadgeComponent, EmptyStateComponent, DefinitionListComponent, StatsGridComponent],\n  templateUrl: './view-employee.component.html',\n  styleUrls: ['./view-employee.component.css']\n})\nexport class ViewEmployeeComponent implements OnInit {\n  private router = inject(Router);\n  private route = inject(ActivatedRoute);\n  private employeesService = inject(EmployeesService);\n  private attendanceService = inject(AttendanceService);\n  private notificationService = inject(NotificationService);\n  public i18n = inject(I18nService);\n  public permissionService = inject(PermissionService);\n\n  loading = signal(false);\n  error = signal<string | null>(null);\n  employee = signal<EmployeeDto | null>(null);\n  employeeId: number = 0;\n\n  // Attendance-related signals\n  attendanceLoading = signal(false);\n  attendanceRecords = signal<AttendanceRecord[]>([]);\n  attendanceStatistics = signal<AttendanceStatistics | null>(null);\n  recentTransactions = signal<AttendanceTransaction[]>([]);\n  selectedDateRange = signal<{ start: string; end: string }>({\n    start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],\n    end: new Date().toISOString().split('T')[0]\n  });\n  activeTab = signal<'overview' | 'records' | 'transactions'>('overview');\n\n  // Computed values for attendance summary\n  totalWorkingDays = computed(() => {\n    const records = this.attendanceRecords();\n    return records.length;\n  });\n\n  presentDays = computed(() => {\n    const records = this.attendanceRecords();\n    return records.filter(r => r.status === AttendanceStatus.Present).length;\n  });\n\n  absentDays = computed(() => {\n    const records = this.attendanceRecords();\n    return records.filter(r => r.status === AttendanceStatus.Absent).length;\n  });\n\n  lateDays = computed(() => {\n    const records = this.attendanceRecords();\n    return records.filter(r => r.status === AttendanceStatus.Late).length;\n  });\n\n  attendanceRate = computed(() => {\n    const total = this.totalWorkingDays();\n    const present = this.presentDays();\n    return total > 0 ? Math.round((present / total) * 100) : 0;\n  });\n\n  averageWorkingHours = computed(() => {\n    const records = this.attendanceRecords();\n    const workingRecords = records.filter(r => r.workingHours > 0);\n    if (workingRecords.length === 0) return 0;\n    const total = workingRecords.reduce((sum, r) => sum + r.workingHours, 0);\n    return Math.round((total / workingRecords.length) * 10) / 10;\n  });\n\n  totalOvertimeHours = computed(() => {\n    const records = this.attendanceRecords();\n    return Math.round(records.reduce((sum, r) => sum + r.overtimeHours, 0) * 10) / 10;\n  });\n\n  // Permission constants for use in template\n  readonly PERMISSIONS = {\n    EMPLOYEE_UPDATE: `${PermissionResources.EMPLOYEE}.${PermissionActions.UPDATE}`,\n    EMPLOYEE_DELETE: `${PermissionResources.EMPLOYEE}.${PermissionActions.DELETE}`,\n    EMPLOYEE_MANAGE: `${PermissionResources.EMPLOYEE}.${PermissionActions.MANAGE}`\n  };\n\n  ngOnInit() {\n    this.employeeId = +this.route.snapshot.params['id'];\n    if (this.employeeId) {\n      this.loadEmployee();\n      this.loadAttendanceData();\n    } else {\n      this.router.navigate(['/employees']);\n    }\n  }\n\n  private loadEmployee() {\n    this.loading.set(true);\n    this.employeesService.getEmployeeById(this.employeeId).subscribe({\n      next: (employee) => {\n        this.employee.set(employee);\n        this.loading.set(false);\n      },\n      error: (error) => {\n        this.error.set('Failed to load employee');\n        this.loading.set(false);\n        console.error('Error loading employee:', error);\n      }\n    });\n  }\n\n  /**\n   * Load attendance data for the employee\n   */\n  private loadAttendanceData() {\n    this.attendanceLoading.set(true);\n    const dateRange = this.selectedDateRange();\n\n    // Load attendance records\n    this.attendanceService.getEmployeeAttendanceRecords(\n      this.employeeId,\n      dateRange.start,\n      dateRange.end\n    ).subscribe({\n      next: (records) => {\n        this.attendanceRecords.set(records);\n        this.attendanceLoading.set(false);\n      },\n      error: (error) => {\n        console.error('Error loading attendance records:', error);\n        this.attendanceLoading.set(false);\n      }\n    });\n\n    // Load recent transactions\n    this.attendanceService.getEmployeeRecentTransactions(this.employeeId, 10).subscribe({\n      next: (transactions) => {\n        this.recentTransactions.set(transactions);\n      },\n      error: (error) => {\n        console.error('Error loading transactions:', error);\n      }\n    });\n  }\n\n  /**\n   * Handle date range change\n   */\n  onDateRangeChange(start: string, end: string) {\n    this.selectedDateRange.set({ start, end });\n    this.loadAttendanceData();\n  }\n\n  /**\n   * Change active tab\n   */\n  setActiveTab(tab: 'overview' | 'records' | 'transactions') {\n    this.activeTab.set(tab);\n  }\n\n  /**\n   * Get status badge class\n   */\n  getStatusBadgeClass(status: AttendanceStatus): string {\n    switch (status) {\n      case AttendanceStatus.Present:\n        return 'badge bg-success';\n      case AttendanceStatus.Absent:\n        return 'badge bg-danger';\n      case AttendanceStatus.Late:\n        return 'badge bg-warning';\n      case AttendanceStatus.EarlyLeave:\n        return 'badge bg-warning';\n      case AttendanceStatus.OnLeave:\n        return 'badge bg-info';\n      case AttendanceStatus.DayOff:\n        return 'badge bg-secondary';\n      case AttendanceStatus.Overtime:\n        return 'badge bg-primary';\n      default:\n        return 'badge bg-secondary';\n    }\n  }\n\n  /**\n   * Get transaction type badge class\n   */\n  getTransactionTypeBadgeClass(type: number): string {\n    switch (type) {\n      case 0: // CheckIn\n        return 'badge bg-success';\n      case 1: // CheckOut\n        return 'badge bg-danger';\n      case 2: // BreakStart\n        return 'badge bg-warning';\n      case 3: // BreakEnd\n        return 'badge bg-info';\n      case 4: // Manual\n        return 'badge bg-primary';\n      default:\n        return 'badge bg-secondary';\n    }\n  }\n\n  /**\n   * Format time for display\n   */\n  formatTime(time: string | null): string {\n    if (!time) return '--:--';\n    try {\n      const date = new Date(`1970-01-01T${time}`);\n      return date.toLocaleTimeString('en-US', {\n        hour: '2-digit',\n        minute: '2-digit',\n        hour12: false\n      });\n    } catch {\n      return time;\n    }\n  }\n\n  /**\n   * Calculate work duration\n   */\n  calculateWorkDuration(checkIn: string | null, checkOut: string | null): string {\n    if (!checkIn || !checkOut) return '--';\n    try {\n      const start = new Date(`1970-01-01T${checkIn}`);\n      const end = new Date(`1970-01-01T${checkOut}`);\n      const diffMs = end.getTime() - start.getTime();\n      const hours = Math.floor(diffMs / (1000 * 60 * 60));\n      const minutes = Math.floor((diffMs % (1000 * 60 * 60)) / (1000 * 60));\n      return `${hours}h ${minutes}m`;\n    } catch {\n      return '--';\n    }\n  }\n\n  /**\n   * Get performance color based on attendance rate\n   */\n  getPerformanceColor(rate: number): 'success' | 'primary' | 'warning' | 'danger' | 'info' | 'secondary' {\n    if (rate >= 95) return 'success';\n    if (rate >= 90) return 'primary';\n    if (rate >= 80) return 'warning';\n    return 'danger';\n  }\n\n  /**\n   * Get performance label based on attendance rate\n   */\n  getPerformanceLabel(rate: number): string {\n    if (rate >= 95) return 'Excellent';\n    if (rate >= 90) return 'Good';\n    if (rate >= 80) return 'Average';\n    return 'Needs Improvement';\n  }\n\n  /**\n   * Export employee attendance data\n   */\n  exportAttendanceData() {\n    const records = this.attendanceRecords();\n    if (records.length === 0) {\n      this.notificationService.warning('No attendance data to export');\n      return;\n    }\n\n    const csvContent = this.generateAttendanceCSV(records);\n    this.downloadCSV(csvContent, `employee-${this.employeeId}-attendance.csv`);\n    this.notificationService.success('Attendance data exported successfully');\n  }\n\n  /**\n   * Generate CSV content from attendance records\n   */\n  private generateAttendanceCSV(records: AttendanceRecord[]): string {\n    const headers = [\n      'Date',\n      'Status',\n      'Check In',\n      'Check Out',\n      'Working Hours',\n      'Break Hours',\n      'Overtime Hours',\n      'Notes'\n    ];\n\n    const rows = records.map(record => [\n      record.attendanceDate,\n      this.getStatusText(record.status),\n      this.formatTime(record.actualCheckInTime || null),\n      this.formatTime(record.actualCheckOutTime || null),\n      record.workingHours.toString(),\n      record.breakHours.toString(),\n      record.overtimeHours.toString(),\n      record.notes || ''\n    ]);\n\n    return [headers, ...rows]\n      .map(row => row.map(cell => `\"${cell}\"`).join(','))\n      .join('\\n');\n  }\n\n  /**\n   * Download CSV file\n   */\n  private downloadCSV(content: string, filename: string): void {\n    const blob = new Blob([content], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n\n    if (link.download !== undefined) {\n      const url = URL.createObjectURL(blob);\n      link.setAttribute('href', url);\n      link.setAttribute('download', filename);\n      link.style.visibility = 'hidden';\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n\n  /**\n   * Get status text\n   */\n  private getStatusText(status: AttendanceStatus): string {\n    return this.i18n.t(`attendance.status.${status.toString().toLowerCase()}`);\n  }\n\n\n  formatDate(dateString: string): string {\n    return new Date(dateString).toLocaleDateString();\n  }\n\n  getEmploymentStatusLabel(status: EmploymentStatus): string {\n    return this.t(`employees.employment_status.${EmploymentStatus[status].toLowerCase()}`);\n  }\n\n  getGenderLabel(gender: Gender): string {\n    return this.t(`employees.gender.${Gender[gender].toLowerCase()}`);\n  }\n\n  getWorkLocationTypeLabel(type: WorkLocationType): string {\n    return this.t(`employees.work_location.${WorkLocationType[type].toLowerCase()}`);\n  }\n\n  t(key: string): string {\n    return this.i18n.t(key);\n  }\n\n  // Computed properties for definition lists\n  basicInfoItems = computed<DefinitionItem[]>(() => {\n    const employee = this.employee();\n    if (!employee) return [];\n\n    return [\n      { label: this.t('employees.employee_number'), value: employee.employeeNumber },\n      { label: this.t('employees.first_name'), value: employee.firstName },\n      { label: this.t('employees.last_name'), value: employee.lastName },\n      { label: this.t('employees.email'), value: employee.email || '-' },\n      { label: this.t('employees.phone'), value: employee.phone || '-' },\n      { label: this.t('employees.national_id'), value: employee.nationalId || '-' }\n    ];\n  });\n\n  employmentInfoItems = computed<DefinitionItem[]>(() => {\n    const employee = this.employee();\n    if (!employee) return [];\n\n    const items: DefinitionItem[] = [\n      { label: this.t('employees.job_title'), value: employee.jobTitle },\n      { label: this.t('employees.branch'), value: employee.branchName },\n      { label: this.t('employees.department'), value: employee.departmentName || '-' },\n      { label: this.t('employees.manager'), value: employee.managerName || '-' },\n      { label: this.t('employees.hire_date'), value: this.formatDate(employee.hireDate), type: 'date' as const }\n    ];\n\n    if (employee.dateOfBirth) {\n      items.push({\n        label: this.t('employees.date_of_birth'),\n        value: this.formatDate(employee.dateOfBirth),\n        type: 'date' as const\n      });\n    }\n\n    return items;\n  });\n\n  // Computed property for attendance stats grid\n  attendanceStats = computed<StatGridItem[]>(() => {\n    return [\n      {\n        label: this.t('attendance.statistics.total_working_days'),\n        value: this.totalWorkingDays(),\n        icon: 'fa-solid fa-calendar',\n        variant: 'primary' as const\n      },\n      {\n        label: this.t('attendance.stats.present_employees'),\n        value: this.presentDays(),\n        icon: 'fa-solid fa-user-check',\n        variant: 'success' as const,\n        subtitle: `${this.attendanceRate()}% ${this.t('attendance.statistics.attendance_rate_short')}`\n      },\n      {\n        label: this.t('attendance.stats.average_working_hours'),\n        value: `${this.averageWorkingHours()}h`,\n        icon: 'fa-solid fa-business-time',\n        variant: 'warning' as const,\n        subtitle: `${this.totalOvertimeHours()}h ${this.t('attendance.statistics.total_overtime')}`\n      },\n      {\n        label: this.t('attendance.stats.absent_employees'),\n        value: this.absentDays(),\n        icon: 'fa-solid fa-user-times',\n        variant: 'danger' as const,\n        subtitle: `${this.lateDays()} ${this.t('attendance.statistics.late_days')}`\n      }\n    ];\n  });\n}", "<div class=\"container-fluid\">\r\n  <!-- Header -->\r\n  <app-form-header\r\n    mode=\"view\"\r\n    [title]=\"t('employees.view_details')\"\r\n    moduleName=\"employees\"\r\n    moduleRoute=\"employees\"\r\n    [entityId]=\"employeeId\"\r\n    [loading]=\"loading()\">\r\n  </app-form-header>\r\n\r\n  @if (loading()) {\r\n    <div class=\"d-flex justify-content-center py-5\">\r\n      <app-loading-spinner\r\n        [message]=\"t('common.loading')\"\r\n        [centered]=\"true\">\r\n      </app-loading-spinner>\r\n    </div>\r\n  } @else if (employee()) {\r\n    <!-- Employee Details -->\r\n    <div class=\"row\">\r\n      <!-- Main Information Card -->\r\n      <div class=\"col-lg-8\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"card-title mb-0\">\r\n              <div class=\"d-flex align-items-center\">\r\n                <div class=\"avatar-sm me-3\">\r\n                  <div class=\"avatar-title bg-primary-subtle text-primary rounded-circle\">\r\n                    {{ (employee()?.firstName?.charAt(0) || '')?.toUpperCase() }}{{ (employee()?.lastName?.charAt(0) || '')?.toUpperCase() }}\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <div class=\"fw-medium\">{{ employee()?.fullName }}</div>\r\n                  <small class=\"text-muted\">{{ employee()?.employeeNumber }}</small>\r\n                </div>\r\n              </div>\r\n            </h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"row\">\r\n              <!-- Basic Information -->\r\n              <div class=\"col-md-6\">\r\n                <app-definition-list\r\n                  [items]=\"basicInfoItems()\"\r\n                  [labelWidth]=\"'5'\"\r\n                  [valueWidth]=\"'7'\">\r\n                </app-definition-list>\r\n              </div>\r\n\r\n              <!-- Employment Information -->\r\n              <div class=\"col-md-6\">\r\n                <app-definition-list\r\n                  [items]=\"employmentInfoItems()\"\r\n                  [labelWidth]=\"'5'\"\r\n                  [valueWidth]=\"'7'\">\r\n                </app-definition-list>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Status and Details Card -->\r\n      <div class=\"col-lg-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h6 class=\"card-title mb-0\">{{ t('employees.employment_details') }}</h6>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <!-- Status -->\r\n            <div class=\"mb-3\">\r\n              <h6 class=\"fw-semibold\">{{ t('common.status') }}</h6>\r\n              <app-status-badge\r\n                [status]=\"employee()?.isActive ? 'active' : 'inactive'\">\r\n              </app-status-badge>\r\n            </div>\r\n            \r\n            <!-- Employment Status -->\r\n            <div class=\"mb-3\">\r\n              <h6 class=\"fw-semibold\">{{ t('employees.employment_status.title') }}</h6>\r\n              <app-status-badge\r\n                [label]=\"getEmploymentStatusLabel(employee()!.employmentStatus)\"\r\n                [variant]=\"'info'\"\r\n                [icon]=\"'fas fa-briefcase'\">\r\n              </app-status-badge>\r\n            </div>\r\n\r\n            <!-- Work Location -->\r\n            <div class=\"mb-3\">\r\n              <h6 class=\"fw-semibold\">{{ t('employees.work_location.title') }}</h6>\r\n              <app-status-badge\r\n                [label]=\"getWorkLocationTypeLabel(employee()!.workLocationType)\"\r\n                [variant]=\"'light'\"\r\n                [icon]=\"'fas fa-map-marker-alt'\">\r\n              </app-status-badge>\r\n            </div>\r\n\r\n            <!-- Current Shift -->\r\n            <div class=\"mb-3\">\r\n              <h6 class=\"fw-semibold\">{{ t('employees.current_shift') }}</h6>\r\n              @if (employee()?.currentShiftName) {\r\n                <app-status-badge\r\n                  [label]=\"employee()!.currentShiftName\"\r\n                  [variant]=\"'primary'\"\r\n                  [icon]=\"'fas fa-clock'\">\r\n                </app-status-badge>\r\n              } @else {\r\n                <span class=\"text-muted\">{{ t('employees.no_shift_assigned') }}</span>\r\n              }\r\n            </div>\r\n\r\n            <!-- Gender -->\r\n            @if (employee()?.gender) {\r\n              <div class=\"mb-3\">\r\n                <h6 class=\"fw-semibold\">{{ t('employees.gender.title') }}</h6>\r\n                <app-status-badge\r\n                  [label]=\"getGenderLabel(employee()!.gender!)\"\r\n                  [variant]=\"'light'\"\r\n                  [showIcon]=\"false\">\r\n                </app-status-badge>\r\n              </div>\r\n            }\r\n\r\n            <!-- Created Date -->\r\n            <div>\r\n              <h6 class=\"fw-semibold\">{{ t('employees.created_at') }}</h6>\r\n              <small class=\"text-muted\">{{ formatDate(employee()!.createdAtUtc) }}</small>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Arabic Names Card (if available) -->\r\n        @if (employee()?.firstNameAr || employee()?.lastNameAr || employee()?.jobTitleAr) {\r\n          <div class=\"card mt-3\">\r\n            <div class=\"card-header\">\r\n              <h6 class=\"card-title mb-0\">{{ t('employees.arabic_names') }}</h6>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              @if (employee()?.firstNameAr) {\r\n                <div class=\"mb-2\">\r\n                  <small class=\"text-muted\">{{ t('employees.first_name_ar') }}</small><br>\r\n                  <span>{{ employee()?.firstNameAr }}</span>\r\n                </div>\r\n              }\r\n              @if (employee()?.lastNameAr) {\r\n                <div class=\"mb-2\">\r\n                  <small class=\"text-muted\">{{ t('employees.last_name_ar') }}</small><br>\r\n                  <span>{{ employee()?.lastNameAr }}</span>\r\n                </div>\r\n              }\r\n              @if (employee()?.jobTitleAr) {\r\n                <div>\r\n                  <small class=\"text-muted\">{{ t('employees.job_title_ar') }}</small><br>\r\n                  <span>{{ employee()?.jobTitleAr }}</span>\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        }\r\n\r\n        <!-- Quick Actions Card -->\r\n        <div class=\"card mt-3\">\r\n          <div class=\"card-header\">\r\n            <h6 class=\"card-title mb-0\">{{ t('common.actions') }}</h6>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"d-grid gap-2\">\r\n              @if (employee()?.isActive) {\r\n                <button \r\n                  type=\"button\" \r\n                  class=\"btn btn-outline-warning\">\r\n                  <i class=\"fa-solid fa-user-slash me-2\"></i>\r\n                  {{ t('employees.deactivate') }}\r\n                </button>\r\n              } @else {\r\n                <button \r\n                  type=\"button\" \r\n                  class=\"btn btn-outline-success\">\r\n                  <i class=\"fa-solid fa-user-check me-2\"></i>\r\n                  {{ t('employees.activate') }}\r\n                </button>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Attendance Information Section -->\r\n    <div class=\"row mt-4\">\r\n      <div class=\"col-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <h5 class=\"card-title mb-0\">\r\n                <i class=\"fa-solid fa-calendar-check me-2\"></i>\r\n                {{ t('attendance.employee_detail') }}\r\n              </h5>\r\n              <div class=\"d-flex gap-2\">\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control form-control-sm\"\r\n                  [value]=\"selectedDateRange().start\"\r\n                  (change)=\"onDateRangeChange($event.target.value, selectedDateRange().end)\"\r\n                  style=\"width: auto;\">\r\n                <span class=\"align-self-center\">{{ t('common.to') }}</span>\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control form-control-sm\"\r\n                  [value]=\"selectedDateRange().end\"\r\n                  (change)=\"onDateRangeChange(selectedDateRange().start, $event.target.value)\"\r\n                  style=\"width: auto;\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-success btn-sm\"\r\n                  (click)=\"exportAttendanceData()\"\r\n                  [disabled]=\"attendanceRecords().length === 0\">\r\n                  <i class=\"fa-solid fa-download\"></i>\r\n                  {{ t('attendance.actions.export_data') }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <!-- Attendance Summary Cards -->\r\n            <app-stats-grid\r\n              [stats]=\"attendanceStats()\"\r\n              [columns]=\"4\"\r\n              [loading]=\"attendanceLoading()\"\r\n              class=\"mb-4\">\r\n            </app-stats-grid>\r\n\r\n            <!-- Performance Indicator -->\r\n            <div class=\"row mb-4\">\r\n              <div class=\"col-12\">\r\n                <div class=\"card\">\r\n                  <div class=\"card-body text-center\">\r\n                    <h6 class=\"card-title\">{{ t('attendance.stats.attendance_rate') }}</h6>\r\n                    <div class=\"performance-circle mb-3\">\r\n                      <div class=\"circle-progress\" [style.--progress]=\"attendanceRate() + '%'\">\r\n                        <span class=\"percentage\">{{ attendanceRate() }}%</span>\r\n                      </div>\r\n                    </div>\r\n                    <app-status-badge\r\n                      [label]=\"getPerformanceLabel(attendanceRate())\"\r\n                      [variant]=\"getPerformanceColor(attendanceRate())\"\r\n                      [icon]=\"attendanceRate() >= 95 ? 'fas fa-star' : attendanceRate() >= 90 ? 'fas fa-thumbs-up' : attendanceRate() >= 80 ? 'fas fa-exclamation-triangle' : 'fas fa-times-circle'\">\r\n                    </app-status-badge>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Attendance Tabs -->\r\n            <ul class=\"nav nav-tabs mb-3\" role=\"tablist\">\r\n              <li class=\"nav-item\" role=\"presentation\">\r\n                <button\r\n                  class=\"nav-link\"\r\n                  [class.active]=\"activeTab() === 'overview'\"\r\n                  (click)=\"setActiveTab('overview')\"\r\n                  type=\"button\">\r\n                  <i class=\"fa-solid fa-chart-pie me-2\"></i>\r\n                  {{ t('attendance.statistics.overview') }}\r\n                </button>\r\n              </li>\r\n              <li class=\"nav-item\" role=\"presentation\">\r\n                <button\r\n                  class=\"nav-link\"\r\n                  [class.active]=\"activeTab() === 'records'\"\r\n                  (click)=\"setActiveTab('records')\"\r\n                  type=\"button\">\r\n                  <i class=\"fa-solid fa-table me-2\"></i>\r\n                  {{ t('attendance.statistics.records') }}\r\n                </button>\r\n              </li>\r\n              <li class=\"nav-item\" role=\"presentation\">\r\n                <button\r\n                  class=\"nav-link\"\r\n                  [class.active]=\"activeTab() === 'transactions'\"\r\n                  (click)=\"setActiveTab('transactions')\"\r\n                  type=\"button\">\r\n                  <i class=\"fa-solid fa-list me-2\"></i>\r\n                  {{ t('attendance.statistics.transactions') }}\r\n                </button>\r\n              </li>\r\n            </ul>\r\n\r\n            <!-- Tab Content -->\r\n            <div class=\"tab-content\">\r\n              <!-- Overview Tab -->\r\n              @if (activeTab() === 'overview') {\r\n                <div class=\"tab-pane fade show active\">\r\n                @if (attendanceLoading()) {\r\n                  <div class=\"text-center py-4\">\r\n                    <app-loading-spinner\r\n                      [message]=\"t('attendance.messages.loading_data')\"\r\n                      [variant]=\"'primary'\"\r\n                      [centered]=\"true\">\r\n                    </app-loading-spinner>\r\n                  </div>\r\n                } @else {\r\n                  <div class=\"row\">\r\n                    <div class=\"col-md-6\">\r\n                      <h6 class=\"fw-semibold mb-3\">{{ t('attendance.statistics.attendance_breakdown') }}</h6>\r\n                      <div class=\"list-group list-group-flush\">\r\n                        <div class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                          <span>\r\n                            <i class=\"fa-solid fa-user-check text-success me-2\"></i>\r\n                            {{ t('attendance.status.present') }}\r\n                          </span>\r\n                          <span class=\"badge bg-success rounded-pill\">{{ presentDays() }}</span>\r\n                        </div>\r\n                        <div class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                          <span>\r\n                            <i class=\"fa-solid fa-user-times text-danger me-2\"></i>\r\n                            {{ t('attendance.status.absent') }}\r\n                          </span>\r\n                          <span class=\"badge bg-danger rounded-pill\">{{ absentDays() }}</span>\r\n                        </div>\r\n                        <div class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                          <span>\r\n                            <i class=\"fa-solid fa-clock text-warning me-2\"></i>\r\n                            {{ t('attendance.status.late') }}\r\n                          </span>\r\n                          <span class=\"badge bg-warning rounded-pill\">{{ lateDays() }}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div class=\"col-md-6\">\r\n                      <h6 class=\"fw-semibold mb-3\">{{ t('attendance.statistics.time_summary') }}</h6>\r\n                      <div class=\"list-group list-group-flush\">\r\n                        <div class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                          <span>{{ t('attendance.stats.average_working_hours') }}</span>\r\n                          <span class=\"fw-medium\">{{ averageWorkingHours() }}h</span>\r\n                        </div>\r\n                        <div class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                          <span>{{ t('attendance.stats.total_overtime_hours') }}</span>\r\n                          <span class=\"fw-medium\">{{ totalOvertimeHours() }}h</span>\r\n                        </div>\r\n                        <div class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                          <span>{{ t('attendance.statistics.total_working_days') }}</span>\r\n                          <span class=\"fw-medium\">{{ totalWorkingDays() }}</span>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                }\r\n                </div>\r\n              }\r\n\r\n              <!-- Records Tab -->\r\n              @if (activeTab() === 'records') {\r\n                <div class=\"tab-pane fade show active\">\r\n                @if (attendanceLoading()) {\r\n                  <div class=\"text-center py-4\">\r\n                    <app-loading-spinner\r\n                      [variant]=\"'primary'\"\r\n                      [centered]=\"true\">\r\n                    </app-loading-spinner>\r\n                  </div>\r\n                } @else if (attendanceRecords().length > 0) {\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table table-hover\">\r\n                      <thead class=\"table-light\">\r\n                        <tr>\r\n                          <th>{{ t('attendance.fields.attendance_date') }}</th>\r\n                          <th>{{ t('attendance.fields.check_in_time') }}</th>\r\n                          <th>{{ t('attendance.fields.check_out_time') }}</th>\r\n                          <th>{{ t('attendance.fields.work_duration') }}</th>\r\n                          <th>{{ t('attendance.fields.status') }}</th>\r\n                          <th>{{ t('attendance.fields.notes') }}</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        @for (record of attendanceRecords(); track record.attendanceDate) {\r\n                          <tr>\r\n                            <td>\r\n                            <span class=\"fw-medium\">{{ formatDate(record.attendanceDate) }}</span>\r\n                          </td>\r\n                          <td>\r\n                            <span [class]=\"record.actualCheckInTime ? 'text-success fw-medium' : 'text-muted'\">\r\n                              {{ formatTime(record.actualCheckInTime) }}\r\n                            </span>\r\n                          </td>\r\n                          <td>\r\n                            <span [class]=\"record.actualCheckOutTime ? 'text-info fw-medium' : 'text-muted'\">\r\n                              {{ formatTime(record.actualCheckOutTime) }}\r\n                            </span>\r\n                          </td>\r\n                          <td>\r\n                            <span class=\"fw-medium\">\r\n                              {{ calculateWorkDuration(record.actualCheckInTime, record.actualCheckOutTime) }}\r\n                            </span>\r\n                          </td>\r\n                          <td>\r\n                            <span [class]=\"getStatusBadgeClass(record.status)\">\r\n                              {{ t('attendance.status.' + record.status.toString().toLowerCase()) }}\r\n                            </span>\r\n                          </td>\r\n                          <td>\r\n                            <span class=\"text-muted\">{{ record.notes || '--' }}</span>\r\n                          </td>\r\n                          </tr>\r\n                        }\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                } @else {\r\n                  <app-empty-state\r\n                    [icon]=\"'fa-solid fa-calendar-xmark'\"\r\n                    [title]=\"t('attendance.no_records')\"\r\n                    [message]=\"t('attendance.no_records_description')\">\r\n                  </app-empty-state>\r\n                }\r\n                </div>\r\n              }\r\n\r\n              <!-- Transactions Tab -->\r\n              @if (activeTab() === 'transactions') {\r\n                <div class=\"tab-pane fade show active\">\r\n                @if (recentTransactions().length > 0) {\r\n                  <div class=\"table-responsive\">\r\n                    <table class=\"table table-hover\">\r\n                      <thead class=\"table-light\">\r\n                        <tr>\r\n                          <th>{{ t('attendance.fields.datetime') }}</th>\r\n                          <th>{{ t('attendance.fields.transaction_type') }}</th>\r\n                          <th>{{ t('attendance.fields.location') }}</th>\r\n                          <th>{{ t('attendance.fields.manual') }}</th>\r\n                          <th>{{ t('attendance.fields.notes') }}</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        @for (transaction of recentTransactions(); track transaction.transactionTimeLocal) {\r\n                          <tr>\r\n                            <td>\r\n                            <div class=\"fw-medium\">{{ formatDate(transaction.transactionTimeLocal) }}</div>\r\n                            <small class=\"text-muted\">{{ formatTime(transaction.transactionTimeLocal) }}</small>\r\n                          </td>\r\n                          <td>\r\n                            <span [class]=\"getTransactionTypeBadgeClass(transaction.transactionType)\">\r\n                              {{ transaction.transactionTypeText }}\r\n                            </span>\r\n                          </td>\r\n                          <td>\r\n                            <span class=\"text-muted\">{{ transaction.location || '--' }}</span>\r\n                          </td>\r\n                          <td>\r\n                            <app-status-badge\r\n                              [label]=\"transaction.isManual ? t('app.yes') : t('app.no')\"\r\n                              [variant]=\"transaction.isManual ? 'warning' : 'success'\"\r\n                              [icon]=\"transaction.isManual ? 'fas fa-hand-paper' : 'fas fa-fingerprint'\"\r\n                              [size]=\"'sm'\">\r\n                            </app-status-badge>\r\n                          </td>\r\n                          <td>\r\n                            <span class=\"text-muted\">{{ transaction.notes || '--' }}</span>\r\n                          </td>\r\n                          </tr>\r\n                        }\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                } @else {\r\n                  <app-empty-state\r\n                    [icon]=\"'fa-solid fa-list'\"\r\n                    [title]=\"t('attendance.no_transactions')\"\r\n                    [message]=\"t('attendance.no_transactions_description')\">\r\n                  </app-empty-state>\r\n                }\r\n                </div>\r\n              }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  } @else {\r\n    <div class=\"alert alert-danger\">\r\n      <i class=\"fa-solid fa-exclamation-triangle me-2\"></i>\r\n      {{ error() || t('employees.employee_not_found') }}\r\n    </div>\r\n  }\r\n</div>"],
  "mappings": "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",
  "names": []
}
