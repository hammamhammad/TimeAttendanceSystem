{
  "version": 3,
  "sources": ["src/app/pages/roles/roles.component.ts", "src/app/pages/roles/roles.component.html"],
  "sourcesContent": ["import { Component, OnInit, signal, inject, computed } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { I18nService } from '../../core/i18n/i18n.service';\nimport { RolesService, CreateRoleRequest, UpdateRoleRequest, PermissionGroupDto } from './roles.service';\nimport { Role, Permission } from '../../shared/models/role.model';\nimport { PermissionUtils, PermissionResources, PermissionActions } from '../../shared/utils/permission.utils';\nimport { NotificationService } from '../../core/notifications/notification.service';\nimport { ConfirmationService } from '../../core/confirmation/confirmation.service';\nimport { PermissionService } from '../../core/auth/permission.service';\nimport { DataTableComponent, TableColumn, TableAction } from '../../shared/components/data-table/data-table.component';\nimport { PageHeaderComponent } from '../../shared/components/page-header/page-header.component';\nimport { UnifiedFilterComponent } from '../../shared/components/unified-filter/unified-filter.component';\nimport { StatusBadgeComponent } from '../../shared/components/status-badge/status-badge.component';\nimport { BadgeListComponent } from '../../shared/components/badge-list/badge-list.component';\nimport { ModalWrapperComponent } from '../../shared/components/modal-wrapper/modal-wrapper.component';\nimport { LoadingSpinnerComponent } from '../../shared/components/loading-spinner/loading-spinner.component';\nimport { EmptyStateComponent } from '../../shared/components/empty-state/empty-state.component';\n\n@Component({\n  selector: 'app-roles',\n  standalone: true,\n  imports: [CommonModule, FormsModule, DataTableComponent, PageHeaderComponent, UnifiedFilterComponent, StatusBadgeComponent, BadgeListComponent, ModalWrapperComponent, LoadingSpinnerComponent, EmptyStateComponent],\n  templateUrl: './roles.component.html',\n  styleUrls: ['./roles.component.css']\n})\nexport class RolesComponent implements OnInit {\n  private rolesService = inject(RolesService);\n  private router = inject(Router);\n  private notificationService = inject(NotificationService);\n  private confirmationService = inject(ConfirmationService);\n  public i18n = inject(I18nService);\n  public permissionService = inject(PermissionService);\n\n  // Permission constants for use in template\n  readonly PERMISSIONS = {\n    ROLE_CREATE: `${PermissionResources.ROLE}.${PermissionActions.CREATE}`,\n    ROLE_READ: `${PermissionResources.ROLE}.${PermissionActions.READ}`,\n    ROLE_UPDATE: `${PermissionResources.ROLE}.${PermissionActions.UPDATE}`,\n    ROLE_DELETE: `${PermissionResources.ROLE}.${PermissionActions.DELETE}`,\n    ROLE_MANAGE: `${PermissionResources.ROLE}.${PermissionActions.MANAGE}`,\n    ROLE_ASSIGN_PERMISSIONS: `${PermissionResources.ROLE}.${PermissionActions.ASSIGN_PERMISSION}`\n  };\n\n\n  // Signals for state management\n  loading = signal(false);\n  roles = signal<Role[]>([]);\n  allPermissions = signal<Permission[]>([]);\n  groupedPermissions = signal<PermissionGroupDto[]>([]);\n  \n  // Filter signals\n  searchTerm = '';\n\n  // Sorting state\n  sortColumn = signal<keyof Role>('name');\n  sortDirection = signal<'asc' | 'desc'>('asc');\n\n  // Modal state\n  showPermissionsModal = signal(false);\n  selectedRole = signal<Role | null>(null);\n  managingPermissions = signal(false);\n\n  // Data table configuration\n  tableColumns = computed<TableColumn[]>(() => [\n    {\n      key: 'name',\n      label: this.t('roles.name'),\n      sortable: true,\n      width: '200px',\n      priority: 'high',\n      mobileLabel: this.t('roles.name'),\n      renderHtml: true\n    },\n    {\n      key: 'permissions',\n      label: this.t('roles.permissions'),\n      sortable: false,\n      width: '300px',\n      priority: 'medium',\n      hideOnMobile: false,\n      mobileLabel: this.t('roles.permissions'),\n      renderHtml: true\n    },\n    {\n      key: 'userCount',\n      label: this.t('roles.users'),\n      sortable: true,\n      width: '100px',\n      align: 'center',\n      priority: 'medium',\n      mobileLabel: this.t('roles.users'),\n      renderHtml: true\n    },\n    {\n      key: 'type',\n      label: this.t('roles.type'),\n      sortable: false,\n      width: '120px',\n      align: 'center',\n      priority: 'low',\n      hideOnMobile: true,\n      mobileLabel: this.t('roles.type'),\n      renderHtml: true\n    },\n    {\n      key: 'createdAtUtc',\n      label: this.t('common.created'),\n      sortable: true,\n      width: '150px',\n      priority: 'low',\n      hideOnMobile: true,\n      mobileLabel: this.t('common.created')\n    }\n  ]);\n\n  tableActions = computed<TableAction[]>(() => [\n    {\n      key: 'view',\n      label: this.t('common.view'),\n      icon: 'fa-eye',\n      color: 'primary',\n      condition: () => this.permissionService.has(this.PERMISSIONS.ROLE_READ)\n    },\n    {\n      key: 'manage-permissions',\n      label: this.t('roles.manage_permissions'),\n      icon: 'fa-shield-alt',\n      color: 'info',\n      condition: (role: Role) => this.canManagePermissions(role) && this.permissionService.has(this.PERMISSIONS.ROLE_ASSIGN_PERMISSIONS)\n    },\n    {\n      key: 'edit',\n      label: this.t('common.edit'),\n      icon: 'fa-edit',\n      color: 'secondary',\n      condition: (role: Role) => this.canEditRole(role) && this.permissionService.has(this.PERMISSIONS.ROLE_UPDATE)\n    },\n    {\n      key: 'delete',\n      label: this.t('common.delete'),\n      icon: 'fa-trash',\n      color: 'danger',\n      condition: (role: Role) => this.canDeleteRole(role) && this.permissionService.has(this.PERMISSIONS.ROLE_DELETE)\n    }\n  ]);\n\n  // Transform roles data for data table\n  tableData = computed(() => {\n    return this.filteredRoles().map(role => ({\n      ...role,\n      name: this.formatRoleName(role),\n      permissions: this.formatRolePermissions(role),\n      userCount: this.formatUserCount(role),\n      type: this.formatRoleType(role),\n      createdAtUtc: this.formatDate(role.createdAtUtc)\n    }));\n  });\n\n  ngOnInit(): void {\n    this.loadRoles();\n    this.loadPermissions();\n  }\n\n  t(key: string): string {\n    return this.i18n.t(key);\n  }\n\n  loadRoles(): void {\n    this.loading.set(true);\n    this.rolesService.getRoles(true).subscribe({\n      next: (roles) => {\n        this.roles.set(roles);\n        this.loading.set(false);\n      },\n      error: (error) => {\n        console.error('Failed to load roles:', error);\n        this.loading.set(false);\n        this.notificationService.error(\n          this.t('app.error'),\n          this.t('errors.server')\n        );\n      }\n    });\n  }\n\n  loadPermissions(): void {\n    // Load flat permissions for existing functionality\n    this.rolesService.getPermissions().subscribe({\n      next: (permissions) => {\n        this.allPermissions.set(permissions);\n      },\n      error: (error) => {\n        console.error('Failed to load permissions:', error);\n        this.notificationService.error(\n          this.t('app.error'),\n          this.t('roles.failed_to_load_permissions')\n        );\n      }\n    });\n\n    // Load grouped permissions for display\n    this.rolesService.getGroupedPermissions().subscribe({\n      next: (groupedPermissions) => {\n        this.groupedPermissions.set(groupedPermissions);\n      },\n      error: (error) => {\n        console.error('Failed to load grouped permissions:', error);\n        this.notificationService.error(\n          this.t('app.error'),\n          this.t('roles.failed_to_load_permissions')\n        );\n      }\n    });\n  }\n\n\n  canEditRole(role: Role): boolean {\n    // First check if user has permission to update roles\n    if (!this.permissionService.has(this.PERMISSIONS.ROLE_UPDATE)) {\n      return false;\n    }\n\n    // Use business logic helper\n    return this.canEditRoleBusinessLogic(role);\n  }\n\n  canDeleteRole(role: Role): boolean {\n    // First check if user has permission to delete roles\n    if (!this.permissionService.has(this.PERMISSIONS.ROLE_DELETE)) {\n      return false;\n    }\n\n    // Use the role's isDeletable property and check user count\n    return role.isDeletable && role.userCount === 0;\n  }\n\n\n  canManagePermissions(role: Role): boolean {\n    // First check if user has permission to assign permissions\n    if (!this.permissionService.has(this.PERMISSIONS.ROLE_ASSIGN_PERMISSIONS)) {\n      return false;\n    }\n\n    // Use same business logic as canEditRole for consistency\n    return this.canEditRoleBusinessLogic(role);\n  }\n\n  private canEditRoleBusinessLogic(role: Role): boolean {\n    return role.isEditable;\n  }\n\n  onManagePermissions(role: Role): void {\n    if (!this.canManagePermissions(role)) {\n      return;\n    }\n    this.selectedRole.set(role);\n    this.showPermissionsModal.set(true);\n  }\n\n  closePermissionsModal(): void {\n    this.showPermissionsModal.set(false);\n    this.selectedRole.set(null);\n  }\n\n  isPermissionAssigned(permissionId: number): boolean {\n    const role = this.selectedRole();\n    if (!role) return false;\n    return role.permissions.some(p => p.id === permissionId);\n  }\n\n  onTogglePermission(permission: Permission): void {\n    const role = this.selectedRole();\n    if (!role || this.managingPermissions()) return;\n\n    this.managingPermissions.set(true);\n    \n    const isAssigned = this.isPermissionAssigned(permission.id);\n    \n    const operation = isAssigned \n      ? this.rolesService.removePermissionFromRole(role.id, permission.id)\n      : this.rolesService.assignPermissionToRole(role.id, { permissionId: permission.id });\n\n    operation.subscribe({\n      next: () => {\n        // Update the role's permissions locally\n        const updatedRoles = this.roles().map(r => {\n          if (r.id === role.id) {\n            if (isAssigned) {\n              r.permissions = r.permissions.filter(p => p.id !== permission.id);\n            } else {\n              r.permissions = [...r.permissions, permission];\n            }\n          }\n          return r;\n        });\n        this.roles.set(updatedRoles);\n        this.selectedRole.set(updatedRoles.find(r => r.id === role.id) || null);\n        this.managingPermissions.set(false);\n      },\n      error: (error) => {\n        console.error('Failed to update permission:', error);\n        this.managingPermissions.set(false);\n        this.notificationService.error(\n          this.t('app.error'),\n          this.t('roles.failed_to_update_permission')\n        );\n      }\n    });\n  }\n\n\n  formatDate(dateString: string): string {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(this.i18n.getCurrentLocale(), {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  }\n\n  // Filtered roles computed signal\n  filteredRoles = computed(() => {\n    let filtered = this.roles();\n\n    if (this.searchTerm?.trim()) {\n      const searchLower = this.searchTerm.toLowerCase();\n      filtered = filtered.filter(role =>\n        role.name.toLowerCase().includes(searchLower) ||\n        role.permissions.some(p => p.key.toLowerCase().includes(searchLower))\n      );\n    }\n\n    // Apply sorting\n    const sortCol = this.sortColumn();\n    const sortDir = this.sortDirection();\n\n    return filtered.sort((a, b) => {\n      let aVal = a[sortCol] as any;\n      let bVal = b[sortCol] as any;\n\n      if (typeof aVal === 'string') {\n        aVal = aVal.toLowerCase();\n        bVal = bVal.toLowerCase();\n      }\n\n      if (aVal < bVal) return sortDir === 'asc' ? -1 : 1;\n      if (aVal > bVal) return sortDir === 'asc' ? 1 : -1;\n      return 0;\n    });\n  });\n\n  // Data table formatting methods\n  formatRoleName(role: Role): string {\n    let html = `<div><strong>${role.name}</strong>`;\n    if (role.isSystem) {\n      html += `<i class=\"fa-solid fa-shield-alt text-primary ms-1\" title=\"${this.t('roles.system_role')}\"></i>`;\n    }\n    html += '</div>';\n    return html;\n  }\n\n  formatRolePermissions(role: Role): string {\n    if (role.permissions.length === 0) {\n      return `<span class=\"text-muted\">${this.t('roles.no_permissions')}</span>`;\n    }\n\n    let html = '<div class=\"d-flex flex-wrap gap-1\">';\n    const visiblePermissions = role.permissions.slice(0, 3);\n\n    visiblePermissions.forEach(permission => {\n      html += `<span class=\"badge bg-secondary-subtle text-secondary small\">${permission.key}</span>`;\n    });\n\n    if (role.permissions.length > 3) {\n      html += `<span class=\"badge bg-light text-dark small\">+${role.permissions.length - 3} more</span>`;\n    }\n\n    html += '</div>';\n    return html;\n  }\n\n  formatUserCount(role: Role): string {\n    return `<span class=\"badge bg-primary-subtle text-primary\">${role.userCount}</span>`;\n  }\n\n  formatRoleType(role: Role): string {\n    if (role.isSystem) {\n      return `<span class=\"badge bg-warning-subtle text-warning\">${this.t('roles.system')}</span>`;\n    } else {\n      return `<span class=\"badge bg-success-subtle text-success\">${this.t('roles.custom')}</span>`;\n    }\n  }\n\n  // Data table action handler\n  onActionClick(event: {action: string, item: Role}): void {\n    const { action, item } = event;\n\n    switch (action) {\n      case 'view':\n        this.onViewRole(item);\n        break;\n      case 'manage-permissions':\n        this.onManagePermissions(item);\n        break;\n      case 'edit':\n        this.onEditRole(item);\n        break;\n      case 'delete':\n        this.onDeleteRole(item);\n        break;\n      default:\n        console.warn('Unknown action:', action);\n    }\n  }\n\n  onSearchTermChange(searchTerm: string): void {\n    this.searchTerm = searchTerm;\n  }\n\n  onFiltersChange(filters: any): void {\n    // Handle additional filters if needed in the future\n    console.log('Filters changed:', filters);\n  }\n\n  onClearFilters(): void {\n    this.searchTerm = '';\n  }\n\n  onRefreshData(): void {\n    // Reset filters\n    this.searchTerm = '';\n\n    // Reload data\n    this.loadRoles();\n  }\n\n  hasActiveFilters(): boolean {\n    return !!this.searchTerm;\n  }\n\n  // Role CRUD operations\n  onCreateRole(): void {\n    // Navigate to create role page instead of showing modal\n    this.router.navigate(['/roles/create']);\n  }\n\n  onViewRole(role: Role): void {\n    this.router.navigate(['/roles', role.id, 'view']);\n  }\n\n  onEditRole(role: Role): void {\n    if (!this.canEditRole(role)) return;\n    // Navigate to edit role page\n    this.router.navigate(['/roles', role.id, 'edit']);\n  }\n\n  async onDeleteRole(role: Role): Promise<void> {\n    if (!this.canDeleteRole(role)) return;\n    \n    const result = await this.confirmationService.confirm({\n      title: this.t('roles.delete_role'),\n      message: this.t('roles.delete_role_confirmation').replace('{{roleName}}', role.name),\n      confirmText: this.t('common.delete'),\n      cancelText: this.t('common.cancel'),\n      confirmButtonClass: 'btn-danger',\n      icon: 'fa-trash',\n      iconClass: 'text-danger'\n    });\n    \n    if (result.confirmed) {\n      this.rolesService.deleteRole(role.id).subscribe({\n        next: () => {\n          this.roles.set(this.roles().filter(r => r.id !== role.id));\n          this.notificationService.success(\n            this.t('app.success'),\n            this.t('roles.role_deleted_successfully')\n          );\n        },\n        error: (error) => {\n          console.error('Failed to delete role:', error);\n          this.notificationService.error(\n            this.t('app.error'),\n            this.t('errors.server')\n          );\n        }\n      });\n    }\n  }\n\n\n  canCreateRoles(): boolean {\n    // Check if user has permission to create roles\n    return this.permissionService.has(this.PERMISSIONS.ROLE_CREATE);\n  }\n\n\n  // Permission display enhancement methods using PermissionUtils\n  getPermissionResource(permissionKey: string): string {\n    return PermissionUtils.getResourceName(PermissionUtils.parsePermissionKey(permissionKey).resource);\n  }\n\n  getPermissionAction(permissionKey: string): string {\n    const action = PermissionUtils.parsePermissionKey(permissionKey).action;\n    return action ? PermissionUtils.getActionName(action) : 'Action';\n  }\n\n  getActionBadgeClass(permissionKey: string): string {\n    const action = PermissionUtils.parsePermissionKey(permissionKey).action;\n    return action ? PermissionUtils.getActionBadgeClass(action) : 'bg-light text-dark';\n  }\n\n  getPermissionBadgeStatus(permissionKey: string): 'success' | 'info' | 'warning' | 'primary' | 'danger' | 'secondary' {\n    const action = PermissionUtils.parsePermissionKey(permissionKey).action;\n    const badgeClass = action ? PermissionUtils.getActionBadgeClass(action) : 'bg-light text-dark';\n\n    // Map badge classes to status types\n    if (badgeClass.includes('bg-success')) return 'success';\n    if (badgeClass.includes('bg-info')) return 'info';\n    if (badgeClass.includes('bg-warning')) return 'warning';\n    if (badgeClass.includes('bg-primary')) return 'primary';\n    if (badgeClass.includes('bg-danger')) return 'danger';\n    return 'secondary';\n  }\n\n  getPermissionIcon(permissionKey: string): string {\n    const resource = PermissionUtils.parsePermissionKey(permissionKey).resource;\n    return PermissionUtils.getResourceIcon(resource);\n  }\n\n  getPermissionDescription(permission: Permission): string {\n    if (permission.description) {\n      return permission.description;\n    }\n    const { resource, action } = PermissionUtils.parsePermissionKey(permission.key);\n    const actionDesc = PermissionUtils.getActionDescription(action);\n    const resourceDesc = PermissionUtils.getResourceDescription(resource);\n    return `${actionDesc} ${resourceDesc.toLowerCase()}`;\n  }\n\n  // Sorting methods\n  onSort(column: keyof Role): void {\n    const currentColumn = this.sortColumn();\n    const currentDirection = this.sortDirection();\n\n    if (currentColumn === column) {\n      // Toggle direction if same column\n      this.sortDirection.set(currentDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      // Set new column and default to ascending\n      this.sortColumn.set(column);\n      this.sortDirection.set('asc');\n    }\n  }\n\n  getSortIcon(column: keyof Role): string {\n    const currentColumn = this.sortColumn();\n    const currentDirection = this.sortDirection();\n\n    if (currentColumn !== column) {\n      return 'fas fa-sort text-muted';\n    }\n\n    return currentDirection === 'asc' ? 'fas fa-sort-up text-primary' : 'fas fa-sort-down text-primary';\n  }\n\n  isSortable(column: keyof Role): boolean {\n    // Define which columns are sortable\n    const sortableColumns: (keyof Role)[] = ['name', 'userCount', 'createdAtUtc'];\n    return sortableColumns.includes(column);\n  }\n}", "<div class=\"app-list-page\">\n  <!-- Page Header -->\n  <app-page-header\n    [title]=\"t('roles.title')\">\n  </app-page-header>\n\n  <!-- Standardized Filters Component -->\n  <app-unified-filter\n    moduleName=\"roles\"\n    [refreshing]=\"loading()\"\n    (searchChange)=\"onSearchTermChange($event)\"\n    (filtersChange)=\"onFiltersChange($event)\"\n    (add)=\"onCreateRole()\"\n    (refresh)=\"onRefreshData()\">\n  </app-unified-filter>\n\n  <!-- Roles Table Card -->\n  <div class=\"card\">\n    <div class=\"card-body\">\n      @if (loading()) {\n        <div class=\"text-center py-4\">\n          <app-loading-spinner\n            [message]=\"t('common.loading')\"\n            [variant]=\"'primary'\"\n            [centered]=\"true\">\n          </app-loading-spinner>\n        </div>\n      } @else if (filteredRoles().length === 0) {\n        <app-empty-state\n          [icon]=\"'fa-solid fa-user-shield'\"\n          [message]=\"t('roles.no_roles_found')\"\n          [showClearFilters]=\"hasActiveFilters()\"\n          [clearFiltersText]=\"t('common.clear_filters')\"\n          (clearFilters)=\"onClearFilters()\">\n        </app-empty-state>\n      } @else {\n        <!-- Unified Data Table -->\n        <app-data-table\n          [data]=\"tableData()\"\n          [columns]=\"tableColumns()\"\n          [actions]=\"tableActions()\"\n          [loading]=\"loading\"\n          [paginated]=\"true\"\n          [emptyMessage]=\"t('roles.no_roles_found')\"\n          [responsiveMode]=\"'auto'\"\n          (actionClick)=\"onActionClick($event)\"\n          class=\"table-hover\">\n        </app-data-table>\n      }\n    </div>\n  </div>\n</div>\n\n<!-- Permission Management Modal -->\n<app-modal-wrapper\n  [show]=\"showPermissionsModal()\"\n  [title]=\"t('roles.manage_permissions_for') + ': ' + (selectedRole()?.name || '')\"\n  [size]=\"'xl'\"\n  [centered]=\"true\"\n  [loading]=\"managingPermissions()\"\n  (close)=\"closePermissionsModal()\">\n\n  <div class=\"modal-body\">\n          @if (selectedRole()) {\n            <!-- Role Info -->\n            <div class=\"role-info mb-4\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"avatar-md me-3\">\n                  <div class=\"avatar-title bg-info-subtle text-info rounded-circle\">\n                    <i class=\"fa-solid fa-user-shield\"></i>\n                  </div>\n                </div>\n                <div>\n                  <h6 class=\"mb-1\">{{ selectedRole()!.name }}</h6>\n                  <p class=\"text-muted mb-0\">\n                    {{ selectedRole()!.permissions.length }} {{ t('roles.permissions_assigned') }}\n                  </p>\n                </div>\n              </div>\n            </div>\n\n            <!-- All Permissions List -->\n            <div class=\"permissions-list border rounded p-3\" style=\"max-height: 400px; overflow-y: auto;\">\n              <div class=\"row g-2\">\n                @for (permission of allPermissions(); track permission.id) {\n                  <div class=\"col-md-6 col-lg-4\">\n                    <div class=\"permission-item border rounded p-2\" \n                         [class.bg-light]=\"isPermissionAssigned(permission.id)\"\n                         [class.loading]=\"managingPermissions()\">\n                      <div class=\"form-check d-flex align-items-start\">\n                        <input\n                          class=\"form-check-input mt-1\"\n                          type=\"checkbox\"\n                          [id]=\"'permission-' + permission.id\"\n                          [checked]=\"isPermissionAssigned(permission.id)\"\n                          [disabled]=\"managingPermissions()\"\n                          (change)=\"onTogglePermission(permission)\"\n                        />\n                        <div class=\"form-check-content ms-2 flex-grow-1\">\n                          <div class=\"d-flex align-items-center mb-1\">\n                            <i class=\"fas me-1 text-muted\" [ngClass]=\"getPermissionIcon(permission.key)\" style=\"font-size: 0.75rem;\"></i>\n                            <label class=\"form-check-label fw-medium me-2\" [for]=\"'permission-' + permission.id\">\n                              <small>{{ getPermissionResource(permission.key) }}</small>\n                            </label>\n                            <app-status-badge\n                              [status]=\"getPermissionBadgeStatus(permission.key)\"\n                              [label]=\"getPermissionAction(permission.key)\"\n                              [size]=\"'sm'\">\n                            </app-status-badge>\n                          </div>\n                          <p class=\"text-muted small mb-0\" style=\"font-size: 0.7rem; margin-left: 1.25rem;\">\n                            {{ getPermissionDescription(permission) }}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                }\n              </div>\n              \n              @if (allPermissions().length === 0) {\n                <app-empty-state\n                  [icon]=\"'fa-solid fa-key'\"\n                  [message]=\"t('roles.no_permissions_available')\"\n                  [size]=\"'sm'\">\n                </app-empty-state>\n              }\n            </div>\n\n            @if (managingPermissions()) {\n              <div class=\"text-center py-3\">\n                <app-loading-spinner\n                  [message]=\"t('roles.updating_permissions')\"\n                  [variant]=\"'primary'\"\n                  [size]=\"'sm'\"\n                  [centered]=\"true\">\n                </app-loading-spinner>\n              </div>\n            }\n          }\n  </div>\n\n  <div modal-footer class=\"d-flex gap-2 justify-content-end\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closePermissionsModal()\">\n      {{ t('common.close') }}\n    </button>\n  </div>\n\n</app-modal-wrapper>\n\n"],
  "mappings": "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",
  "names": []
}
