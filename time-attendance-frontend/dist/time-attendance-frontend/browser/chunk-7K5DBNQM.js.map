{
  "version": 3,
  "sources": ["src/app/shared/components/data-table/data-table.component.ts"],
  "sourcesContent": ["import { Component, Input, Output, EventEmitter, signal, TemplateRef, ContentChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nexport interface TableColumn {\n  key: string;\n  label: string;\n  sortable?: boolean;\n  width?: string;\n  align?: 'left' | 'center' | 'right';\n  hideOnMobile?: boolean;\n  priority?: 'high' | 'medium' | 'low';\n  mobileLabel?: string;\n  renderHtml?: boolean;\n}\n\nexport interface TableAction {\n  key: string;\n  label: string;\n  icon?: string;\n  color?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info';\n  condition?: (item: any) => boolean;\n}\n\nexport interface SortEvent {\n  column: string;\n  direction: 'asc' | 'desc';\n}\n\n@Component({\n  selector: 'app-data-table',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  template: `\n    <div class=\"unified-data-table\">\n      <!-- Loading State -->\n      <div *ngIf=\"isLoading()\" class=\"text-center p-4\">\n        <div class=\"spinner-border text-primary\" role=\"status\">\n          <span class=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n\n      <!-- Mobile Card View -->\n      <div class=\"mobile-cards d-block d-md-none\" *ngIf=\"!isLoading() && (responsiveMode === 'cards' || responsiveMode === 'auto')\">\n        <div *ngFor=\"let item of getDisplayedData(); trackBy: trackByFn\" class=\"mobile-card\">\n          <!-- Selection -->\n          <div *ngIf=\"allowSelection\" class=\"mobile-card-selection\">\n            <div class=\"form-check\">\n              <input\n                class=\"form-check-input\"\n                type=\"checkbox\"\n                [checked]=\"isSelected(item)\"\n                (change)=\"toggleSelection(item, $event)\"\n              />\n            </div>\n          </div>\n\n          <!-- Card Content -->\n          <div class=\"mobile-card-content\">\n            <!-- Custom template if provided -->\n            <ng-container *ngIf=\"cardTemplate\"\n                         [ngTemplateOutlet]=\"cardTemplate\"\n                         [ngTemplateOutletContext]=\"{ $implicit: item, actions: getAvailableActions(item) }\">\n            </ng-container>\n\n            <!-- Default card layout -->\n            <div *ngIf=\"!cardTemplate\" class=\"default-card-layout\">\n              <div *ngFor=\"let column of getVisibleColumns()\" class=\"mobile-field\">\n                <span class=\"mobile-label\">{{ column.mobileLabel || column.label }}:</span>\n                <span class=\"mobile-value\">\n                  <ng-container *ngTemplateOutlet=\"cellTemplate; context: { $implicit: item, column: column }\">\n                  </ng-container>\n                  <span *ngIf=\"!cellTemplate && !column.renderHtml\">{{ getNestedValue(item, column.key) }}</span>\n                  <span *ngIf=\"!cellTemplate && column.renderHtml\" [innerHTML]=\"getNestedValue(item, column.key)\"></span>\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Actions -->\n          <div *ngIf=\"actions.length > 0\" class=\"mobile-card-actions\">\n            <div class=\"btn-group btn-group-sm\">\n              <button *ngFor=\"let action of getAvailableActions(item)\"\n                      class=\"btn\"\n                      [class]=\"'btn-outline-' + (action.color || 'primary')\"\n                      [title]=\"action.label\"\n                      (click)=\"onAction(action.key, item)\">\n                <i *ngIf=\"action.icon\" [class]=\"'fas ' + action.icon\"></i>\n                <span *ngIf=\"!action.icon\">{{ action.label }}</span>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <!-- Empty state for mobile -->\n        <div *ngIf=\"data.length === 0\" class=\"mobile-empty-state\">\n          <i class=\"fas fa-inbox fa-3x mb-3\"></i>\n          <h5>{{ emptyMessage || 'No Data' }}</h5>\n          <p>{{ emptyTitle || 'No data available' }}</p>\n        </div>\n      </div>\n\n      <!-- Desktop Table View -->\n      <div class=\"table-container\" [class.d-none]=\"isMobileView() && (responsiveMode === 'cards' || responsiveMode === 'auto')\" [class.d-md-block]=\"responsiveMode === 'cards' || responsiveMode === 'auto'\">\n        <div class=\"table-responsive\" [class.overflow-auto]=\"responsiveMode === 'horizontal-scroll'\">\n          <table class=\"table table-hover\">\n            <thead class=\"table-light sticky-top\">\n              <tr>\n                <!-- Selection column -->\n                <th *ngIf=\"allowSelection\" class=\"selection-column\">\n                  <div class=\"form-check\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      [checked]=\"allSelected()\"\n                      [indeterminate]=\"someSelected()\"\n                      (change)=\"toggleSelectAll($event)\"\n                    />\n                  </div>\n                </th>\n\n                <!-- Data columns -->\n                <th *ngFor=\"let column of getVisibleColumns()\"\n                    [style.width]=\"column.width\"\n                    [class.sortable]=\"column.sortable\"\n                    [class.text-center]=\"column.align === 'center'\"\n                    [class.text-end]=\"column.align === 'right'\"\n                    [class.d-none]=\"column.hideOnMobile && isMobileView()\"\n                    [class.d-md-table-cell]=\"column.hideOnMobile\"\n                    (click)=\"onSort(column)\">\n                  <div class=\"d-flex align-items-center\"\n                       [class.justify-content-center]=\"column.align === 'center'\"\n                       [class.justify-content-end]=\"column.align === 'right'\">\n                    <span>{{ column.label }}</span>\n                    <i *ngIf=\"column.sortable && getSortColumn() === column.key\"\n                       class=\"ms-2 fas\"\n                       [class.fa-sort-up]=\"getSortDirection() === 'asc'\"\n                       [class.fa-sort-down]=\"getSortDirection() === 'desc'\"></i>\n                    <i *ngIf=\"column.sortable && getSortColumn() !== column.key\"\n                       class=\"ms-2 fas fa-sort text-muted\"></i>\n                  </div>\n                </th>\n\n                <!-- Actions column -->\n                <th *ngIf=\"actions.length > 0\" class=\"actions-column\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let item of getDisplayedData(); trackBy: trackByFn\"\n                  [class.selected-row]=\"isSelected(item)\"\n                  [class.inactive-row]=\"!isActiveItem(item)\">\n\n                <!-- Selection cell -->\n                <td *ngIf=\"allowSelection\" class=\"selection-column\">\n                  <div class=\"form-check\">\n                    <input\n                      class=\"form-check-input\"\n                      type=\"checkbox\"\n                      [checked]=\"isSelected(item)\"\n                      (change)=\"toggleSelection(item, $event); $event.stopPropagation()\"\n                    />\n                  </div>\n                </td>\n\n                <!-- Data cells -->\n                <td *ngFor=\"let column of getVisibleColumns()\"\n                    [class.text-center]=\"column.align === 'center'\"\n                    [class.text-end]=\"column.align === 'right'\"\n                    [class.d-none]=\"column.hideOnMobile && isMobileView()\"\n                    [class.d-md-table-cell]=\"column.hideOnMobile\">\n                  <ng-container [ngSwitch]=\"column.key\">\n                    <ng-container *ngSwitchDefault>\n                      <ng-container *ngTemplateOutlet=\"cellTemplate; context: { $implicit: item, column: column }\">\n                      </ng-container>\n                      <span *ngIf=\"!cellTemplate && !column.renderHtml\">{{ getNestedValue(item, column.key) }}</span>\n                      <span *ngIf=\"!cellTemplate && column.renderHtml\" [innerHTML]=\"getNestedValue(item, column.key)\"></span>\n                    </ng-container>\n                  </ng-container>\n                </td>\n\n                <!-- Actions cell -->\n                <td *ngIf=\"actions.length > 0\" class=\"actions-column\">\n                  <div class=\"btn-group btn-group-sm\">\n                    <button *ngFor=\"let action of getAvailableActions(item)\"\n                            class=\"btn\"\n                            [class]=\"'btn-outline-' + (action.color || 'primary')\"\n                            [title]=\"action.label\"\n                            (click)=\"onAction(action.key, item); $event.stopPropagation()\">\n                      <i *ngIf=\"action.icon\" [class]=\"'fas ' + action.icon\"></i>\n                      <span *ngIf=\"!action.icon\">{{ action.label }}</span>\n                    </button>\n                  </div>\n                </td>\n              </tr>\n\n              <!-- Empty state -->\n              <tr *ngIf=\"data.length === 0\">\n                <td [attr.colspan]=\"getTotalColumns()\" class=\"text-center py-4 text-muted\">\n                  <i class=\"fas fa-inbox fa-3x mb-3\"></i>\n                  <h5>{{ emptyMessage || 'No Data' }}</h5>\n                  <p>{{ emptyTitle || 'No data available' }}</p>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n        <!-- Enhanced Pagination -->\n        <nav *ngIf=\"showPagination && getTotalPagesValue() > 1\" class=\"mt-3\">\n          <div class=\"row align-items-center\">\n            <div class=\"col-md-6\">\n              <div class=\"d-flex align-items-center\">\n                <label class=\"form-label me-2 mb-0\">Page Size:</label>\n                <select\n                  class=\"form-select form-select-sm\"\n                  style=\"width: auto;\"\n                  [value]=\"getPageSizeValue()\"\n                  (change)=\"onPageSizeChange(+$any($event.target).value)\"\n                >\n                  <option *ngFor=\"let size of pageSizeOptions\" [value]=\"size\">{{ size }}</option>\n                </select>\n                <span class=\"text-muted ms-3\">\n                  Showing\n                  {{ getDisplayStart() }}-{{ getDisplayEnd() }}\n                  of\n                  {{ getTotalItemsValue() }}\n                </span>\n              </div>\n            </div>\n            <div class=\"col-md-6\">\n              <ul class=\"pagination pagination-sm justify-content-end mb-0\">\n                <li class=\"page-item\" [class.disabled]=\"getCurrentPage() === 1\">\n                  <button class=\"page-link\" (click)=\"onPageChange(getCurrentPage() - 1)\" [disabled]=\"getCurrentPage() === 1\">\n                    <i class=\"fas fa-chevron-left\"></i>\n                  </button>\n                </li>\n\n                <li *ngFor=\"let page of getPageNumbers()\"\n                    class=\"page-item\"\n                    [class.active]=\"page === getCurrentPage()\"\n                    [class.disabled]=\"page === -1\">\n                  <button\n                    class=\"page-link\"\n                    *ngIf=\"page !== -1\"\n                    (click)=\"onPageChange(page)\"\n                  >\n                    {{ page }}\n                  </button>\n                  <span class=\"page-link\" *ngIf=\"page === -1\">...</span>\n                </li>\n\n                <li class=\"page-item\" [class.disabled]=\"getCurrentPage() === getTotalPagesValue()\">\n                  <button class=\"page-link\" (click)=\"onPageChange(getCurrentPage() + 1)\" [disabled]=\"getCurrentPage() === getTotalPagesValue()\">\n                    <i class=\"fas fa-chevron-right\"></i>\n                  </button>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </nav>\n      </div>\n    </div>\n  `,\n  styles: [`\n    /* Main Container */\n    .unified-data-table {\n      background: white;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    }\n\n    /* Table Container */\n    .table-container {\n      min-height: 400px;\n      overflow: visible;\n    }\n\n    /* Table Styles */\n    .table {\n      margin-bottom: 0;\n    }\n\n    .table thead th {\n      border-bottom: 2px solid #dee2e6;\n      background-color: #f8f9fa;\n      font-weight: 600;\n      color: #495057;\n      position: sticky;\n      top: 0;\n      z-index: 10;\n    }\n\n    .table tbody tr {\n      transition: all 0.2s ease;\n      animation: fadeIn 0.3s ease-out;\n    }\n\n    .table tbody tr:hover {\n      background-color: #f8f9fa;\n      cursor: pointer;\n    }\n\n    .table tbody tr.selected-row {\n      background-color: #e3f2fd;\n      border-left: 4px solid #2196f3;\n    }\n\n    .table tbody tr.inactive-row {\n      background-color: #fff3cd;\n    }\n\n    .table tbody tr.inactive-row:hover {\n      background-color: #ffeaa7;\n    }\n\n    /* Column Styles */\n    .selection-column {\n      width: 50px;\n      text-align: center;\n    }\n\n    .actions-column {\n      width: 100px;\n      text-align: center;\n    }\n\n    /* Sortable Headers */\n    .sortable {\n      cursor: pointer;\n      user-select: none;\n      transition: color 0.2s ease;\n    }\n\n    .sortable:hover {\n      color: #2196f3;\n      background-color: #f0f7ff;\n    }\n\n    .sortable .fas {\n      font-size: 0.75rem;\n      opacity: 0.6;\n      transition: opacity 0.2s ease, transform 0.2s ease;\n    }\n\n    .sortable:hover .fas {\n      opacity: 1;\n      transform: scale(1.1);\n    }\n\n    /* Button Styles */\n    .btn-group .btn {\n      border: none;\n      box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n      transition: all 0.2s ease;\n    }\n\n    .btn-group .btn:hover {\n      transform: translateY(-1px);\n      box-shadow: 0 2px 6px rgba(0, 0, 0, 0.15);\n    }\n\n    .btn-outline-primary:hover {\n      background-color: #2196f3;\n      border-color: #2196f3;\n    }\n\n    .btn-outline-danger:hover {\n      background-color: #dc3545;\n      border-color: #dc3545;\n    }\n\n    .btn-outline-secondary:hover {\n      background-color: #6c757d;\n      border-color: #6c757d;\n    }\n\n    .btn-outline-info:hover {\n      background-color: #17a2b8;\n      border-color: #17a2b8;\n    }\n\n    .btn-outline-warning:hover {\n      background-color: #ffc107;\n      border-color: #ffc107;\n      color: #212529;\n    }\n\n    /* Form Controls */\n    .form-check-input {\n      cursor: pointer;\n      transition: all 0.2s ease;\n    }\n\n    .form-check-input:checked {\n      background-color: #2196f3;\n      border-color: #2196f3;\n    }\n\n    .form-check-input:indeterminate {\n      background-color: #ffc107;\n      border-color: #ffc107;\n    }\n\n    .form-select {\n      cursor: pointer;\n      transition: border-color 0.2s ease;\n    }\n\n    .form-select:focus {\n      border-color: #2196f3;\n      box-shadow: 0 0 0 0.2rem rgba(33, 150, 243, 0.25);\n    }\n\n    /* Pagination */\n    .pagination {\n      margin-bottom: 0;\n    }\n\n    .page-link {\n      color: #6c757d;\n      border: 1px solid #dee2e6;\n      transition: all 0.2s ease;\n    }\n\n    .page-link:hover {\n      color: #2196f3;\n      background-color: #f8f9fa;\n      border-color: #dee2e6;\n    }\n\n    .page-item.active .page-link {\n      background-color: #2196f3;\n      border-color: #2196f3;\n      color: white;\n    }\n\n    .page-item.disabled .page-link {\n      color: #adb5bd;\n      background-color: #fff;\n      border-color: #dee2e6;\n      cursor: not-allowed;\n    }\n\n    /* Loading State */\n    .spinner-border {\n      color: #2196f3;\n      width: 3rem;\n      height: 3rem;\n    }\n\n    /* Empty State */\n    .text-muted i.fa-3x {\n      color: #adb5bd !important;\n      margin-bottom: 1rem;\n    }\n\n    /* Focus States */\n    .table tbody tr:focus-within {\n      outline: 2px solid #2196f3;\n      outline-offset: -2px;\n    }\n\n    .btn:focus {\n      box-shadow: 0 0 0 0.2rem rgba(33, 150, 243, 0.25);\n    }\n\n    /* Enhanced Table Layout */\n    .table-responsive {\n      border-radius: 8px;\n      overflow: visible;\n    }\n\n    /* Animations */\n    @keyframes fadeIn {\n      from {\n        opacity: 0;\n        transform: translateY(-10px);\n      }\n      to {\n        opacity: 1;\n        transform: translateY(0);\n      }\n    }\n\n    /* RTL Support */\n    [dir=\"rtl\"] .table tbody tr.selected-row {\n      border-left: none;\n      border-right: 4px solid #2196f3;\n    }\n\n    /* Mobile Cards */\n    .mobile-cards {\n      padding: 1rem;\n    }\n\n    .mobile-card {\n      background: white;\n      border: 1px solid #dee2e6;\n      border-radius: 8px;\n      margin-bottom: 1rem;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n      transition: all 0.2s ease;\n      overflow: hidden;\n    }\n\n    .mobile-card:hover {\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n      transform: translateY(-2px);\n    }\n\n    .mobile-card.selected-row {\n      border-color: #2196f3;\n      background-color: #f3f9ff;\n    }\n\n    .mobile-card-selection {\n      padding: 0.75rem 1rem 0;\n      border-bottom: 1px solid #f8f9fa;\n    }\n\n    .mobile-card-content {\n      padding: 1rem;\n    }\n\n    .default-card-layout .mobile-field {\n      display: flex;\n      justify-content: space-between;\n      align-items: start;\n      margin-bottom: 0.5rem;\n      padding: 0.25rem 0;\n      border-bottom: 1px solid #f8f9fa;\n    }\n\n    .default-card-layout .mobile-field:last-child {\n      border-bottom: none;\n      margin-bottom: 0;\n    }\n\n    .mobile-label {\n      font-weight: 600;\n      color: #495057;\n      flex: 0 0 40%;\n      font-size: 0.875rem;\n    }\n\n    .mobile-value {\n      flex: 1;\n      text-align: right;\n      font-size: 0.875rem;\n      word-break: break-word;\n    }\n\n    .mobile-card-actions {\n      padding: 0.75rem 1rem;\n      background-color: #f8f9fa;\n      border-top: 1px solid #dee2e6;\n    }\n\n    .mobile-card-actions .btn-group {\n      width: 100%;\n      display: flex;\n      flex-wrap: wrap;\n      gap: 0.5rem;\n    }\n\n    .mobile-card-actions .btn {\n      flex: 1;\n      min-width: auto;\n    }\n\n    .mobile-empty-state {\n      text-align: center;\n      padding: 3rem 1rem;\n      color: #6c757d;\n    }\n\n    .mobile-empty-state i {\n      color: #adb5bd;\n    }\n\n    /* Enhanced Responsive Design */\n    @media (max-width: 768px) {\n      .table-responsive {\n        font-size: 0.875rem;\n      }\n\n      .btn-group .btn {\n        padding: 0.25rem 0.5rem;\n        font-size: 0.75rem;\n      }\n\n      .pagination {\n        justify-content: center;\n        margin-top: 1rem;\n      }\n\n      .d-flex.align-items-center span.text-muted {\n        display: none;\n      }\n\n      /* Hide low priority columns on tablets */\n      .table th[data-priority=\"low\"],\n      .table td[data-priority=\"low\"] {\n        display: none !important;\n      }\n    }\n\n    @media (max-width: 576px) {\n      .table-container {\n        min-height: 300px;\n      }\n\n      .table thead th {\n        font-size: 0.75rem;\n        padding: 0.5rem 0.25rem;\n      }\n\n      .table tbody td {\n        padding: 0.5rem 0.25rem;\n      }\n\n      .btn-group {\n        flex-direction: column;\n      }\n\n      .btn-group .btn {\n        margin-bottom: 2px;\n        border-radius: 4px !important;\n      }\n\n      .actions-column {\n        width: 80px;\n      }\n\n      /* Hide medium and low priority columns on phones */\n      .table th[data-priority=\"medium\"],\n      .table td[data-priority=\"medium\"],\n      .table th[data-priority=\"low\"],\n      .table td[data-priority=\"low\"] {\n        display: none !important;\n      }\n\n      .mobile-cards {\n        padding: 0.5rem;\n      }\n\n      .mobile-card {\n        margin-bottom: 0.75rem;\n      }\n\n      .mobile-label {\n        flex: 0 0 35%;\n        font-size: 0.8rem;\n      }\n\n      .mobile-value {\n        font-size: 0.8rem;\n      }\n\n      .mobile-card-actions .btn {\n        font-size: 0.75rem;\n        padding: 0.375rem 0.5rem;\n      }\n    }\n\n    /* Ultra-wide screens */\n    @media (min-width: 1400px) {\n      .table-container {\n        font-size: 0.95rem;\n      }\n    }\n\n    /* Tablet landscape optimizations */\n    @media (min-width: 768px) and (max-width: 1024px) {\n      .table {\n        font-size: 0.9rem;\n      }\n\n      .btn-group .btn {\n        padding: 0.375rem 0.75rem;\n        font-size: 0.8rem;\n      }\n    }\n\n    /* Print Styles */\n    @media print {\n      .actions-column,\n      .pagination {\n        display: none !important;\n      }\n\n      .table {\n        font-size: 0.8rem;\n      }\n\n      .table tbody tr.selected-row {\n        background-color: transparent !important;\n        border-left: none !important;\n      }\n    }\n  `]\n})\nexport class DataTableComponent {\n  @Input() data: any[] = [];\n  @Input() columns: TableColumn[] = [];\n  @Input() actions: TableAction[] = [];\n  @Input() loading: any = false;\n  @Input() allowSelection = false;\n  @Input() showPagination = true;\n  @Input() emptyMessage = 'No data available';\n  @Input() emptyTitle = 'No Data';\n  @Input() responsiveMode: 'cards' | 'horizontal-scroll' | 'auto' = 'auto';\n  @Input() cardTemplate?: TemplateRef<any>;\n  @Input() searchable = false;\n  @Input() sortable = false;\n  @Input() exportable = false;\n  @Input() paginated = false;\n\n  // Pagination\n  @Input() currentPage: any = 1;\n  @Input() totalPages: any = 1;\n  @Input() totalItems: any = 0;\n  @Input() pageSize: any = 10;\n  @Input() pageSizeOptions: number[] = [5, 10, 25, 50, 100];\n\n  // Sorting\n  @Input() sortColumn: any = '';\n  @Input() sortDirection: any = 'asc';\n\n  // Custom template outlets\n  @ContentChild('cellTemplate') cellTemplate!: TemplateRef<any>;\n\n  @Output() actionClick = new EventEmitter<{action: string, item: any}>();\n  @Output() selectionChange = new EventEmitter<any[]>();\n  @Output() sortChange = new EventEmitter<SortEvent>();\n  @Output() pageChange = new EventEmitter<number>();\n  @Output() pageSizeChange = new EventEmitter<number>();\n\n  selectedItems = signal<any[]>([]);\n  allSelected = signal(false);\n  someSelected = signal(false);\n\n  // Helper to get loading value whether it's a signal or boolean\n  isLoading(): boolean {\n    return typeof this.loading === 'function' ? this.loading() : this.loading;\n  }\n\n  // Helper to get currentPage value\n  getCurrentPage(): number {\n    return typeof this.currentPage === 'function' ? this.currentPage() : this.currentPage;\n  }\n\n  // Helper to get totalPages value\n  getTotalPagesValue(): number {\n    if (this.paginated) {\n      const pageSize = this.getPageSizeValue();\n      return Math.ceil(this.data.length / pageSize);\n    }\n    return typeof this.totalPages === 'function' ? this.totalPages() : this.totalPages;\n  }\n\n  // Helper to get totalItems value\n  getTotalItemsValue(): number {\n    if (this.paginated) {\n      return this.data.length;\n    }\n    return typeof this.totalItems === 'function' ? this.totalItems() : this.totalItems;\n  }\n\n  // Helper to get pageSize value\n  getPageSizeValue(): number {\n    return typeof this.pageSize === 'function' ? this.pageSize() : this.pageSize;\n  }\n\n  // Helper to get sortColumn value\n  getSortColumn(): string {\n    return typeof this.sortColumn === 'function' ? this.sortColumn() : this.sortColumn;\n  }\n\n  // Helper to get sortDirection value\n  getSortDirection(): 'asc' | 'desc' {\n    return typeof this.sortDirection === 'function' ? this.sortDirection() : this.sortDirection;\n  }\n\n  // Get displayed data (paginated or full)\n  getDisplayedData(): any[] {\n    if (this.paginated) {\n      const pageSize = this.getPageSizeValue();\n      const currentPage = this.getCurrentPage();\n      const startIndex = (currentPage - 1) * pageSize;\n      const endIndex = startIndex + pageSize;\n      return this.data.slice(startIndex, endIndex);\n    }\n    return this.data;\n  }\n\n  trackByFn(index: number, item: any): any {\n    return item.id || index;\n  }\n\n  getTotalColumns(): number {\n    let count = this.columns.length;\n    if (this.allowSelection) count++;\n    if (this.actions.length > 0) count++;\n    return count;\n  }\n\n  getNestedValue(obj: any, path: string): any {\n    return path.split('.').reduce((current, prop) => current?.[prop], obj);\n  }\n\n  getAvailableActions(item: any): TableAction[] {\n    return this.actions.filter(action => !action.condition || action.condition(item));\n  }\n\n  isSelected(item: any): boolean {\n    return this.selectedItems().some(selected => selected.id === item.id);\n  }\n\n  toggleSelection(item: any, event: Event): void {\n    const checked = (event.target as HTMLInputElement).checked;\n    const selected = this.selectedItems();\n\n    if (checked) {\n      this.selectedItems.set([...selected, item]);\n    } else {\n      this.selectedItems.set(selected.filter(s => s.id !== item.id));\n    }\n\n    this.updateSelectionState();\n    this.selectionChange.emit(this.selectedItems());\n  }\n\n  toggleSelectAll(event: Event): void {\n    const checked = (event.target as HTMLInputElement).checked;\n\n    if (checked) {\n      this.selectedItems.set([...this.data]);\n    } else {\n      this.selectedItems.set([]);\n    }\n\n    this.updateSelectionState();\n    this.selectionChange.emit(this.selectedItems());\n  }\n\n  private updateSelectionState(): void {\n    const selected = this.selectedItems().length;\n    const total = this.data.length;\n\n    this.allSelected.set(selected === total && total > 0);\n    this.someSelected.set(selected > 0 && selected < total);\n  }\n\n  onSort(column: TableColumn): void {\n    if (!column.sortable) return;\n\n    let direction: 'asc' | 'desc' = 'asc';\n\n    if (this.getSortColumn() === column.key) {\n      direction = this.getSortDirection() === 'asc' ? 'desc' : 'asc';\n    }\n\n    if (typeof this.sortColumn === 'function') {\n      (this.sortColumn as any).set(column.key);\n    } else {\n      this.sortColumn = column.key;\n    }\n\n    if (typeof this.sortDirection === 'function') {\n      (this.sortDirection as any).set(direction);\n    } else {\n      this.sortDirection = direction;\n    }\n\n    this.sortChange.emit({ column: column.key, direction });\n  }\n\n  onAction(actionKey: string, item: any): void {\n    this.actionClick.emit({ action: actionKey, item });\n  }\n\n  onPageChange(page: number): void {\n    this.pageChange.emit(page);\n  }\n\n  onPageSizeChange(size: number): void {\n    if (typeof this.pageSize === 'function') {\n      (this.pageSize as any).set(size);\n    } else {\n      this.pageSize = size;\n    }\n\n    if (typeof this.currentPage === 'function') {\n      (this.currentPage as any).set(1);\n    } else {\n      this.currentPage = 1;\n    }\n\n    this.pageSizeChange.emit(size);\n  }\n\n  isActiveItem(item: any): boolean {\n    return item.isActive !== false;\n  }\n\n  getDisplayStart(): number {\n    return (this.getCurrentPage() - 1) * this.getPageSizeValue() + 1;\n  }\n\n  getDisplayEnd(): number {\n    return Math.min(this.getCurrentPage() * this.getPageSizeValue(), this.getTotalItemsValue());\n  }\n\n  getPageNumbers(): number[] {\n    const total = this.getTotalPagesValue();\n    const current = this.getCurrentPage();\n    const pages: number[] = [];\n\n    if (total <= 7) {\n      for (let i = 1; i <= total; i++) {\n        pages.push(i);\n      }\n    } else {\n      if (current <= 4) {\n        pages.push(1, 2, 3, 4, 5, -1, total);\n      } else if (current >= total - 3) {\n        pages.push(1, -1, total - 4, total - 3, total - 2, total - 1, total);\n      } else {\n        pages.push(1, -1, current - 1, current, current + 1, -1, total);\n      }\n    }\n\n    return pages;\n  }\n\n  getVisibleColumns(): TableColumn[] {\n    if (typeof window === 'undefined') return this.columns;\n\n    const isMobile = window.innerWidth < 768;\n    if (!isMobile) return this.columns;\n\n    // On mobile, filter out columns marked as hideOnMobile\n    return this.columns.filter(col => !col.hideOnMobile);\n  }\n\n  getColumnPriority(column: TableColumn): number {\n    switch (column.priority) {\n      case 'high': return 1;\n      case 'medium': return 2;\n      case 'low': return 3;\n      default: return 2;\n    }\n  }\n\n  isMobileView(): boolean {\n    if (typeof window === 'undefined') return false;\n    return window.innerWidth < 768;\n  }\n}"],
  "mappings": "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",
  "names": []
}
