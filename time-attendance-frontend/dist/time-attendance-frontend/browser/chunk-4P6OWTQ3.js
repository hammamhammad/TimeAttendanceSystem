import{a as Y}from"./chunk-FGI2IUJS.js";import{a as J}from"./chunk-4G2EQDXN.js";import{a as j}from"./chunk-4DSP56PF.js";import{b as R,c as k,e as H,f as W,g as V,h as N,i as A,j as q,t as L,u as B,x as G}from"./chunk-OTKBQKTN.js";import{b as z}from"./chunk-NJ656CWW.js";import{$ as i,Da as p,E as t,Ea as C,Fa as h,J as w,U as b,V as y,_ as P,aa as n,ba as u,eb as E,ia as D,ka as x,ma as M,pb as I,t as S,u as c,ua as _,v as f,va as o,vb as T,wa as s,xa as d,z as O}from"./chunk-6T5SYK5O.js";import{d as F}from"./chunk-DGAILPFQ.js";function Q(m,a){if(m&1&&(i(0,"div",9),u(1,"i",73),o(2),n()),m&2){let l=M();t(2),d(" ",l.error()," ")}}function U(m,a){if(m&1&&(i(0,"div",25),o(1),n()),m&2){let l=M();t(),s(l.getError("general"))}}function X(m,a){if(m&1&&(i(0,"div",34),o(1),n()),m&2){let l=M();t(),s(l.getError("normalDayRate"))}}function Z(m,a){if(m&1&&(i(0,"div",34),o(1),n()),m&2){let l=M();t(),s(l.getError("publicHolidayRate"))}}function $(m,a){if(m&1&&(i(0,"div",34),o(1),n()),m&2){let l=M();t(),s(l.getError("offDayRate"))}}function ee(m,a){if(m&1&&(i(0,"div",34),o(1),n()),m&2){let l=M();t(),s(l.getError("maxPreShiftOvertimeHours"))}}function te(m,a){if(m&1&&(i(0,"div",34),o(1),n()),m&2){let l=M();t(),s(l.getError("maxPostShiftOvertimeHours"))}}function ie(m,a){if(m&1&&(i(0,"div",34),o(1),n()),m&2){let l=M();t(),s(l.getError("minimumOvertimeMinutes"))}}function ne(m,a){if(m&1&&(i(0,"div",34),o(1),n()),m&2){let l=M();t(),s(l.getError("overtimeGracePeriodMinutes"))}}function oe(m,a){if(m&1&&(i(0,"div",34),o(1),n()),m&2){let l=M();t(),s(l.getError("roundingIntervalMinutes"))}}function re(m,a){if(m&1&&(i(0,"div",34),o(1),n()),m&2){let l=M();t(),s(l.getError("effectiveFromDate"))}}function ae(m,a){if(m&1&&(i(0,"div",34),o(1),n()),m&2){let l=M();t(),s(l.getError("effectiveToDate"))}}function me(m,a){m&1&&u(0,"i",71)}function le(m,a){m&1&&u(0,"i",72)}var K=class m{overtimeService=S(Y);router=S(I);notificationService=S(j);confirmationService=S(J);i18n=S(z);loading=O(!1);submitting=O(!1);error=O(null);configForm={enablePreShiftOvertime:!1,enablePostShiftOvertime:!0,normalDayRate:1.5,publicHolidayRate:2,offDayRate:1.5,minimumOvertimeMinutes:15,considerFlexibleTime:!0,maxPreShiftOvertimeHours:2,maxPostShiftOvertimeHours:4,requireApproval:!1,overtimeGracePeriodMinutes:5,weekendAsOffDay:!0,roundingIntervalMinutes:15,policyNotes:"",effectiveFromDate:this.getTodayDate(),effectiveToDate:""};validationErrors=O({});ngOnInit(){}t(a){return this.i18n.t(a)}getTodayDate(){return new Date().toISOString().split("T")[0]}validateForm(){let a={};if(this.configForm.effectiveFromDate||(a.effectiveFromDate=this.t("settings.overtime.validation.effectiveFromRequired")),this.configForm.normalDayRate<=0&&(a.normalDayRate=this.t("settings.overtime.validation.ratePositive")),this.configForm.publicHolidayRate<=0&&(a.publicHolidayRate=this.t("settings.overtime.validation.ratePositive")),this.configForm.offDayRate<=0&&(a.offDayRate=this.t("settings.overtime.validation.ratePositive")),this.configForm.minimumOvertimeMinutes<0&&(a.minimumOvertimeMinutes=this.t("settings.overtime.validation.minimumOvertimePositive")),this.configForm.overtimeGracePeriodMinutes<0&&(a.overtimeGracePeriodMinutes=this.t("settings.overtime.validation.gracePeriodPositive")),this.configForm.roundingIntervalMinutes<=0&&(a.roundingIntervalMinutes=this.t("settings.overtime.validation.roundingIntervalPositive")),this.configForm.maxPreShiftOvertimeHours<0&&(a.maxPreShiftOvertimeHours=this.t("settings.overtime.validation.maxHoursPositive")),this.configForm.maxPostShiftOvertimeHours<0&&(a.maxPostShiftOvertimeHours=this.t("settings.overtime.validation.maxHoursPositive")),this.configForm.effectiveToDate&&this.configForm.effectiveFromDate){let l=new Date(this.configForm.effectiveFromDate);new Date(this.configForm.effectiveToDate)<=l&&(a.effectiveToDate=this.t("settings.overtime.validation.effectiveToAfterFrom"))}return!this.configForm.enablePreShiftOvertime&&!this.configForm.enablePostShiftOvertime&&(a.general=this.t("settings.overtime.validation.atLeastOneOvertimeType")),this.validationErrors.set(a),Object.keys(a).length===0}hasError(a){return!!this.validationErrors()[a]}getError(a){return this.validationErrors()[a]||""}onSubmit(){if(!this.validateForm()){this.error.set(this.t("settings.overtime.validation.pleaseFix"));return}this.submitting.set(!0),this.error.set(null);let a={enablePreShiftOvertime:this.configForm.enablePreShiftOvertime,enablePostShiftOvertime:this.configForm.enablePostShiftOvertime,normalDayRate:this.configForm.normalDayRate,publicHolidayRate:this.configForm.publicHolidayRate,offDayRate:this.configForm.offDayRate,minimumOvertimeMinutes:this.configForm.minimumOvertimeMinutes,considerFlexibleTime:this.configForm.considerFlexibleTime,maxPreShiftOvertimeHours:this.configForm.maxPreShiftOvertimeHours,maxPostShiftOvertimeHours:this.configForm.maxPostShiftOvertimeHours,requireApproval:this.configForm.requireApproval,overtimeGracePeriodMinutes:this.configForm.overtimeGracePeriodMinutes,weekendAsOffDay:this.configForm.weekendAsOffDay,roundingIntervalMinutes:this.configForm.roundingIntervalMinutes,policyNotes:this.configForm.policyNotes.trim(),effectiveFromDate:this.configForm.effectiveFromDate,effectiveToDate:this.configForm.effectiveToDate||void 0};this.overtimeService.createOvertimeConfiguration(a).subscribe({next:()=>{this.notificationService.success(this.t("app.success"),this.t("settings.overtime.policyCreatedSuccessfully")),this.router.navigate(["/settings/overtime"])},error:l=>{console.error("Failed to create overtime configuration:",l),this.submitting.set(!1),l.status===400&&l.error?.errors?(this.validationErrors.set(l.error.errors),this.error.set(this.t("settings.overtime.validation.serverErrors"))):(this.error.set(this.t("errors.server")),this.notificationService.error(this.t("app.error"),this.t("errors.server")))}})}onCancel(){return F(this,null,function*(){this.hasFormChanges()&&!(yield this.confirmationService.confirm({title:this.t("common.unsavedChanges"),message:this.t("common.unsavedChangesMessage"),confirmText:this.t("common.discard"),cancelText:this.t("common.stay"),confirmButtonClass:"btn-warning",icon:"fa-exclamation-triangle",iconClass:"text-warning"})).confirmed||this.router.navigate(["/settings/overtime"])})}hasFormChanges(){let a={enablePreShiftOvertime:!1,enablePostShiftOvertime:!0,normalDayRate:1.5,publicHolidayRate:2,offDayRate:1.5,minimumOvertimeMinutes:15,considerFlexibleTime:!0,maxPreShiftOvertimeHours:2,maxPostShiftOvertimeHours:4,requireApproval:!1,overtimeGracePeriodMinutes:5,weekendAsOffDay:!0,roundingIntervalMinutes:15,policyNotes:"",effectiveFromDate:this.getTodayDate(),effectiveToDate:""};return JSON.stringify(this.configForm)!==JSON.stringify(a)}onReset(){this.configForm={enablePreShiftOvertime:!1,enablePostShiftOvertime:!0,normalDayRate:1.5,publicHolidayRate:2,offDayRate:1.5,minimumOvertimeMinutes:15,considerFlexibleTime:!0,maxPreShiftOvertimeHours:2,maxPostShiftOvertimeHours:4,requireApproval:!1,overtimeGracePeriodMinutes:5,weekendAsOffDay:!0,roundingIntervalMinutes:15,policyNotes:"",effectiveFromDate:this.getTodayDate(),effectiveToDate:""},this.validationErrors.set({}),this.error.set(null)}isFieldInvalid(a){return this.hasError(a)}getFieldClasses(a){let l="form-control";return this.isFieldInvalid(a)?`${l} is-invalid`:l}static \u0275fac=function(l){return new(l||m)};static \u0275cmp=w({type:m,selectors:[["app-create-overtime-configuration"]],decls:233,vars:102,consts:[["formRef","ngForm"],[1,"container-fluid"],[1,"d-flex","justify-content-between","align-items-center","mb-4"],[1,"mb-1"],[1,"text-muted","mb-0"],["type","button",1,"btn","btn-outline-secondary","me-2",3,"click","disabled"],[1,"fa-solid","fa-times","me-2"],["type","button",1,"btn","btn-secondary",3,"click","disabled"],[1,"fa-solid","fa-refresh","me-2"],["role","alert",1,"alert","alert-danger"],[3,"ngSubmit"],[1,"row"],[1,"col-lg-8"],[1,"card","mb-4"],[1,"card-header"],[1,"mb-0"],[1,"fa-solid","fa-clock","me-2"],[1,"card-body"],[1,"col-md-6"],[1,"form-check","mb-3"],["type","checkbox","id","enablePreShiftOvertime","name","enablePreShiftOvertime",1,"form-check-input",3,"ngModelChange","ngModel"],["for","enablePreShiftOvertime",1,"form-check-label"],[1,"text-muted"],["type","checkbox","id","enablePostShiftOvertime","name","enablePostShiftOvertime",1,"form-check-input",3,"ngModelChange","ngModel"],["for","enablePostShiftOvertime",1,"form-check-label"],[1,"text-danger","small"],[1,"fa-solid","fa-percentage","me-2"],[1,"col-md-4"],[1,"mb-3"],["for","normalDayRate",1,"form-label"],[1,"text-danger"],[1,"input-group"],["type","number","id","normalDayRate","name","normalDayRate","step","0.1","min","1","required","",3,"ngModelChange","ngModel"],[1,"input-group-text"],[1,"invalid-feedback","d-block"],[1,"form-text"],["for","publicHolidayRate",1,"form-label"],["type","number","id","publicHolidayRate","name","publicHolidayRate","step","0.1","min","1","required","",3,"ngModelChange","ngModel"],["for","offDayRate",1,"form-label"],["type","number","id","offDayRate","name","offDayRate","step","0.1","min","1","required","",3,"ngModelChange","ngModel"],[1,"fa-solid","fa-hourglass-half","me-2"],["for","maxPreShiftOvertimeHours",1,"form-label"],["type","number","id","maxPreShiftOvertimeHours","name","maxPreShiftOvertimeHours","step","0.5","min","0",3,"ngModelChange","ngModel"],["for","maxPostShiftOvertimeHours",1,"form-label"],["type","number","id","maxPostShiftOvertimeHours","name","maxPostShiftOvertimeHours","step","0.5","min","0",3,"ngModelChange","ngModel"],[1,"fa-solid","fa-calculator","me-2"],["for","minimumOvertimeMinutes",1,"form-label"],["type","number","id","minimumOvertimeMinutes","name","minimumOvertimeMinutes","min","0",3,"ngModelChange","ngModel"],["for","overtimeGracePeriodMinutes",1,"form-label"],["type","number","id","overtimeGracePeriodMinutes","name","overtimeGracePeriodMinutes","min","0",3,"ngModelChange","ngModel"],["for","roundingIntervalMinutes",1,"form-label"],["type","number","id","roundingIntervalMinutes","name","roundingIntervalMinutes","min","1",3,"ngModelChange","ngModel"],["type","checkbox","id","considerFlexibleTime","name","considerFlexibleTime",1,"form-check-input",3,"ngModelChange","ngModel"],["for","considerFlexibleTime",1,"form-check-label"],["type","checkbox","id","weekendAsOffDay","name","weekendAsOffDay",1,"form-check-input",3,"ngModelChange","ngModel"],["for","weekendAsOffDay",1,"form-check-label"],[1,"fa-solid","fa-sticky-note","me-2"],["for","policyNotes",1,"form-label"],["id","policyNotes","name","policyNotes","rows","4",1,"form-control",3,"ngModelChange","ngModel","placeholder"],[1,"col-lg-4"],[1,"fa-solid","fa-calendar","me-2"],["for","effectiveFromDate",1,"form-label"],["type","date","id","effectiveFromDate","name","effectiveFromDate","required","",3,"ngModelChange","ngModel"],["for","effectiveToDate",1,"form-label"],["type","date","id","effectiveToDate","name","effectiveToDate",3,"ngModelChange","ngModel"],[1,"fa-solid","fa-cogs","me-2"],["type","checkbox","id","requireApproval","name","requireApproval",1,"form-check-input",3,"ngModelChange","ngModel"],["for","requireApproval",1,"form-check-label"],[1,"card"],[1,"d-grid","gap-2"],["type","submit",1,"btn","btn-primary",3,"disabled"],[1,"fa-solid","fa-spinner","fa-spin","me-2"],[1,"fa-solid","fa-save","me-2"],[1,"fa-solid","fa-exclamation-triangle","me-2"]],template:function(l,e){if(l&1){let g=D();i(0,"div",1)(1,"div",2)(2,"div")(3,"h2",3),o(4),n(),i(5,"p",4),o(6),n()(),i(7,"div")(8,"button",5),x("click",function(){return c(g),f(e.onCancel())}),u(9,"i",6),o(10),n(),i(11,"button",7),x("click",function(){return c(g),f(e.onReset())}),u(12,"i",8),o(13),n()()(),b(14,Q,3,1,"div",9),i(15,"form",10,0),x("ngSubmit",function(){return c(g),f(e.onSubmit())}),i(17,"div",11)(18,"div",12)(19,"div",13)(20,"div",14)(21,"h5",15),u(22,"i",16),o(23),n()(),i(24,"div",17)(25,"div",11)(26,"div",18)(27,"div",19)(28,"input",20),h("ngModelChange",function(r){return c(g),C(e.configForm.enablePreShiftOvertime,r)||(e.configForm.enablePreShiftOvertime=r),f(r)}),n(),i(29,"label",21)(30,"strong"),o(31),n(),u(32,"br"),i(33,"small",22),o(34),n()()()(),i(35,"div",18)(36,"div",19)(37,"input",23),h("ngModelChange",function(r){return c(g),C(e.configForm.enablePostShiftOvertime,r)||(e.configForm.enablePostShiftOvertime=r),f(r)}),n(),i(38,"label",24)(39,"strong"),o(40),n(),u(41,"br"),i(42,"small",22),o(43),n()()()()(),b(44,U,2,1,"div",25),n()(),i(45,"div",13)(46,"div",14)(47,"h5",15),u(48,"i",26),o(49),n()(),i(50,"div",17)(51,"div",11)(52,"div",27)(53,"div",28)(54,"label",29),o(55),i(56,"span",30),o(57,"*"),n()(),i(58,"div",31)(59,"input",32),h("ngModelChange",function(r){return c(g),C(e.configForm.normalDayRate,r)||(e.configForm.normalDayRate=r),f(r)}),n(),i(60,"span",33),o(61,"x"),n()(),b(62,X,2,1,"div",34),i(63,"div",35),o(64),n()()(),i(65,"div",27)(66,"div",28)(67,"label",36),o(68),i(69,"span",30),o(70,"*"),n()(),i(71,"div",31)(72,"input",37),h("ngModelChange",function(r){return c(g),C(e.configForm.publicHolidayRate,r)||(e.configForm.publicHolidayRate=r),f(r)}),n(),i(73,"span",33),o(74,"x"),n()(),b(75,Z,2,1,"div",34),i(76,"div",35),o(77),n()()(),i(78,"div",27)(79,"div",28)(80,"label",38),o(81),i(82,"span",30),o(83,"*"),n()(),i(84,"div",31)(85,"input",39),h("ngModelChange",function(r){return c(g),C(e.configForm.offDayRate,r)||(e.configForm.offDayRate=r),f(r)}),n(),i(86,"span",33),o(87,"x"),n()(),b(88,$,2,1,"div",34),i(89,"div",35),o(90),n()()()()()(),i(91,"div",13)(92,"div",14)(93,"h5",15),u(94,"i",40),o(95),n()(),i(96,"div",17)(97,"div",11)(98,"div",18)(99,"div",28)(100,"label",41),o(101),n(),i(102,"div",31)(103,"input",42),h("ngModelChange",function(r){return c(g),C(e.configForm.maxPreShiftOvertimeHours,r)||(e.configForm.maxPreShiftOvertimeHours=r),f(r)}),n(),i(104,"span",33),o(105),n()(),b(106,ee,2,1,"div",34),i(107,"div",35),o(108),n()()(),i(109,"div",18)(110,"div",28)(111,"label",43),o(112),n(),i(113,"div",31)(114,"input",44),h("ngModelChange",function(r){return c(g),C(e.configForm.maxPostShiftOvertimeHours,r)||(e.configForm.maxPostShiftOvertimeHours=r),f(r)}),n(),i(115,"span",33),o(116),n()(),b(117,te,2,1,"div",34),i(118,"div",35),o(119),n()()()()()(),i(120,"div",13)(121,"div",14)(122,"h5",15),u(123,"i",45),o(124),n()(),i(125,"div",17)(126,"div",11)(127,"div",27)(128,"div",28)(129,"label",46),o(130),n(),i(131,"div",31)(132,"input",47),h("ngModelChange",function(r){return c(g),C(e.configForm.minimumOvertimeMinutes,r)||(e.configForm.minimumOvertimeMinutes=r),f(r)}),n(),i(133,"span",33),o(134),n()(),b(135,ie,2,1,"div",34),i(136,"div",35),o(137),n()()(),i(138,"div",27)(139,"div",28)(140,"label",48),o(141),n(),i(142,"div",31)(143,"input",49),h("ngModelChange",function(r){return c(g),C(e.configForm.overtimeGracePeriodMinutes,r)||(e.configForm.overtimeGracePeriodMinutes=r),f(r)}),n(),i(144,"span",33),o(145),n()(),b(146,ne,2,1,"div",34),i(147,"div",35),o(148),n()()(),i(149,"div",27)(150,"div",28)(151,"label",50),o(152),n(),i(153,"div",31)(154,"input",51),h("ngModelChange",function(r){return c(g),C(e.configForm.roundingIntervalMinutes,r)||(e.configForm.roundingIntervalMinutes=r),f(r)}),n(),i(155,"span",33),o(156),n()(),b(157,oe,2,1,"div",34),i(158,"div",35),o(159),n()()()(),i(160,"div",11)(161,"div",18)(162,"div",19)(163,"input",52),h("ngModelChange",function(r){return c(g),C(e.configForm.considerFlexibleTime,r)||(e.configForm.considerFlexibleTime=r),f(r)}),n(),i(164,"label",53),o(165),u(166,"br"),i(167,"small",22),o(168),n()()()(),i(169,"div",18)(170,"div",19)(171,"input",54),h("ngModelChange",function(r){return c(g),C(e.configForm.weekendAsOffDay,r)||(e.configForm.weekendAsOffDay=r),f(r)}),n(),i(172,"label",55),o(173),u(174,"br"),i(175,"small",22),o(176),n()()()()()()(),i(177,"div",13)(178,"div",14)(179,"h5",15),u(180,"i",56),o(181),n()(),i(182,"div",17)(183,"div",28)(184,"label",57),o(185),n(),i(186,"textarea",58),h("ngModelChange",function(r){return c(g),C(e.configForm.policyNotes,r)||(e.configForm.policyNotes=r),f(r)}),o(187,"              "),n(),i(188,"div",35),o(189),n()()()()(),i(190,"div",59)(191,"div",13)(192,"div",14)(193,"h5",15),u(194,"i",60),o(195),n()(),i(196,"div",17)(197,"div",28)(198,"label",61),o(199),i(200,"span",30),o(201,"*"),n()(),i(202,"input",62),h("ngModelChange",function(r){return c(g),C(e.configForm.effectiveFromDate,r)||(e.configForm.effectiveFromDate=r),f(r)}),n(),b(203,re,2,1,"div",34),i(204,"div",35),o(205),n()(),i(206,"div",28)(207,"label",63),o(208),n(),i(209,"input",64),h("ngModelChange",function(r){return c(g),C(e.configForm.effectiveToDate,r)||(e.configForm.effectiveToDate=r),f(r)}),n(),b(210,ae,2,1,"div",34),i(211,"div",35),o(212),n()()()(),i(213,"div",13)(214,"div",14)(215,"h5",15),u(216,"i",65),o(217),n()(),i(218,"div",17)(219,"div",19)(220,"input",66),h("ngModelChange",function(r){return c(g),C(e.configForm.requireApproval,r)||(e.configForm.requireApproval=r),f(r)}),n(),i(221,"label",67),o(222),u(223,"br"),i(224,"small",22),o(225),n()()()()(),i(226,"div",68)(227,"div",17)(228,"div",69)(229,"button",70),b(230,me,1,0,"i",71)(231,le,1,0,"i",72),o(232),n()()()()()()()()}l&2&&(t(4),s(e.t("settings.overtime.createPolicy")),t(2),s(e.t("settings.overtime.createPolicySubtitle")),t(2),P("disabled",e.submitting()),t(2),d(" ",e.t("common.cancel")," "),t(),P("disabled",e.submitting()),t(2),d(" ",e.t("common.reset")," "),t(),y(e.error()?14:-1),t(9),d(" ",e.t("settings.overtime.overtimeTypes")," "),t(5),p("ngModel",e.configForm.enablePreShiftOvertime),t(3),s(e.t("settings.overtime.enablePreShift")),t(3),s(e.t("settings.overtime.enablePreShiftDescription")),t(3),p("ngModel",e.configForm.enablePostShiftOvertime),t(3),s(e.t("settings.overtime.enablePostShift")),t(3),s(e.t("settings.overtime.enablePostShiftDescription")),t(),y(e.hasError("general")?44:-1),t(5),d(" ",e.t("settings.overtime.overtimeRates")," "),t(6),d(" ",e.t("settings.overtime.normalDayRate")," "),t(4),_(e.getFieldClasses("normalDayRate")),p("ngModel",e.configForm.normalDayRate),t(3),y(e.hasError("normalDayRate")?62:-1),t(2),s(e.t("settings.overtime.normalDayRateDescription")),t(4),d(" ",e.t("settings.overtime.publicHolidayRate")," "),t(4),_(e.getFieldClasses("publicHolidayRate")),p("ngModel",e.configForm.publicHolidayRate),t(3),y(e.hasError("publicHolidayRate")?75:-1),t(2),s(e.t("settings.overtime.publicHolidayRateDescription")),t(4),d(" ",e.t("settings.overtime.offDayRate")," "),t(4),_(e.getFieldClasses("offDayRate")),p("ngModel",e.configForm.offDayRate),t(3),y(e.hasError("offDayRate")?88:-1),t(2),s(e.t("settings.overtime.offDayRateDescription")),t(5),d(" ",e.t("settings.overtime.overtimeLimits")," "),t(6),d(" ",e.t("settings.overtime.maxPreShiftHours")," "),t(2),_(e.getFieldClasses("maxPreShiftOvertimeHours")),p("ngModel",e.configForm.maxPreShiftOvertimeHours),t(2),s(e.t("common.hours")),t(),y(e.hasError("maxPreShiftOvertimeHours")?106:-1),t(2),s(e.t("settings.overtime.maxPreShiftHoursDescription")),t(4),d(" ",e.t("settings.overtime.maxPostShiftHours")," "),t(2),_(e.getFieldClasses("maxPostShiftOvertimeHours")),p("ngModel",e.configForm.maxPostShiftOvertimeHours),t(2),s(e.t("common.hours")),t(),y(e.hasError("maxPostShiftOvertimeHours")?117:-1),t(2),s(e.t("settings.overtime.maxPostShiftHoursDescription")),t(5),d(" ",e.t("settings.overtime.calculationSettings")," "),t(6),d(" ",e.t("settings.overtime.minimumOvertimeMinutes")," "),t(2),_(e.getFieldClasses("minimumOvertimeMinutes")),p("ngModel",e.configForm.minimumOvertimeMinutes),t(2),s(e.t("common.minutes")),t(),y(e.hasError("minimumOvertimeMinutes")?135:-1),t(2),s(e.t("settings.overtime.minimumOvertimeMinutesDescription")),t(4),d(" ",e.t("settings.overtime.gracePeriodMinutes")," "),t(2),_(e.getFieldClasses("overtimeGracePeriodMinutes")),p("ngModel",e.configForm.overtimeGracePeriodMinutes),t(2),s(e.t("common.minutes")),t(),y(e.hasError("overtimeGracePeriodMinutes")?146:-1),t(2),s(e.t("settings.overtime.gracePeriodMinutesDescription")),t(4),d(" ",e.t("settings.overtime.roundingIntervalMinutes")," "),t(2),_(e.getFieldClasses("roundingIntervalMinutes")),p("ngModel",e.configForm.roundingIntervalMinutes),t(2),s(e.t("common.minutes")),t(),y(e.hasError("roundingIntervalMinutes")?157:-1),t(2),s(e.t("settings.overtime.roundingIntervalMinutesDescription")),t(4),p("ngModel",e.configForm.considerFlexibleTime),t(2),d(" ",e.t("settings.overtime.considerFlexibleTime")," "),t(3),s(e.t("settings.overtime.considerFlexibleTimeDescription")),t(3),p("ngModel",e.configForm.weekendAsOffDay),t(2),d(" ",e.t("settings.overtime.weekendAsOffDay")," "),t(3),s(e.t("settings.overtime.weekendAsOffDayDescription")),t(5),d(" ",e.t("settings.overtime.policyNotes")," "),t(4),d(" ",e.t("settings.overtime.policyNotesLabel")," "),t(),p("ngModel",e.configForm.policyNotes),P("placeholder",e.t("settings.overtime.policyNotesPlaceholder")),t(3),s(e.t("settings.overtime.policyNotesDescription")),t(6),d(" ",e.t("settings.overtime.effectivePeriod")," "),t(4),d(" ",e.t("settings.overtime.effectiveFrom")," "),t(3),_(e.getFieldClasses("effectiveFromDate")),p("ngModel",e.configForm.effectiveFromDate),t(),y(e.hasError("effectiveFromDate")?203:-1),t(2),s(e.t("settings.overtime.effectiveFromDescription")),t(3),d(" ",e.t("settings.overtime.effectiveTo")," "),t(),_(e.getFieldClasses("effectiveToDate")),p("ngModel",e.configForm.effectiveToDate),t(),y(e.hasError("effectiveToDate")?210:-1),t(2),s(e.t("settings.overtime.effectiveToDescription")),t(5),d(" ",e.t("settings.overtime.additionalSettings")," "),t(3),p("ngModel",e.configForm.requireApproval),t(2),d(" ",e.t("settings.overtime.requireApproval")," "),t(3),s(e.t("settings.overtime.requireApprovalDescription")),t(4),P("disabled",e.submitting()),t(),y(e.submitting()?230:231),t(2),d(" ",e.submitting()?e.t("common.saving"):e.t("settings.overtime.createPolicy")," "))},dependencies:[E,G,A,k,q,R,H,W,B,L,N,V,T],styles:[".card[_ngcontent-%COMP%]{border:1px solid rgba(0,0,0,.125);border-radius:.5rem;box-shadow:0 .125rem .25rem #00000013;transition:all .15s ease-in-out}.card[_ngcontent-%COMP%]:hover{box-shadow:0 .5rem 1rem #00000026}.card-header[_ngcontent-%COMP%]{background-color:#f8f9fa;border-bottom:1px solid rgba(0,0,0,.125);padding:1rem 1.25rem}.card-header[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{color:#495057;font-weight:600}.form-label[_ngcontent-%COMP%]{font-weight:500;color:#495057;margin-bottom:.5rem}.form-control[_ngcontent-%COMP%]{border-radius:.375rem;border:1px solid #dee2e6;transition:all .15s ease-in-out}.form-control[_ngcontent-%COMP%]:focus{border-color:#86b7fe;box-shadow:0 0 0 .25rem #0d6efd40}.form-control.is-invalid[_ngcontent-%COMP%]{border-color:#dc3545}.form-control.is-invalid[_ngcontent-%COMP%]:focus{border-color:#dc3545;box-shadow:0 0 0 .25rem #dc354540}.input-group[_ngcontent-%COMP%]{border-radius:.375rem;overflow:hidden}.input-group-text[_ngcontent-%COMP%]{background-color:#f8f9fa;border-color:#dee2e6;color:#6c757d}.form-check-input[_ngcontent-%COMP%]{margin-top:.25rem}.form-check-label[_ngcontent-%COMP%]{cursor:pointer}.form-text[_ngcontent-%COMP%]{font-size:.875rem;color:#6c757d;margin-top:.25rem}.invalid-feedback[_ngcontent-%COMP%]{font-size:.875rem;color:#dc3545;margin-top:.25rem}.btn[_ngcontent-%COMP%]{border-radius:.375rem;transition:all .15s ease-in-out;font-weight:500}.btn[_ngcontent-%COMP%]:hover{transform:translateY(-1px)}.btn[_ngcontent-%COMP%]:disabled{transform:none}.alert[_ngcontent-%COMP%]{border-radius:.5rem;border:none;margin-bottom:1.5rem}.alert-danger[_ngcontent-%COMP%]{background:linear-gradient(135deg,#f8d7da,#f1aeb5);color:#721c24}.text-danger[_ngcontent-%COMP%]{color:#dc3545!important}.text-muted[_ngcontent-%COMP%]{color:#6c757d!important}.fa-spinner[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_spin 1s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@media (max-width: 992px){.d-flex.justify-content-between[_ngcontent-%COMP%]{flex-direction:column;gap:1rem}.d-flex.justify-content-between[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{width:100%}}@media (max-width: 768px){.card[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .col-md-4[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .col-md-6[_ngcontent-%COMP%]{margin-bottom:1rem}}.card-body[_ngcontent-%COMP%]{padding:1.25rem}.form-check[_ngcontent-%COMP%]{padding:.75rem;border:1px solid #e9ecef;border-radius:.375rem;background-color:#f8f9fa;transition:all .15s ease-in-out}.form-check[_ngcontent-%COMP%]:hover{background-color:#e9ecef}.form-check-input[_ngcontent-%COMP%]:checked + .form-check-label[_ngcontent-%COMP%]{color:#0d6efd}.form-control[_ngcontent-%COMP%]:focus, .form-select[_ngcontent-%COMP%]:focus{outline:none;border-color:#86b7fe;box-shadow:0 0 0 .25rem #0d6efd40}.btn-primary[_ngcontent-%COMP%]{background:linear-gradient(135deg,#0d6efd,#0b5ed7);border:none}.btn-primary[_ngcontent-%COMP%]:hover{background:linear-gradient(135deg,#0b5ed7,#0a58ca)}.btn-outline-secondary[_ngcontent-%COMP%]{border-color:#6c757d;color:#6c757d}.btn-outline-secondary[_ngcontent-%COMP%]:hover, .btn-secondary[_ngcontent-%COMP%]{background-color:#6c757d;border-color:#6c757d}.btn-secondary[_ngcontent-%COMP%]:hover{background-color:#5c636a;border-color:#565e64}.fa-solid[_ngcontent-%COMP%]{margin-right:.25rem}.text-danger[_ngcontent-%COMP%]{font-weight:600}"]})};export{K as CreateOvertimeConfigurationComponent};
