{
  "version": 3,
  "sources": ["src/app/shared/components/stats-grid/stats-grid.component.ts", "src/app/shared/components/stats-grid/stats-grid.component.html"],
  "sourcesContent": ["import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { StatCardComponent } from '../stat-card/stat-card.component';\r\n\r\nexport interface StatGridItem {\r\n  label: string;\r\n  value: number | string;\r\n  icon?: string;\r\n  variant?: 'primary' | 'success' | 'warning' | 'danger' | 'info' | 'secondary';\r\n  prefix?: string;\r\n  suffix?: string;\r\n  change?: {\r\n    value: number;\r\n    type: 'increase' | 'decrease' | 'neutral';\r\n    period?: string;\r\n    isPercentage?: boolean;\r\n  };\r\n  subtitle?: string;\r\n  borderAccent?: boolean;\r\n  clickable?: boolean;\r\n  clickableText?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-stats-grid',\r\n  standalone: true,\r\n  imports: [CommonModule, StatCardComponent],\r\n  templateUrl: './stats-grid.component.html',\r\n  styleUrls: ['./stats-grid.component.css']\r\n})\r\nexport class StatsGridComponent {\r\n  @Input() stats: StatGridItem[] = [];\r\n  @Input() columns: 2 | 3 | 4 = 4;\r\n  @Input() loading = false;\r\n  @Input() gap: 'sm' | 'md' | 'lg' = 'md';\r\n  @Input() cardSize: 'sm' | 'md' | 'lg' = 'md';\r\n\r\n  getGridClasses(): string {\r\n    const classes = ['stats-grid', 'row'];\r\n\r\n    switch (this.gap) {\r\n      case 'sm':\r\n        classes.push('g-2');\r\n        break;\r\n      case 'lg':\r\n        classes.push('g-4');\r\n        break;\r\n      default:\r\n        classes.push('g-3');\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n\r\n  getColumnClasses(): string {\r\n    const classes = ['stats-grid-item'];\r\n\r\n    switch (this.columns) {\r\n      case 2:\r\n        classes.push('col-md-6');\r\n        break;\r\n      case 3:\r\n        classes.push('col-md-4');\r\n        break;\r\n      case 4:\r\n        classes.push('col-md-6', 'col-lg-3');\r\n        break;\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n\r\n  getSkeletonItems(): number[] {\r\n    return Array(this.columns).fill(0);\r\n  }\r\n}", "<div [class]=\"getGridClasses()\">\r\n  @if (loading) {\r\n    <!-- Loading Skeletons -->\r\n    @for (item of getSkeletonItems(); track $index) {\r\n      <div [class]=\"getColumnClasses()\">\r\n        <div class=\"card h-100\">\r\n          <div class=\"card-body\">\r\n            <div class=\"skeleton-loader\">\r\n              <div class=\"skeleton-line skeleton-title\"></div>\r\n              <div class=\"skeleton-line skeleton-value\"></div>\r\n              <div class=\"skeleton-line skeleton-subtitle\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    }\r\n  } @else if (stats.length > 0) {\r\n    <!-- Stat Cards -->\r\n    @for (stat of stats; track $index) {\r\n      <div [class]=\"getColumnClasses()\">\r\n        <app-stat-card\r\n          [label]=\"stat.label\"\r\n          [value]=\"stat.value\"\r\n          [icon]=\"stat.icon\"\r\n          [variant]=\"stat.variant || 'primary'\"\r\n          [prefix]=\"stat.prefix\"\r\n          [suffix]=\"stat.suffix\"\r\n          [subtitle]=\"stat.subtitle\"\r\n          [change]=\"stat.change\"\r\n          [size]=\"cardSize\"\r\n          [borderAccent]=\"stat.borderAccent ?? true\"\r\n          [clickable]=\"stat.clickable ?? false\"\r\n          [clickableText]=\"stat.clickableText\">\r\n        </app-stat-card>\r\n      </div>\r\n    }\r\n  } @else {\r\n    <!-- Empty State -->\r\n    <div class=\"col-12\">\r\n      <div class=\"text-center py-4 text-muted\">\r\n        <i class=\"fa-solid fa-chart-simple fa-2x mb-2\"></i>\r\n        <p class=\"mb-0\">No statistics available</p>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  <!-- Custom content slot -->\r\n  <ng-content></ng-content>\r\n</div>"],
  "mappings": "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",
  "names": []
}
