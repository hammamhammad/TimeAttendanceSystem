{
  "version": 3,
  "sources": ["src/app/pages/excuse-policies/edit-excuse-policy/edit-excuse-policy.component.ts", "src/app/pages/excuse-policies/edit-excuse-policy/edit-excuse-policy.component.html"],
  "sourcesContent": ["import { Component, signal, inject, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { I18nService } from '../../../core/i18n/i18n.service';\r\nimport { NotificationService } from '../../../core/notifications/notification.service';\r\nimport { ExcusePoliciesService } from '../excuse-policies.service';\r\nimport { ExcusePolicyDto, UpdateExcusePolicyRequest } from '../../../shared/models/excuse-policy.model';\r\nimport { SearchableSelectComponent, SearchableSelectOption } from '../../../shared/components/searchable-select/searchable-select.component';\r\nimport { FormHeaderComponent } from '../../../shared/components/form-header/form-header.component';\r\nimport { FormSectionComponent } from '../../../shared/components/form-section/form-section.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-excuse-policy',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SearchableSelectComponent,\r\n    FormHeaderComponent,\r\n    FormSectionComponent\r\n  ],\r\n  templateUrl: './edit-excuse-policy.component.html',\r\n  styleUrls: ['./edit-excuse-policy.component.css']\r\n})\r\nexport class EditExcusePolicyComponent implements OnInit {\r\n  private fb = inject(FormBuilder);\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n  private notificationService = inject(NotificationService);\r\n  private excusePoliciesService = inject(ExcusePoliciesService);\r\n  public i18n = inject(I18nService);\r\n\r\n  // State\r\n  loading = signal(false);\r\n  saving = signal(false);\r\n  currentPolicy = signal<ExcusePolicyDto | null>(null);\r\n  policyId: number | null = null;\r\n\r\n  // Form\r\n  policyForm: FormGroup;\r\n\r\n  // Available options\r\n  branches = signal<Array<{id: number, name: string}>>([]);\r\n\r\n  // Computed properties for searchable select options\r\n  get branchOptions(): SearchableSelectOption[] {\r\n    const options: SearchableSelectOption[] = [\r\n      { value: null, label: this.i18n.t('common.all_branches') }\r\n    ];\r\n    return options.concat(\r\n      this.branches().map(branch => ({\r\n        value: branch.id,\r\n        label: branch.name\r\n      }))\r\n    );\r\n  }\r\n\r\n  constructor() {\r\n    this.policyForm = this.createForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadBranches();\r\n    this.loadPolicy();\r\n  }\r\n\r\n  /**\r\n   * Create reactive form\r\n   */\r\n  private createForm(): FormGroup {\r\n    return this.fb.group({\r\n      branchId: [null],\r\n      maxPersonalExcusesPerMonth: [1, [Validators.required, Validators.min(0), Validators.max(31)]],\r\n      maxPersonalExcuseHoursPerMonth: [8, [Validators.required, Validators.min(0), Validators.max(744)]],\r\n      maxPersonalExcuseHoursPerDay: [2, [Validators.required, Validators.min(0), Validators.max(24)]],\r\n      maxHoursPerExcuse: [2, [Validators.required, Validators.min(0), Validators.max(24)]],\r\n      requiresApproval: [true],\r\n      allowPartialHourExcuses: [false],\r\n      minimumExcuseDuration: [15, [Validators.required, Validators.min(1), Validators.max(1440)]],\r\n      maxRetroactiveDays: [7, [Validators.required, Validators.min(0), Validators.max(365)]],\r\n      allowSelfServiceRequests: [true],\r\n      isActive: [true]\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load branches for dropdown\r\n   */\r\n  private loadBranches(): void {\r\n    this.excusePoliciesService.getBranches().subscribe({\r\n      next: (branches) => {\r\n        this.branches.set(branches);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load branches:', error);\r\n        this.notificationService.error(this.i18n.t('excuse_policies.errors.load_branches_failed'));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load policy for editing\r\n   */\r\n  private loadPolicy(): void {\r\n    const policyIdParam = this.route.snapshot.paramMap.get('id');\r\n    if (!policyIdParam) {\r\n      this.router.navigate(['/excuse-policies']);\r\n      return;\r\n    }\r\n\r\n    this.policyId = +policyIdParam;\r\n    this.loading.set(true);\r\n\r\n    this.excusePoliciesService.getExcusePolicyById(this.policyId).subscribe({\r\n      next: (policy) => {\r\n        this.currentPolicy.set(policy);\r\n        this.populateForm(policy);\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load policy:', error);\r\n        this.notificationService.error(this.i18n.t('excuse_policies.errors.load_failed'));\r\n        this.loading.set(false);\r\n        this.router.navigate(['/excuse-policies']);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Populate form with policy data\r\n   */\r\n  private populateForm(policy: ExcusePolicyDto): void {\r\n    this.policyForm.patchValue({\r\n      branchId: policy.branchId,\r\n      maxPersonalExcusesPerMonth: policy.maxPersonalExcusesPerMonth,\r\n      maxPersonalExcuseHoursPerMonth: policy.maxPersonalExcuseHoursPerMonth,\r\n      maxPersonalExcuseHoursPerDay: policy.maxPersonalExcuseHoursPerDay,\r\n      maxHoursPerExcuse: policy.maxHoursPerExcuse,\r\n      requiresApproval: policy.requiresApproval,\r\n      allowPartialHourExcuses: policy.allowPartialHourExcuses,\r\n      minimumExcuseDuration: policy.minimumExcuseDuration,\r\n      maxRetroactiveDays: policy.maxRetroactiveDays,\r\n      allowSelfServiceRequests: policy.allowSelfServiceRequests,\r\n      isActive: policy.isActive\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle form submission\r\n   */\r\n  onSubmit(): void {\r\n    if (this.policyForm.invalid) {\r\n      this.markFormGroupTouched();\r\n      return;\r\n    }\r\n\r\n    const policy = this.currentPolicy();\r\n    if (!policy) return;\r\n\r\n    this.saving.set(true);\r\n    const formValue = this.policyForm.value;\r\n\r\n    const request: UpdateExcusePolicyRequest = {\r\n      id: policy.id,\r\n      branchId: formValue.branchId,\r\n      maxPersonalExcusesPerMonth: formValue.maxPersonalExcusesPerMonth,\r\n      maxPersonalExcuseHoursPerMonth: formValue.maxPersonalExcuseHoursPerMonth,\r\n      maxPersonalExcuseHoursPerDay: formValue.maxPersonalExcuseHoursPerDay,\r\n      maxHoursPerExcuse: formValue.maxHoursPerExcuse,\r\n      requiresApproval: formValue.requiresApproval,\r\n      allowPartialHourExcuses: formValue.allowPartialHourExcuses,\r\n      minimumExcuseDuration: formValue.minimumExcuseDuration,\r\n      maxRetroactiveDays: formValue.maxRetroactiveDays,\r\n      allowSelfServiceRequests: formValue.allowSelfServiceRequests,\r\n      isActive: formValue.isActive\r\n    };\r\n\r\n    this.excusePoliciesService.updateExcusePolicy(policy.id, request).subscribe({\r\n      next: () => {\r\n        this.saving.set(false);\r\n        this.notificationService.success(this.i18n.t('excuse_policies.success.updated'));\r\n        this.router.navigate(['/excuse-policies', policy.id, 'view']);\r\n      },\r\n      error: (error) => {\r\n        this.saving.set(false);\r\n        console.error('Failed to update policy:', error);\r\n        this.notificationService.error(this.i18n.t('excuse_policies.errors.update_failed'));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Cancel and navigate back\r\n   */\r\n  onCancel(): void {\r\n    const policy = this.currentPolicy();\r\n    if (policy) {\r\n      this.router.navigate(['/excuse-policies', policy.id, 'view']);\r\n    } else {\r\n      this.router.navigate(['/excuse-policies']);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset form to original values\r\n   */\r\n  onReset(): void {\r\n    const policy = this.currentPolicy();\r\n    if (policy) {\r\n      this.populateForm(policy);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mark all form fields as touched\r\n   */\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.policyForm.controls).forEach(key => {\r\n      const control = this.policyForm.get(key);\r\n      if (control) {\r\n        control.markAsTouched();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if form field has error\r\n   */\r\n  hasError(fieldName: string): boolean {\r\n    const field = this.policyForm.get(fieldName);\r\n    return !!(field && field.invalid && (field.dirty || field.touched));\r\n  }\r\n\r\n  /**\r\n   * Get error message for field\r\n   */\r\n  getErrorMessage(fieldName: string): string {\r\n    const field = this.policyForm.get(fieldName);\r\n    if (!field || !field.errors) return '';\r\n\r\n    if (field.errors['required']) {\r\n      return this.i18n.t('validation.required');\r\n    }\r\n\r\n    if (field.errors['min']) {\r\n      return this.i18n.t('validation.min_value') + ' ' + field.errors['min'].min;\r\n    }\r\n\r\n    if (field.errors['max']) {\r\n      return this.i18n.t('validation.max_value') + ' ' + field.errors['max'].max;\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Check if field is invalid for styling\r\n   */\r\n  isFieldInvalid(fieldName: string): boolean {\r\n    return this.hasError(fieldName);\r\n  }\r\n\r\n  /**\r\n   * Get policy branch name for display\r\n   */\r\n  getPolicyBranchName(): string {\r\n    return this.currentPolicy()?.branchName || this.i18n.t('common.all_branches');\r\n  }\r\n}", "<div class=\"app-form-page\">\r\n  <app-form-header\r\n    mode=\"edit\"\r\n    [title]=\"i18n.t('excuse_policies.edit_policy')\"\r\n    moduleName=\"excuse-policies\"\r\n    moduleRoute=\"excuse-policies\"\r\n    [entityId]=\"policyId || 0\"\r\n    [loading]=\"saving()\">\r\n  </app-form-header>\r\n\r\n  <!-- Loading State -->\r\n  @if (loading()) {\r\n    <div class=\"text-center py-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">{{ i18n.t('common.loading') }}</span>\r\n      </div>\r\n      <p class=\"mt-3 text-muted\">{{ i18n.t('excuse_policies.loading_details') }}</p>\r\n    </div>\r\n  }\r\n\r\n  <!-- Main Form Content -->\r\n  @if (!loading() && currentPolicy()) {\r\n    <form [formGroup]=\"policyForm\" (ngSubmit)=\"onSubmit()\">\r\n      <div class=\"app-desktop-sidebar\">\r\n        <!-- Main Form Content -->\r\n        <div class=\"app-main-content\">\r\n          <!-- Basic Information Section -->\r\n          <app-form-section [title]=\"i18n.t('excuse_policies.basic_information')\">\r\n            <div class=\"row\">\r\n              <!-- Branch -->\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label for=\"branchId\" class=\"form-label\">\r\n                  {{ i18n.t('fields.branch') }}\r\n                </label>\r\n                <app-searchable-select\r\n                  id=\"branchId\"\r\n                  formControlName=\"branchId\"\r\n                  [options]=\"branchOptions\"\r\n                  [placeholder]=\"i18n.t('excuse_policies.placeholders.select_branch')\"\r\n                  [isInvalid]=\"isFieldInvalid('branchId')\">\r\n                </app-searchable-select>\r\n                @if (hasError('branchId')) {\r\n                  <div class=\"invalid-feedback d-block\">\r\n                    {{ getErrorMessage('branchId') }}\r\n                  </div>\r\n                }\r\n                <div class=\"form-text\">\r\n                  {{ i18n.t('excuse_policies.help.branch_selection') }}\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Status -->\r\n              <div class=\"col-md-6 mb-3\">\r\n                <div class=\"form-check form-switch\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id=\"isActive\"\r\n                    formControlName=\"isActive\"\r\n                    class=\"form-check-input\">\r\n                  <label for=\"isActive\" class=\"form-check-label\">\r\n                    {{ i18n.t('excuse_policies.is_active') }}\r\n                  </label>\r\n                </div>\r\n                <div class=\"form-text\">\r\n                  {{ i18n.t('excuse_policies.help.policy_status') }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </app-form-section>\r\n\r\n          <!-- Limits Section -->\r\n          <app-form-section [title]=\"i18n.t('excuse_policies.excuse_limits')\">\r\n            <div class=\"row\">\r\n              <!-- Max Personal Excuses Per Month -->\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label for=\"maxPersonalExcusesPerMonth\" class=\"form-label\">\r\n                  {{ i18n.t('excuse_policies.max_personal_excuses_per_month') }} <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"maxPersonalExcusesPerMonth\"\r\n                  formControlName=\"maxPersonalExcusesPerMonth\"\r\n                  class=\"form-control\"\r\n                  [class.is-invalid]=\"isFieldInvalid('maxPersonalExcusesPerMonth')\"\r\n                  min=\"0\"\r\n                  max=\"31\"\r\n                  [placeholder]=\"i18n.t('excuse_policies.placeholders.enter_max_excuses')\">\r\n                @if (hasError('maxPersonalExcusesPerMonth')) {\r\n                  <div class=\"invalid-feedback\">\r\n                    {{ getErrorMessage('maxPersonalExcusesPerMonth') }}\r\n                  </div>\r\n                }\r\n              </div>\r\n\r\n              <!-- Max Personal Excuse Hours Per Month -->\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label for=\"maxPersonalExcuseHoursPerMonth\" class=\"form-label\">\r\n                  {{ i18n.t('excuse_policies.max_personal_excuse_hours_per_month') }} <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"maxPersonalExcuseHoursPerMonth\"\r\n                  formControlName=\"maxPersonalExcuseHoursPerMonth\"\r\n                  class=\"form-control\"\r\n                  [class.is-invalid]=\"isFieldInvalid('maxPersonalExcuseHoursPerMonth')\"\r\n                  min=\"0\"\r\n                  max=\"744\"\r\n                  [placeholder]=\"i18n.t('excuse_policies.placeholders.enter_max_hours')\">\r\n                @if (hasError('maxPersonalExcuseHoursPerMonth')) {\r\n                  <div class=\"invalid-feedback\">\r\n                    {{ getErrorMessage('maxPersonalExcuseHoursPerMonth') }}\r\n                  </div>\r\n                }\r\n              </div>\r\n\r\n              <!-- Max Personal Excuse Hours Per Day -->\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label for=\"maxPersonalExcuseHoursPerDay\" class=\"form-label\">\r\n                  {{ i18n.t('excuse_policies.max_personal_excuse_hours_per_day') }} <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"maxPersonalExcuseHoursPerDay\"\r\n                  formControlName=\"maxPersonalExcuseHoursPerDay\"\r\n                  class=\"form-control\"\r\n                  [class.is-invalid]=\"isFieldInvalid('maxPersonalExcuseHoursPerDay')\"\r\n                  min=\"0\"\r\n                  max=\"24\"\r\n                  [placeholder]=\"i18n.t('excuse_policies.placeholders.enter_max_daily_hours')\">\r\n                @if (hasError('maxPersonalExcuseHoursPerDay')) {\r\n                  <div class=\"invalid-feedback\">\r\n                    {{ getErrorMessage('maxPersonalExcuseHoursPerDay') }}\r\n                  </div>\r\n                }\r\n              </div>\r\n\r\n              <!-- Max Hours Per Excuse -->\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label for=\"maxHoursPerExcuse\" class=\"form-label\">\r\n                  {{ i18n.t('excuse_policies.max_hours_per_excuse') }} <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <input\r\n                  type=\"number\"\r\n                  id=\"maxHoursPerExcuse\"\r\n                  formControlName=\"maxHoursPerExcuse\"\r\n                  class=\"form-control\"\r\n                  [class.is-invalid]=\"isFieldInvalid('maxHoursPerExcuse')\"\r\n                  min=\"0\"\r\n                  max=\"24\"\r\n                  [placeholder]=\"i18n.t('excuse_policies.placeholders.enter_max_excuse_hours')\">\r\n                @if (hasError('maxHoursPerExcuse')) {\r\n                  <div class=\"invalid-feedback\">\r\n                    {{ getErrorMessage('maxHoursPerExcuse') }}\r\n                  </div>\r\n                }\r\n              </div>\r\n            </div>\r\n          </app-form-section>\r\n\r\n          <!-- Settings Section -->\r\n          <app-form-section [title]=\"i18n.t('excuse_policies.policy_settings')\">\r\n            <div class=\"row\">\r\n              <!-- Minimum Excuse Duration -->\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label for=\"minimumExcuseDuration\" class=\"form-label\">\r\n                  {{ i18n.t('excuse_policies.minimum_excuse_duration') }} <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"minimumExcuseDuration\"\r\n                    formControlName=\"minimumExcuseDuration\"\r\n                    class=\"form-control\"\r\n                    [class.is-invalid]=\"isFieldInvalid('minimumExcuseDuration')\"\r\n                    min=\"1\"\r\n                    max=\"1440\"\r\n                    [placeholder]=\"i18n.t('excuse_policies.placeholders.enter_min_duration')\">\r\n                  <span class=\"input-group-text\">{{ i18n.t('fields.minutesUnit') }}</span>\r\n                </div>\r\n                @if (hasError('minimumExcuseDuration')) {\r\n                  <div class=\"invalid-feedback d-block\">\r\n                    {{ getErrorMessage('minimumExcuseDuration') }}\r\n                  </div>\r\n                }\r\n              </div>\r\n\r\n              <!-- Max Retroactive Days -->\r\n              <div class=\"col-md-6 mb-3\">\r\n                <label for=\"maxRetroactiveDays\" class=\"form-label\">\r\n                  {{ i18n.t('excuse_policies.max_retroactive_days') }} <span class=\"text-danger\">*</span>\r\n                </label>\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"maxRetroactiveDays\"\r\n                    formControlName=\"maxRetroactiveDays\"\r\n                    class=\"form-control\"\r\n                    [class.is-invalid]=\"isFieldInvalid('maxRetroactiveDays')\"\r\n                    min=\"0\"\r\n                    max=\"365\"\r\n                    [placeholder]=\"i18n.t('excuse_policies.placeholders.enter_retroactive_days')\">\r\n                  <span class=\"input-group-text\">{{ i18n.t('fields.daysUnit') }}</span>\r\n                </div>\r\n                @if (hasError('maxRetroactiveDays')) {\r\n                  <div class=\"invalid-feedback d-block\">\r\n                    {{ getErrorMessage('maxRetroactiveDays') }}\r\n                  </div>\r\n                }\r\n              </div>\r\n\r\n              <!-- Policy Toggles -->\r\n              <div class=\"col-12\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <div class=\"form-check form-switch\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"requiresApproval\"\r\n                        formControlName=\"requiresApproval\"\r\n                        class=\"form-check-input\">\r\n                      <label for=\"requiresApproval\" class=\"form-check-label\">\r\n                        {{ i18n.t('excuse_policies.requires_approval') }}\r\n                      </label>\r\n                    </div>\r\n                    <div class=\"form-text\">\r\n                      {{ i18n.t('excuse_policies.help.requires_approval') }}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <div class=\"form-check form-switch\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"allowPartialHourExcuses\"\r\n                        formControlName=\"allowPartialHourExcuses\"\r\n                        class=\"form-check-input\">\r\n                      <label for=\"allowPartialHourExcuses\" class=\"form-check-label\">\r\n                        {{ i18n.t('excuse_policies.allow_partial_hour_excuses') }}\r\n                      </label>\r\n                    </div>\r\n                    <div class=\"form-text\">\r\n                      {{ i18n.t('excuse_policies.help.partial_hours') }}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <div class=\"form-check form-switch\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"allowSelfServiceRequests\"\r\n                        formControlName=\"allowSelfServiceRequests\"\r\n                        class=\"form-check-input\">\r\n                      <label for=\"allowSelfServiceRequests\" class=\"form-check-label\">\r\n                        {{ i18n.t('excuse_policies.allow_self_service_requests') }}\r\n                      </label>\r\n                    </div>\r\n                    <div class=\"form-text\">\r\n                      {{ i18n.t('excuse_policies.help.self_service') }}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </app-form-section>\r\n        </div>\r\n\r\n        <!-- Sidebar Actions -->\r\n        <div class=\"app-sidebar-content\">\r\n          <!-- Form Actions Card -->\r\n          <div class=\"card mb-3\">\r\n            <div class=\"card-header\">\r\n              <h6 class=\"card-title mb-0\">\r\n                <i class=\"fas fa-cogs me-2\"></i>\r\n                {{ i18n.t('common.actions') }}\r\n              </h6>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"d-grid gap-2\">\r\n                <!-- Save Button -->\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary\"\r\n                  [disabled]=\"policyForm.invalid || saving()\">\r\n                  @if (saving()) {\r\n                    <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n                    {{ i18n.t('common.saving') }}\r\n                  } @else {\r\n                    <i class=\"fas fa-save me-2\"></i>\r\n                    {{ i18n.t('common.save') }}\r\n                  }\r\n                </button>\r\n\r\n                <!-- Reset Button -->\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-outline-secondary\"\r\n                  (click)=\"onReset()\"\r\n                  [disabled]=\"saving()\">\r\n                  <i class=\"fas fa-undo me-2\"></i>\r\n                  {{ i18n.t('common.reset') }}\r\n                </button>\r\n\r\n                <!-- Cancel Button -->\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-outline-danger\"\r\n                  (click)=\"onCancel()\"\r\n                  [disabled]=\"saving()\">\r\n                  <i class=\"fas fa-times me-2\"></i>\r\n                  {{ i18n.t('common.cancel') }}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Help Card -->\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h6 class=\"card-title mb-0\">\r\n                <i class=\"fas fa-info-circle me-2\"></i>\r\n                {{ i18n.t('common.help') }}\r\n              </h6>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <p class=\"card-text small text-muted mb-2\">\r\n                {{ i18n.t('excuse_policies.help.edit_instructions') }}\r\n              </p>\r\n              <ul class=\"list-unstyled small text-muted mb-0\">\r\n                <li class=\"mb-1\">\r\n                  <i class=\"fas fa-check-circle text-success me-1\"></i>\r\n                  {{ i18n.t('excuse_policies.help.required_fields') }}\r\n                </li>\r\n                <li class=\"mb-1\">\r\n                  <i class=\"fas fa-clock text-info me-1\"></i>\r\n                  {{ i18n.t('excuse_policies.help.time_validation') }}\r\n                </li>\r\n                <li>\r\n                  <i class=\"fas fa-shield-alt text-warning me-1\"></i>\r\n                  {{ i18n.t('excuse_policies.help.approval_info') }}\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  }\r\n</div>"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYI,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA8B,GAAA,OAAA,CAAA,EAC2B,GAAA,QAAA,CAAA;AACvB,IAAA,iBAAA,CAAA;AAA8B,IAAA,uBAAA,EAAO;AAErE,IAAA,yBAAA,GAAA,KAAA,CAAA;AAA2B,IAAA,iBAAA,CAAA;AAA+C,IAAA,uBAAA,EAAI;;;;AAF9C,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,gBAAA,CAAA;AAEL,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,iCAAA,CAAA;;;;;;AA0Bf,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,UAAA,GAAA,GAAA;;;;;;AA6CF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,4BAAA,GAAA,GAAA;;;;;;AAoBF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,gCAAA,GAAA,GAAA;;;;;;AAoBF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,8BAAA,GAAA,GAAA;;;;;;AAoBF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,mBAAA,GAAA,GAAA;;;;;;AA4BF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,uBAAA,GAAA,GAAA;;;;;;AAuBF,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,oBAAA,GAAA,GAAA;;;;;;AA+EA,IAAA,oBAAA,GAAA,QAAA,EAAA;AACA,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,eAAA,GAAA,GAAA;;;;;;AAEA,IAAA,oBAAA,GAAA,KAAA,EAAA;AACA,IAAA,iBAAA,CAAA;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,aAAA,GAAA,GAAA;;;;;;;AA1QhB,IAAA,yBAAA,GAAA,QAAA,CAAA;AAA+B,IAAA,qBAAA,YAAA,gCAAA,4EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAY,OAAA,SAAA,CAAU;IAAA,GAAtB,4EAAsB;AACnD,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAiC,GAAA,OAAA,CAAA,EAED,GAAA,oBAAA,EAAA,EAE4C,GAAA,OAAA,EAAA,EACrD,GAAA,OAAA,EAAA,EAEY,GAAA,SAAA,EAAA;AAEvB,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,oBAAA,GAAA,yBAAA,EAAA;AAOA,IAAA,8BAAA,GAAA,gEAAA,GAAA,GAAA,OAAA,EAAA;AAKA,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAM;AAIR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,OAAA,EAAA;AAEvB,IAAA,oBAAA,IAAA,SAAA,EAAA;AAKA,IAAA,yBAAA,IAAA,SAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAQ;AAEV,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAM,EACF,EACF;AAIR,IAAA,yBAAA,IAAA,oBAAA,EAAA,EAAoE,IAAA,OAAA,EAAA,EACjD,IAAA,OAAA,EAAA,EAEY,IAAA,SAAA,EAAA;AAEvB,IAAA,iBAAA,EAAA;AAA+D,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEnG,IAAA,oBAAA,IAAA,SAAA,EAAA;AASA,IAAA,8BAAA,IAAA,iEAAA,GAAA,GAAA,OAAA,EAAA;AAKF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,SAAA,EAAA;AAEvB,IAAA,iBAAA,EAAA;AAAoE,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAExG,IAAA,oBAAA,IAAA,SAAA,EAAA;AASA,IAAA,8BAAA,IAAA,iEAAA,GAAA,GAAA,OAAA,EAAA;AAKF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,SAAA,EAAA;AAEvB,IAAA,iBAAA,EAAA;AAAkE,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEtG,IAAA,oBAAA,IAAA,SAAA,EAAA;AASA,IAAA,8BAAA,IAAA,iEAAA,GAAA,GAAA,OAAA,EAAA;AAKF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,SAAA,EAAA;AAEvB,IAAA,iBAAA,EAAA;AAAqD,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEzF,IAAA,oBAAA,IAAA,SAAA,EAAA;AASA,IAAA,8BAAA,IAAA,iEAAA,GAAA,GAAA,OAAA,EAAA;AAKF,IAAA,uBAAA,EAAM,EACF;AAIR,IAAA,yBAAA,IAAA,oBAAA,EAAA,EAAsE,IAAA,OAAA,EAAA,EACnD,IAAA,OAAA,EAAA,EAEY,IAAA,SAAA,EAAA;AAEvB,IAAA,iBAAA,EAAA;AAAwD,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAE5F,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,SAAA,EAAA;AASA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA+B,IAAA,iBAAA,EAAA;AAAkC,IAAA,uBAAA,EAAO;AAE1E,IAAA,8BAAA,IAAA,iEAAA,GAAA,GAAA,OAAA,EAAA;AAKF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,SAAA,EAAA;AAEvB,IAAA,iBAAA,EAAA;AAAqD,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA0B,IAAA,iBAAA,IAAA,GAAA;AAAC,IAAA,uBAAA,EAAO;AAEzF,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,oBAAA,IAAA,SAAA,EAAA;AASA,IAAA,yBAAA,IAAA,QAAA,EAAA;AAA+B,IAAA,iBAAA,EAAA;AAA+B,IAAA,uBAAA,EAAO;AAEvE,IAAA,8BAAA,IAAA,iEAAA,GAAA,GAAA,OAAA,EAAA;AAKF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAoB,IAAA,OAAA,EAAA,EACD,IAAA,OAAA,EAAA,EACY,IAAA,OAAA,EAAA;AAEvB,IAAA,oBAAA,IAAA,SAAA,EAAA;AAKA,IAAA,yBAAA,IAAA,SAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAQ;AAEV,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,OAAA,EAAA;AAEvB,IAAA,oBAAA,IAAA,SAAA,EAAA;AAKA,IAAA,yBAAA,IAAA,SAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAQ;AAEV,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,IAAA,OAAA,EAAA,EAA2B,IAAA,OAAA,EAAA;AAEvB,IAAA,oBAAA,IAAA,SAAA,EAAA;AAKA,IAAA,yBAAA,IAAA,SAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAQ;AAEV,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAM,EACF,EACF,EACF,EACF,EACW;AAIrB,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAiC,IAAA,OAAA,EAAA,EAER,IAAA,OAAA,EAAA,EACI,IAAA,MAAA,EAAA;AAErB,IAAA,oBAAA,IAAA,KAAA,EAAA;AACA,IAAA,iBAAA,EAAA;AACF,IAAA,uBAAA,EAAK;AAEP,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAuB,KAAA,OAAA,EAAA,EACK,KAAA,UAAA,EAAA;AAMtB,IAAA,8BAAA,KAAA,kEAAA,GAAA,CAAA,EAAgB,KAAA,kEAAA,GAAA,CAAA;AAOlB,IAAA,uBAAA;AAGA,IAAA,yBAAA,KAAA,UAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,gCAAA,6EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,QAAA,CAAS;IAAA,GAAlB,6EAAkB;AAElB,IAAA,oBAAA,KAAA,KAAA,EAAA;AACA,IAAA,iBAAA,GAAA;AACF,IAAA,uBAAA;AAGA,IAAA,yBAAA,KAAA,UAAA,EAAA;AAGE,IAAA,qBAAA,SAAA,gCAAA,6EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,aAAA,sBAAS,OAAA,SAAA,CAAU;IAAA,GAAnB,6EAAmB;AAEnB,IAAA,oBAAA,KAAA,KAAA,EAAA;AACA,IAAA,iBAAA,GAAA;AACF,IAAA,uBAAA,EAAS,EACL,EACF;AAIR,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAkB,KAAA,OAAA,EAAA,EACS,KAAA,MAAA,EAAA;AAErB,IAAA,oBAAA,KAAA,KAAA,EAAA;AACA,IAAA,iBAAA,GAAA;AACF,IAAA,uBAAA,EAAK;AAEP,IAAA,yBAAA,KAAA,OAAA,EAAA,EAAuB,KAAA,KAAA,EAAA;AAEnB,IAAA,iBAAA,GAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,MAAA,EAAA,EAAgD,KAAA,MAAA,EAAA;AAE5C,IAAA,oBAAA,KAAA,KAAA,EAAA;AACA,IAAA,iBAAA,GAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,MAAA,EAAA;AACE,IAAA,oBAAA,KAAA,KAAA,EAAA;AACA,IAAA,iBAAA,GAAA;AACF,IAAA,uBAAA;AACA,IAAA,yBAAA,KAAA,IAAA;AACE,IAAA,oBAAA,KAAA,KAAA,EAAA;AACA,IAAA,iBAAA,GAAA;AACF,IAAA,uBAAA,EAAK,EACF,EACD,EACF,EACF,EACF;;;;AAlUF,IAAA,qBAAA,aAAA,OAAA,UAAA;AAKkB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,mCAAA,CAAA;AAKV,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,eAAA,GAAA,GAAA;AAKA,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,OAAA,aAAA,EAAyB,eAAA,OAAA,KAAA,EAAA,4CAAA,CAAA,EAC2C,aAAA,OAAA,eAAA,UAAA,CAAA;AAGtE,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,SAAA,UAAA,IAAA,IAAA,EAAA;AAME,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,uCAAA,GAAA,GAAA;AAaE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,2BAAA,GAAA,GAAA;AAIF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,oCAAA,GAAA,GAAA;AAOU,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,+BAAA,CAAA;AAKV,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,gDAAA,GAAA,GAAA;AAOA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,4BAAA,CAAA;AAGA,IAAA,qBAAA,eAAA,OAAA,KAAA,EAAA,gDAAA,CAAA;AACF,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,SAAA,4BAAA,IAAA,KAAA,EAAA;AAUE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,qDAAA,GAAA,GAAA;AAOA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,gCAAA,CAAA;AAGA,IAAA,qBAAA,eAAA,OAAA,KAAA,EAAA,8CAAA,CAAA;AACF,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,SAAA,gCAAA,IAAA,KAAA,EAAA;AAUE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,mDAAA,GAAA,GAAA;AAOA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,8BAAA,CAAA;AAGA,IAAA,qBAAA,eAAA,OAAA,KAAA,EAAA,oDAAA,CAAA;AACF,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,SAAA,8BAAA,IAAA,KAAA,EAAA;AAUE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,sCAAA,GAAA,GAAA;AAOA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,mBAAA,CAAA;AAGA,IAAA,qBAAA,eAAA,OAAA,KAAA,EAAA,qDAAA,CAAA;AACF,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,SAAA,mBAAA,IAAA,KAAA,EAAA;AAUY,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,OAAA,KAAA,EAAA,iCAAA,CAAA;AAKV,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,yCAAA,GAAA,GAAA;AAQE,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,uBAAA,CAAA;AAGA,IAAA,qBAAA,eAAA,OAAA,KAAA,EAAA,iDAAA,CAAA;AAC6B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,oBAAA,CAAA;AAEjC,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,SAAA,uBAAA,IAAA,KAAA,EAAA;AAUE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,sCAAA,GAAA,GAAA;AAQE,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,cAAA,OAAA,eAAA,oBAAA,CAAA;AAGA,IAAA,qBAAA,eAAA,OAAA,KAAA,EAAA,qDAAA,CAAA;AAC6B,IAAA,oBAAA,CAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,EAAA,iBAAA,CAAA;AAEjC,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,SAAA,oBAAA,IAAA,KAAA,EAAA;AAkBQ,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,mCAAA,GAAA,GAAA;AAIF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,wCAAA,GAAA,GAAA;AAYE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,4CAAA,GAAA,GAAA;AAIF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,oCAAA,GAAA,GAAA;AAYE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,6CAAA,GAAA,GAAA;AAIF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,mCAAA,GAAA,GAAA;AAgBN,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,gBAAA,GAAA,GAAA;AASE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,WAAA,WAAA,OAAA,OAAA,CAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,OAAA,OAAA,IAAA,MAAA,GAAA;AAcA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,OAAA,CAAA;AAEA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,cAAA,GAAA,GAAA;AAQA,IAAA,oBAAA;AAAA,IAAA,qBAAA,YAAA,OAAA,OAAA,CAAA;AAEA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,eAAA,GAAA,GAAA;AAWF,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,aAAA,GAAA,GAAA;AAKA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,wCAAA,GAAA,GAAA;AAKE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,sCAAA,GAAA,GAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,sCAAA,GAAA,GAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,KAAA,EAAA,oCAAA,GAAA,GAAA;;;;ADxTZ,IAAO,6BAAP,MAAO,2BAAyB;EAC5B,KAAK,OAAO,WAAW;EACvB,SAAS,OAAO,MAAM;EACtB,QAAQ,OAAO,cAAc;EAC7B,sBAAsB,OAAO,mBAAmB;EAChD,wBAAwB,OAAO,qBAAqB;EACrD,OAAO,OAAO,WAAW;;EAGhC,UAAU,OAAO,OAAK,GAAA,YAAA,CAAA,EAAA,WAAA,UAAA,CAAA,IAAA,CAAA,CAAA;EACtB,SAAS,OAAO,OAAK,GAAA,YAAA,CAAA,EAAA,WAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EACrB,gBAAgB,OAA+B,MAAI,GAAA,YAAA,CAAA,EAAA,WAAA,gBAAA,CAAA,IAAA,CAAA,CAAA;EACnD,WAA0B;;EAG1B;;EAGA,WAAW,OAA0C,CAAA,GAAE,GAAA,YAAA,CAAA,EAAA,WAAA,WAAA,CAAA,IAAA,CAAA,CAAA;;EAGvD,IAAI,gBAAa;AACf,UAAM,UAAoC;MACxC,EAAE,OAAO,MAAM,OAAO,KAAK,KAAK,EAAE,qBAAqB,EAAC;;AAE1D,WAAO,QAAQ,OACb,KAAK,SAAQ,EAAG,IAAI,aAAW;MAC7B,OAAO,OAAO;MACd,OAAO,OAAO;MACd,CAAC;EAEP;EAEA,cAAA;AACE,SAAK,aAAa,KAAK,WAAU;EACnC;EAEA,WAAQ;AACN,SAAK,aAAY;AACjB,SAAK,WAAU;EACjB;;;;EAKQ,aAAU;AAChB,WAAO,KAAK,GAAG,MAAM;MACnB,UAAU,CAAC,IAAI;MACf,4BAA4B,CAAC,GAAG,CAAC,WAAW,UAAU,WAAW,IAAI,CAAC,GAAG,WAAW,IAAI,EAAE,CAAC,CAAC;MAC5F,gCAAgC,CAAC,GAAG,CAAC,WAAW,UAAU,WAAW,IAAI,CAAC,GAAG,WAAW,IAAI,GAAG,CAAC,CAAC;MACjG,8BAA8B,CAAC,GAAG,CAAC,WAAW,UAAU,WAAW,IAAI,CAAC,GAAG,WAAW,IAAI,EAAE,CAAC,CAAC;MAC9F,mBAAmB,CAAC,GAAG,CAAC,WAAW,UAAU,WAAW,IAAI,CAAC,GAAG,WAAW,IAAI,EAAE,CAAC,CAAC;MACnF,kBAAkB,CAAC,IAAI;MACvB,yBAAyB,CAAC,KAAK;MAC/B,uBAAuB,CAAC,IAAI,CAAC,WAAW,UAAU,WAAW,IAAI,CAAC,GAAG,WAAW,IAAI,IAAI,CAAC,CAAC;MAC1F,oBAAoB,CAAC,GAAG,CAAC,WAAW,UAAU,WAAW,IAAI,CAAC,GAAG,WAAW,IAAI,GAAG,CAAC,CAAC;MACrF,0BAA0B,CAAC,IAAI;MAC/B,UAAU,CAAC,IAAI;KAChB;EACH;;;;EAKQ,eAAY;AAClB,SAAK,sBAAsB,YAAW,EAAG,UAAU;MACjD,MAAM,wBAAC,aAAY;AACjB,aAAK,SAAS,IAAI,QAAQ;MAC5B,GAFM;MAGN,OAAO,wBAAC,UAAS;AACf,gBAAQ,MAAM,4BAA4B,KAAK;AAC/C,aAAK,oBAAoB,MAAM,KAAK,KAAK,EAAE,6CAA6C,CAAC;MAC3F,GAHO;KAIR;EACH;;;;EAKQ,aAAU;AAChB,UAAM,gBAAgB,KAAK,MAAM,SAAS,SAAS,IAAI,IAAI;AAC3D,QAAI,CAAC,eAAe;AAClB,WAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;AACzC;IACF;AAEA,SAAK,WAAW,CAAC;AACjB,SAAK,QAAQ,IAAI,IAAI;AAErB,SAAK,sBAAsB,oBAAoB,KAAK,QAAQ,EAAE,UAAU;MACtE,MAAM,wBAAC,WAAU;AACf,aAAK,cAAc,IAAI,MAAM;AAC7B,aAAK,aAAa,MAAM;AACxB,aAAK,QAAQ,IAAI,KAAK;MACxB,GAJM;MAKN,OAAO,wBAAC,UAAS;AACf,gBAAQ,MAAM,0BAA0B,KAAK;AAC7C,aAAK,oBAAoB,MAAM,KAAK,KAAK,EAAE,oCAAoC,CAAC;AAChF,aAAK,QAAQ,IAAI,KAAK;AACtB,aAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;MAC3C,GALO;KAMR;EACH;;;;EAKQ,aAAa,QAAuB;AAC1C,SAAK,WAAW,WAAW;MACzB,UAAU,OAAO;MACjB,4BAA4B,OAAO;MACnC,gCAAgC,OAAO;MACvC,8BAA8B,OAAO;MACrC,mBAAmB,OAAO;MAC1B,kBAAkB,OAAO;MACzB,yBAAyB,OAAO;MAChC,uBAAuB,OAAO;MAC9B,oBAAoB,OAAO;MAC3B,0BAA0B,OAAO;MACjC,UAAU,OAAO;KAClB;EACH;;;;EAKA,WAAQ;AACN,QAAI,KAAK,WAAW,SAAS;AAC3B,WAAK,qBAAoB;AACzB;IACF;AAEA,UAAM,SAAS,KAAK,cAAa;AACjC,QAAI,CAAC;AAAQ;AAEb,SAAK,OAAO,IAAI,IAAI;AACpB,UAAM,YAAY,KAAK,WAAW;AAElC,UAAM,UAAqC;MACzC,IAAI,OAAO;MACX,UAAU,UAAU;MACpB,4BAA4B,UAAU;MACtC,gCAAgC,UAAU;MAC1C,8BAA8B,UAAU;MACxC,mBAAmB,UAAU;MAC7B,kBAAkB,UAAU;MAC5B,yBAAyB,UAAU;MACnC,uBAAuB,UAAU;MACjC,oBAAoB,UAAU;MAC9B,0BAA0B,UAAU;MACpC,UAAU,UAAU;;AAGtB,SAAK,sBAAsB,mBAAmB,OAAO,IAAI,OAAO,EAAE,UAAU;MAC1E,MAAM,6BAAK;AACT,aAAK,OAAO,IAAI,KAAK;AACrB,aAAK,oBAAoB,QAAQ,KAAK,KAAK,EAAE,iCAAiC,CAAC;AAC/E,aAAK,OAAO,SAAS,CAAC,oBAAoB,OAAO,IAAI,MAAM,CAAC;MAC9D,GAJM;MAKN,OAAO,wBAAC,UAAS;AACf,aAAK,OAAO,IAAI,KAAK;AACrB,gBAAQ,MAAM,4BAA4B,KAAK;AAC/C,aAAK,oBAAoB,MAAM,KAAK,KAAK,EAAE,sCAAsC,CAAC;MACpF,GAJO;KAKR;EACH;;;;EAKA,WAAQ;AACN,UAAM,SAAS,KAAK,cAAa;AACjC,QAAI,QAAQ;AACV,WAAK,OAAO,SAAS,CAAC,oBAAoB,OAAO,IAAI,MAAM,CAAC;IAC9D,OAAO;AACL,WAAK,OAAO,SAAS,CAAC,kBAAkB,CAAC;IAC3C;EACF;;;;EAKA,UAAO;AACL,UAAM,SAAS,KAAK,cAAa;AACjC,QAAI,QAAQ;AACV,WAAK,aAAa,MAAM;IAC1B;EACF;;;;EAKQ,uBAAoB;AAC1B,WAAO,KAAK,KAAK,WAAW,QAAQ,EAAE,QAAQ,SAAM;AAClD,YAAM,UAAU,KAAK,WAAW,IAAI,GAAG;AACvC,UAAI,SAAS;AACX,gBAAQ,cAAa;MACvB;IACF,CAAC;EACH;;;;EAKA,SAAS,WAAiB;AACxB,UAAM,QAAQ,KAAK,WAAW,IAAI,SAAS;AAC3C,WAAO,CAAC,EAAE,SAAS,MAAM,YAAY,MAAM,SAAS,MAAM;EAC5D;;;;EAKA,gBAAgB,WAAiB;AAC/B,UAAM,QAAQ,KAAK,WAAW,IAAI,SAAS;AAC3C,QAAI,CAAC,SAAS,CAAC,MAAM;AAAQ,aAAO;AAEpC,QAAI,MAAM,OAAO,UAAU,GAAG;AAC5B,aAAO,KAAK,KAAK,EAAE,qBAAqB;IAC1C;AAEA,QAAI,MAAM,OAAO,KAAK,GAAG;AACvB,aAAO,KAAK,KAAK,EAAE,sBAAsB,IAAI,MAAM,MAAM,OAAO,KAAK,EAAE;IACzE;AAEA,QAAI,MAAM,OAAO,KAAK,GAAG;AACvB,aAAO,KAAK,KAAK,EAAE,sBAAsB,IAAI,MAAM,MAAM,OAAO,KAAK,EAAE;IACzE;AAEA,WAAO;EACT;;;;EAKA,eAAe,WAAiB;AAC9B,WAAO,KAAK,SAAS,SAAS;EAChC;;;;EAKA,sBAAmB;AACjB,WAAO,KAAK,cAAa,GAAI,cAAc,KAAK,KAAK,EAAE,qBAAqB;EAC9E;;AAnPoC;cAAzB;mCAAA,4BAAyB;AAAA;cAAzB,6FAAA,4BAAyB,WAAA,CAAA,CAAA,wBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,eAAA,GAAA,CAAA,QAAA,QAAA,cAAA,mBAAA,eAAA,mBAAA,GAAA,SAAA,YAAA,SAAA,GAAA,CAAA,GAAA,eAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,QAAA,UAAA,GAAA,kBAAA,cAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,QAAA,YAAA,GAAA,CAAA,GAAA,YAAA,WAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,YAAA,MAAA,GAAA,CAAA,OAAA,YAAA,GAAA,YAAA,GAAA,CAAA,MAAA,YAAA,mBAAA,YAAA,GAAA,WAAA,eAAA,WAAA,GAAA,CAAA,GAAA,oBAAA,SAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,aAAA,GAAA,CAAA,QAAA,YAAA,MAAA,YAAA,mBAAA,YAAA,GAAA,kBAAA,GAAA,CAAA,OAAA,YAAA,GAAA,kBAAA,GAAA,CAAA,OAAA,8BAAA,GAAA,YAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,QAAA,UAAA,MAAA,8BAAA,mBAAA,8BAAA,OAAA,KAAA,OAAA,MAAA,GAAA,gBAAA,GAAA,aAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,OAAA,kCAAA,GAAA,YAAA,GAAA,CAAA,QAAA,UAAA,MAAA,kCAAA,mBAAA,kCAAA,OAAA,KAAA,OAAA,OAAA,GAAA,gBAAA,GAAA,aAAA,GAAA,CAAA,OAAA,gCAAA,GAAA,YAAA,GAAA,CAAA,QAAA,UAAA,MAAA,gCAAA,mBAAA,gCAAA,OAAA,KAAA,OAAA,MAAA,GAAA,gBAAA,GAAA,aAAA,GAAA,CAAA,OAAA,qBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,UAAA,MAAA,qBAAA,mBAAA,qBAAA,OAAA,KAAA,OAAA,MAAA,GAAA,gBAAA,GAAA,aAAA,GAAA,CAAA,OAAA,yBAAA,GAAA,YAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,QAAA,UAAA,MAAA,yBAAA,mBAAA,yBAAA,OAAA,KAAA,OAAA,QAAA,GAAA,gBAAA,GAAA,aAAA,GAAA,CAAA,GAAA,kBAAA,GAAA,CAAA,OAAA,sBAAA,GAAA,YAAA,GAAA,CAAA,QAAA,UAAA,MAAA,sBAAA,mBAAA,sBAAA,OAAA,KAAA,OAAA,OAAA,GAAA,gBAAA,GAAA,aAAA,GAAA,CAAA,GAAA,QAAA,GAAA,CAAA,QAAA,YAAA,MAAA,oBAAA,mBAAA,oBAAA,GAAA,kBAAA,GAAA,CAAA,OAAA,oBAAA,GAAA,kBAAA,GAAA,CAAA,QAAA,YAAA,MAAA,2BAAA,mBAAA,2BAAA,GAAA,kBAAA,GAAA,CAAA,OAAA,2BAAA,GAAA,kBAAA,GAAA,CAAA,QAAA,YAAA,MAAA,4BAAA,mBAAA,4BAAA,GAAA,kBAAA,GAAA,CAAA,OAAA,4BAAA,GAAA,kBAAA,GAAA,CAAA,GAAA,qBAAA,GAAA,CAAA,GAAA,QAAA,MAAA,GAAA,CAAA,GAAA,aAAA,GAAA,CAAA,GAAA,cAAA,MAAA,GAAA,CAAA,GAAA,OAAA,WAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,UAAA,OAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,eAAA,GAAA,UAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,yBAAA,GAAA,SAAA,UAAA,GAAA,CAAA,GAAA,OAAA,WAAA,MAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,sBAAA,GAAA,SAAA,UAAA,GAAA,CAAA,GAAA,OAAA,YAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,OAAA,kBAAA,MAAA,GAAA,CAAA,GAAA,aAAA,SAAA,cAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,SAAA,cAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,OAAA,mBAAA,gBAAA,MAAA,GAAA,CAAA,GAAA,OAAA,YAAA,aAAA,MAAA,GAAA,CAAA,GAAA,OAAA,iBAAA,gBAAA,MAAA,GAAA,CAAA,QAAA,UAAA,GAAA,kBAAA,qBAAA,MAAA,GAAA,CAAA,GAAA,OAAA,WAAA,MAAA,CAAA,GAAA,UAAA,gCAAA,mCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;AC1BtC,IAAA,yBAAA,GAAA,OAAA,CAAA;AACE,IAAA,oBAAA,GAAA,mBAAA,CAAA;AAUA,IAAA,8BAAA,GAAA,kDAAA,GAAA,GAAA,OAAA,CAAA;AAUA,IAAA,8BAAA,GAAA,kDAAA,KAAA,IAAA,QAAA,CAAA;AAsUF,IAAA,uBAAA;;;AAxVI,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,IAAA,KAAA,EAAA,6BAAA,CAAA,EAA+C,YAAA,IAAA,YAAA,CAAA,EAGrB,WAAA,IAAA,OAAA,CAAA;AAK5B,IAAA,oBAAA;AAAA,IAAA,wBAAA,IAAA,QAAA,IAAA,IAAA,EAAA;AAUA,IAAA,oBAAA;AAAA,IAAA,wBAAA,CAAA,IAAA,QAAA,KAAA,IAAA,cAAA,IAAA,IAAA,EAAA;;GDKoC;EAVlC;EACA;EAAW;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EAAA;EACX;EAAmB;EAAA;EACnB;EACA;EACA;AAAoB,GAAA,QAAA,CAAA,6rGAAA,EAAA,CAAA;AAKlB,IAAO,4BAAP;;sEAAO,2BAAyB,CAAA;UAdrC;uBACW,0BAAwB,YACtB,MAAI,SACP;MACP;MACA;MACA;MACA;MACA;MACA;OACD,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAAA,QAAA,CAAA,sgFAAA,EAAA,CAAA;;;;6EAIU,2BAAyB,EAAA,WAAA,6BAAA,UAAA,oFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
