{
  "version": 3,
  "sources": ["src/app/pages/shifts/assign-shifts/assign-shifts.component.ts", "src/app/pages/shifts/assign-shifts/assign-shifts.component.html"],
  "sourcesContent": ["import { Component, OnInit, signal, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { I18nService } from '../../../core/i18n/i18n.service';\nimport { SearchableSelectComponent, SearchableSelectOption } from '../../../shared/components/searchable-select/searchable-select.component';\nimport { PageHeaderComponent } from '../../../shared/components/page-header/page-header.component';\nimport { UnifiedFilterComponent } from '../../../shared/components/unified-filter/unified-filter.component';\nimport { ShiftAssignmentService } from '../../../core/services/shift-assignment.service';\nimport { ShiftsService } from '../shifts.service';\nimport { BranchesService } from '../../branches/branches.service';\nimport { EmployeesService } from '../../employees/employees.service';\nimport { DepartmentsService } from '../../departments/departments.service';\nimport { ModalWrapperComponent } from '../../../shared/components/modal-wrapper/modal-wrapper.component';\nimport {\n  ShiftAssignment,\n  ShiftAssignmentType,\n  ShiftAssignmentStatus,\n  ShiftAssignmentsResponse,\n  CreateShiftAssignmentRequest,\n  UpdateShiftAssignmentRequest,\n  ShiftAssignmentOptions,\n  Shift,\n  ShiftsResponse\n} from '../../../shared/models/shift.model';\nimport { Branch } from '../../../shared/models/branch.model';\nimport { EmployeeSelectOption } from '../../../shared/models/employee.model';\nimport { DepartmentDto } from '../../../shared/models/department.model';\nimport { PermissionService } from '../../../core/auth/permission.service';\nimport { PermissionResources, PermissionActions } from '../../../shared/utils/permission.utils';\nimport { HasPermissionDirective } from '../../../shared/directives/has-permission.directive';\n\n@Component({\n  selector: 'app-assign-shifts',\n  standalone: true,\n  imports: [CommonModule, FormsModule, HasPermissionDirective, SearchableSelectComponent, PageHeaderComponent, UnifiedFilterComponent, ModalWrapperComponent],\n  templateUrl: './assign-shifts.component.html',\n  styleUrls: ['./assign-shifts.component.css']\n})\nexport class AssignShiftsComponent implements OnInit {\n  private shiftAssignmentService = inject(ShiftAssignmentService);\n  private shiftsService = inject(ShiftsService);\n  private branchesService = inject(BranchesService);\n  private employeesService = inject(EmployeesService);\n  private departmentsService = inject(DepartmentsService);\n  private router = inject(Router);\n  public i18n = inject(I18nService);\n  public permissionService = inject(PermissionService);\n\n  // Permission constants for use in template\n  readonly PERMISSIONS = {\n    SHIFT_ASSIGNMENT_CREATE: `${PermissionResources.SHIFT}.${PermissionActions.CREATE}`,\n    SHIFT_ASSIGNMENT_READ: `${PermissionResources.SHIFT}.${PermissionActions.READ}`,\n    SHIFT_ASSIGNMENT_UPDATE: `${PermissionResources.SHIFT}.${PermissionActions.UPDATE}`,\n    SHIFT_ASSIGNMENT_DELETE: `${PermissionResources.SHIFT}.${PermissionActions.DELETE}`,\n    SHIFT_ASSIGNMENT_MANAGE: `${PermissionResources.SHIFT}.${PermissionActions.MANAGE}`\n  };\n\n  // Enum references for template\n  readonly ShiftAssignmentType = ShiftAssignmentType;\n  readonly ShiftAssignmentStatus = ShiftAssignmentStatus;\n  readonly Math = Math;\n\n  // Signals for state management\n  assignments = signal<ShiftAssignment[]>([]);\n  totalCount = signal<number>(0);\n  currentPage = signal<number>(1);\n  pageSize = signal<number>(10);\n  totalPages = signal<number>(0);\n  loading = signal<boolean>(false);\n  error = signal<string | null>(null);\n\n  // Filter signals\n  searchTerm = signal<string>('');\n  selectedAssignmentType = signal<ShiftAssignmentType | null>(null);\n  selectedStatus = signal<ShiftAssignmentStatus | null>(null);\n  selectedShiftId = signal<number | null>(null);\n  selectedEmployeeId = signal<number | null>(null);\n  selectedDepartmentId = signal<number | null>(null);\n  selectedBranchId = signal<number | null>(null);\n  currentlyActiveOnly = signal<boolean>(false);\n\n  // Create/Edit assignment signals\n  showCreateModal = signal<boolean>(false);\n  showEditModal = signal<boolean>(false);\n  editingAssignment = signal<ShiftAssignment | null>(null);\n\n  // Form data signals\n  createForm = signal<CreateShiftAssignmentRequest>({\n    shiftId: 0,\n    assignmentType: ShiftAssignmentType.Employee,\n    effectiveDate: new Date().toISOString().split('T')[0],\n    status: ShiftAssignmentStatus.Active,\n    priority: 10\n  });\n\n  // Options and lookup data\n  assignmentOptions = signal<ShiftAssignmentOptions>({\n    assignmentTypes: [],\n    statuses: []\n  });\n  availableShifts = signal<Shift[]>([]);\n  availableBranches = signal<Branch[]>([]);\n  availableEmployees = signal<EmployeeSelectOption[]>([]);\n  availableDepartments = signal<DepartmentDto[]>([]);\n  selectedBranchForFilter = signal<number | null>(null);\n\n  ngOnInit(): void {\n    this.loadAssignments();\n    this.loadOptions();\n    this.loadShifts();\n    this.loadBranches();\n    this.loadEmployees();\n    this.loadDepartments();\n  }\n\n  loadAssignments(): void {\n    this.loading.set(true);\n    this.error.set(null);\n\n    const params = {\n      page: this.currentPage(),\n      pageSize: this.pageSize(),\n      search: this.searchTerm() || undefined,\n      assignmentType: this.selectedAssignmentType() || undefined,\n      status: this.selectedStatus() || undefined,\n      shiftId: this.selectedShiftId() || undefined,\n      employeeId: this.selectedEmployeeId() || undefined,\n      departmentId: this.selectedDepartmentId() || undefined,\n      branchId: this.selectedBranchId() || undefined,\n      currentlyActive: this.currentlyActiveOnly() || undefined\n    };\n\n    this.shiftAssignmentService.getShiftAssignments(params).subscribe({\n      next: (response: ShiftAssignmentsResponse) => {\n        this.assignments.set(response.items);\n        this.totalCount.set(response.totalCount);\n        this.totalPages.set(response.totalPages);\n        this.loading.set(false);\n      },\n      error: (error) => {\n        console.error('Error loading shift assignments:', error);\n        this.error.set(this.i18n.t('shifts.assignments.loadError'));\n        this.loading.set(false);\n      }\n    });\n  }\n\n  loadOptions(): void {\n    this.shiftAssignmentService.getAssignmentOptions().subscribe({\n      next: (options) => {\n        this.assignmentOptions.set(options);\n      },\n      error: (error) => {\n        console.error('Error loading assignment options:', error);\n      }\n    });\n  }\n\n  loadShifts(): void {\n    this.shiftsService.getShifts(1, 1000).subscribe({\n      next: (response: ShiftsResponse) => {\n        this.availableShifts.set(response.items);\n      },\n      error: (error) => {\n        console.error('Error loading shifts:', error);\n      }\n    });\n  }\n\n  loadBranches(): void {\n    this.branchesService.getBranches(1, 1000).subscribe({\n      next: (response) => {\n        this.availableBranches.set(response.items);\n      },\n      error: (error) => {\n        console.error('Error loading branches:', error);\n      }\n    });\n  }\n\n  loadEmployees(branchId?: number): void {\n    this.employeesService.getEmployeesForSelection(branchId).subscribe({\n      next: (employees) => {\n        this.availableEmployees.set(employees);\n      },\n      error: (error) => {\n        console.error('Error loading employees:', error);\n      }\n    });\n  }\n\n  loadDepartments(branchId?: number): void {\n    const filter = branchId ? { branchId, isActive: true } : { isActive: true };\n    this.departmentsService.getDepartments(filter).subscribe({\n      next: (departments) => {\n        this.availableDepartments.set(departments);\n      },\n      error: (error) => {\n        console.error('Error loading departments:', error);\n      }\n    });\n  }\n\n  // Pagination methods\n  onPageChanged(page: number): void {\n    this.currentPage.set(page);\n    this.loadAssignments();\n  }\n\n  onPageSizeChanged(size: number): void {\n    this.pageSize.set(size);\n    this.currentPage.set(1);\n    this.loadAssignments();\n  }\n\n  // Unified filter handlers\n  onSearchTermChange(searchTerm: string): void {\n    this.searchTerm.set(searchTerm);\n    this.currentPage.set(1);\n    this.loadAssignments();\n  }\n\n  // Filter methods\n  onSearchChanged(): void {\n    this.currentPage.set(1);\n    this.loadAssignments();\n  }\n\n  onFilterChanged(): void {\n    this.currentPage.set(1);\n    this.loadAssignments();\n  }\n\n  onFiltersChange(filters: any): void {\n    if (filters.branchId !== undefined) {\n      const branchId = filters.branchId ? parseInt(filters.branchId) : null;\n      this.selectedBranchId.set(branchId);\n      this.onBranchFilterChanged(branchId);\n    }\n    if (filters.departmentId !== undefined) {\n      const departmentId = filters.departmentId ? parseInt(filters.departmentId) : null;\n      this.selectedDepartmentId.set(departmentId);\n    }\n    if (filters.shiftId !== undefined) {\n      const shiftId = filters.shiftId ? parseInt(filters.shiftId) : null;\n      this.selectedShiftId.set(shiftId);\n    }\n    if (filters.assignmentType !== undefined) {\n      const assignmentType = filters.assignmentType ? parseInt(filters.assignmentType) : null;\n      this.selectedAssignmentType.set(assignmentType);\n    }\n    if (filters.status !== undefined) {\n      const status = filters.status ? parseInt(filters.status) : null;\n      this.selectedStatus.set(status);\n    }\n    this.currentPage.set(1);\n    this.loadAssignments();\n  }\n\n  onBranchFilterChanged(branchId: number | null): void {\n    this.selectedBranchId.set(branchId);\n    this.onFilterChanged();\n\n    // Also update the dropdowns for create form based on selected filter branch\n    this.loadEmployees(branchId || undefined);\n    this.loadDepartments(branchId || undefined);\n  }\n\n  onRefreshData(): void {\n    this.clearFilters();\n    this.loadAssignments();\n  }\n\n  clearFilters(): void {\n    this.searchTerm.set('');\n    this.selectedAssignmentType.set(null);\n    this.selectedStatus.set(null);\n    this.selectedShiftId.set(null);\n    this.selectedEmployeeId.set(null);\n    this.selectedDepartmentId.set(null);\n    this.selectedBranchId.set(null);\n    this.currentlyActiveOnly.set(false);\n    this.currentPage.set(1);\n    this.loadAssignments();\n  }\n\n  // Create assignment methods\n  openCreateModal(): void {\n    // Set effective date to tomorrow (today + 1 day) to meet the validation requirement\n    const tomorrow = new Date();\n    tomorrow.setDate(tomorrow.getDate() + 1);\n\n    this.createForm.set({\n      shiftId: 0,\n      assignmentType: ShiftAssignmentType.Employee,\n      effectiveDate: tomorrow.toISOString().split('T')[0],\n      status: ShiftAssignmentStatus.Active,\n      priority: 10\n    });\n    this.showCreateModal.set(true);\n  }\n\n  closeCreateModal(): void {\n    this.showCreateModal.set(false);\n  }\n\n  createAssignment(): void {\n    if (this.isCreateFormValid()) {\n      this.shiftAssignmentService.createShiftAssignment(this.createForm()).subscribe({\n        next: (result) => {\n          console.log('Assignment created successfully:', result);\n          this.closeCreateModal();\n          this.loadAssignments();\n        },\n        error: (error) => {\n          console.error('Error creating assignment:', error);\n          // Handle error display\n        }\n      });\n    }\n  }\n\n  isCreateFormValid(): boolean {\n    const form = this.createForm();\n    return form.shiftId > 0 &&\n           form.effectiveDate !== '' &&\n           this.isEffectiveDateValid(form.effectiveDate) &&\n           this.isTargetValid(form.assignmentType, form.employeeId, form.departmentId, form.branchId);\n  }\n\n  private isEffectiveDateValid(effectiveDate: string): boolean {\n    if (!effectiveDate) return false;\n\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n\n    const selectedDate = new Date(effectiveDate);\n    selectedDate.setHours(0, 0, 0, 0);\n\n    return selectedDate > today;\n  }\n\n  private isTargetValid(type: ShiftAssignmentType, empId?: number, deptId?: number, branchId?: number): boolean {\n    switch (type) {\n      case ShiftAssignmentType.Employee:\n        return !!empId && empId > 0;\n      case ShiftAssignmentType.Department:\n        return !!deptId && deptId > 0;\n      case ShiftAssignmentType.Branch:\n        return !!branchId && branchId > 0;\n      default:\n        return false;\n    }\n  }\n\n  // Edit assignment methods\n  editAssignment(assignment: ShiftAssignment): void {\n    this.editingAssignment.set(assignment);\n    this.showEditModal.set(true);\n  }\n\n  closeEditModal(): void {\n    this.showEditModal.set(false);\n    this.editingAssignment.set(null);\n  }\n\n  updateAssignment(): void {\n    const assignment = this.editingAssignment();\n    if (assignment) {\n      const updateRequest: UpdateShiftAssignmentRequest = {\n        shiftId: assignment.shiftId,\n        assignmentType: assignment.assignmentType,\n        employeeId: assignment.employeeId,\n        departmentId: assignment.departmentId,\n        branchId: assignment.branchId,\n        effectiveDate: assignment.effectiveDate,\n        endDate: assignment.endDate,\n        status: assignment.status,\n        priority: assignment.priority,\n        notes: assignment.notes\n      };\n\n      this.shiftAssignmentService.updateShiftAssignment(assignment.id, updateRequest).subscribe({\n        next: () => {\n          console.log('Assignment updated successfully');\n          this.closeEditModal();\n          this.loadAssignments();\n        },\n        error: (error) => {\n          console.error('Error updating assignment:', error);\n        }\n      });\n    }\n  }\n\n  // Delete assignment method\n  deleteAssignment(assignment: ShiftAssignment): void {\n    if (confirm(this.i18n.t('shifts.assignments.confirmDelete'))) {\n      this.shiftAssignmentService.deleteShiftAssignment(assignment.id).subscribe({\n        next: () => {\n          console.log('Assignment deleted successfully');\n          this.loadAssignments();\n        },\n        error: (error) => {\n          console.error('Error deleting assignment:', error);\n        }\n      });\n    }\n  }\n\n  // Utility methods\n  getStatusBadgeClass(status: ShiftAssignmentStatus): string {\n    return this.shiftAssignmentService.getStatusBadgeClass(status);\n  }\n\n  formatDate(dateString: string): string {\n    return this.shiftAssignmentService.formatDate(dateString);\n  }\n\n  isCurrentlyActive(assignment: ShiftAssignment): boolean {\n    return this.shiftAssignmentService.isCurrentlyActive(assignment);\n  }\n\n  getAssignmentTypeDisplay(type: ShiftAssignmentType): string {\n    return this.shiftAssignmentService.getAssignmentTypeDisplay(type);\n  }\n\n  getStatusDisplay(status: ShiftAssignmentStatus): string {\n    return this.shiftAssignmentService.getStatusDisplay(status);\n  }\n\n  // Form update methods\n  updateCreateForm<K extends keyof CreateShiftAssignmentRequest>(field: K, value: CreateShiftAssignmentRequest[K]): void {\n    this.createForm.update(form => ({ ...form, [field]: value }));\n  }\n\n  onAssignmentTypeChanged(type: ShiftAssignmentType): void {\n    this.updateCreateForm('assignmentType', type);\n    // Clear other target fields\n    this.updateCreateForm('employeeId', undefined);\n    this.updateCreateForm('departmentId', undefined);\n    this.updateCreateForm('branchId', undefined);\n  }\n\n  // Searchable select options\n  get shiftSelectOptions(): SearchableSelectOption[] {\n    const options: SearchableSelectOption[] = [\n      { value: '0', label: this.i18n.t('common.select') }\n    ];\n\n    this.availableShifts().forEach(shift => {\n      let subLabel = '';\n      if (shift.shiftPeriods && shift.shiftPeriods.length > 0) {\n        const firstPeriod = shift.shiftPeriods[0];\n        subLabel = `${firstPeriod.startTime} - ${firstPeriod.endTime}`;\n      }\n      options.push({\n        value: shift.id.toString(),\n        label: shift.name,\n        subLabel: subLabel\n      });\n    });\n\n    return options;\n  }\n\n  get assignmentTypeSelectOptions(): SearchableSelectOption[] {\n    return this.assignmentOptions().assignmentTypes.map(type => ({\n      value: type.value.toString(),\n      label: type.label\n    }));\n  }\n\n  get assignmentTypeFilterOptions(): SearchableSelectOption[] {\n    const options: SearchableSelectOption[] = [\n      { value: '', label: this.i18n.t('common.all') }\n    ];\n    return options.concat(this.assignmentTypeSelectOptions);\n  }\n\n  get statusFilterOptions(): SearchableSelectOption[] {\n    const options: SearchableSelectOption[] = [\n      { value: '', label: this.i18n.t('common.all') }\n    ];\n    return options.concat(this.statusSelectOptions);\n  }\n\n  get branchSelectOptions(): SearchableSelectOption[] {\n    const options: SearchableSelectOption[] = [\n      { value: '', label: this.i18n.t('common.select') }\n    ];\n\n    this.availableBranches().forEach(branch => {\n      options.push({\n        value: branch.id.toString(),\n        label: branch.name,\n        subLabel: branch.code\n      });\n    });\n\n    return options;\n  }\n\n  get employeeSelectOptions(): SearchableSelectOption[] {\n    const options: SearchableSelectOption[] = [\n      { value: '', label: this.i18n.t('common.select') }\n    ];\n\n    this.availableEmployees().forEach(employee => {\n      options.push({\n        value: employee.id.toString(),\n        label: employee.name,\n        subLabel: employee.employeeNumber\n      });\n    });\n\n    return options;\n  }\n\n  get departmentSelectOptions(): SearchableSelectOption[] {\n    const options: SearchableSelectOption[] = [\n      { value: '', label: this.i18n.t('common.select') }\n    ];\n\n    this.availableDepartments().forEach(department => {\n      options.push({\n        value: department.id.toString(),\n        label: department.name,\n        subLabel: department.code\n      });\n    });\n\n    return options;\n  }\n\n  get statusSelectOptions(): SearchableSelectOption[] {\n    return this.assignmentOptions().statuses.map(status => ({\n      value: status.value.toString(),\n      label: status.label\n    }));\n  }\n\n  get shiftFilterOptions(): SearchableSelectOption[] {\n    const options: SearchableSelectOption[] = [\n      { value: '', label: this.i18n.t('common.all') }\n    ];\n    return options.concat(this.shiftSelectOptions.filter(option => option.value !== '0'));\n  }\n\n  // Selection change handlers\n  onShiftSelectionChange(shiftIdStr: string) {\n    const shiftId = shiftIdStr ? parseInt(shiftIdStr) : 0;\n    this.updateCreateForm('shiftId', shiftId);\n  }\n\n  onAssignmentTypeSelectionChange(typeStr: string) {\n    const type = typeStr ? parseInt(typeStr) : ShiftAssignmentType.Employee;\n    this.onAssignmentTypeChanged(type);\n  }\n\n  onBranchSelectionChange(branchIdStr: string) {\n    const branchId = branchIdStr ? parseInt(branchIdStr) : undefined;\n    this.updateCreateForm('branchId', branchId);\n\n    // Reload employees and departments when branch changes\n    this.loadEmployees(branchId);\n    this.loadDepartments(branchId);\n\n    // Clear selected employee and department when branch changes\n    this.updateCreateForm('employeeId', undefined);\n    this.updateCreateForm('departmentId', undefined);\n  }\n\n  onEmployeeSelectionChange(employeeIdStr: string) {\n    const employeeId = employeeIdStr ? parseInt(employeeIdStr) : undefined;\n    this.updateCreateForm('employeeId', employeeId);\n  }\n\n  onDepartmentSelectionChange(departmentIdStr: string) {\n    const departmentId = departmentIdStr ? parseInt(departmentIdStr) : undefined;\n    this.updateCreateForm('departmentId', departmentId);\n  }\n\n  onStatusSelectionChange(statusStr: string) {\n    const status = statusStr ? parseInt(statusStr) : ShiftAssignmentStatus.Active;\n    this.updateCreateForm('status', status);\n  }\n}", "<div class=\"container-fluid\">\n  <!-- Page Header -->\n  <app-page-header\n    [title]=\"i18n.t('shifts.assignments.title')\">\n  </app-page-header>\n\n  <!-- Unified Filter Component -->\n  <app-unified-filter\n    moduleName=\"shift-assignments\"\n    [refreshing]=\"loading()\"\n    (searchChange)=\"onSearchTermChange($event)\"\n    (filtersChange)=\"onFiltersChange($event)\"\n    (add)=\"openCreateModal()\"\n    (refresh)=\"onRefreshData()\">\n  </app-unified-filter>\n\n  <!-- Assignments Table -->\n  <div class=\"card\">\n    <div class=\"card-body\">\n      <!-- Loading State -->\n      @if (loading()) {\n      <div class=\"text-center py-4\">\n        <div class=\"spinner-border text-primary\" role=\"status\">\n          <span class=\"visually-hidden\">{{ i18n.t('common.loading') }}</span>\n        </div>\n      </div>\n      }\n\n      <!-- Error State -->\n      @if (error()) {\n      <div class=\"alert alert-danger\">\n        {{ error() }}\n      </div>\n      }\n\n      <!-- Table -->\n      @if (!loading() && !error()) {\n      <div class=\"table-responsive\">\n        <table class=\"table table-hover\">\n          <thead>\n            <tr>\n              <th>{{ i18n.t('shifts.shift') }}</th>\n              <th>{{ i18n.t('shifts.assignments.assignmentType') }}</th>\n              <th>{{ i18n.t('shifts.assignments.target') }}</th>\n              <th>{{ i18n.t('shifts.assignments.effectiveDate') }}</th>\n              <th>{{ i18n.t('shifts.assignments.endDate') }}</th>\n              <th>{{ i18n.t('common.status') }}</th>\n              <th>{{ i18n.t('shifts.assignments.priority') }}</th>\n              @if (PERMISSIONS.SHIFT_ASSIGNMENT_MANAGE) {\n              <th>{{ i18n.t('common.actions') }}</th>\n              }\n            </tr>\n          </thead>\n          <tbody>\n            @for (assignment of assignments(); track assignment.id) {\n            <tr [class.table-success]=\"isCurrentlyActive(assignment)\">\n              <td>\n                <div>\n                  <strong>{{ assignment.shiftName }}</strong>\n                  <small class=\"text-muted d-block\">{{ assignment.shiftType }}</small>\n                </div>\n              </td>\n              <td>\n                <span class=\"badge bg-info\">{{ assignment.assignmentTypeDisplay }}</span>\n              </td>\n              <td>\n                <div>\n                  <strong>{{ assignment.targetDisplayName }}</strong>\n                  @if (assignment.employeeNumber) {\n                  <small class=\"text-muted d-block\">\n                    {{ i18n.t('employees.employeeNumber') }}: {{ assignment.employeeNumber }}\n                  </small>\n                  }\n                  @if (assignment.branchCode) {\n                  <small class=\"text-muted d-block\">\n                    {{ i18n.t('branches.code') }}: {{ assignment.branchCode }}\n                  </small>\n                  }\n                </div>\n              </td>\n              <td>{{ formatDate(assignment.effectiveDate) }}</td>\n              <td>\n                @if (assignment.endDate) {\n                <span>{{ formatDate(assignment.endDate) }}</span>\n                }\n                @if (!assignment.endDate) {\n                <span class=\"text-muted\">{{ i18n.t('common.indefinite') }}</span>\n                }\n              </td>\n              <td>\n                <span class=\"badge\" [ngClass]=\"getStatusBadgeClass(assignment.status)\">\n                  {{ assignment.statusDisplay }}\n                </span>\n              </td>\n              <td>\n                <span class=\"badge bg-info\">{{ assignment.priority }}</span>\n              </td>\n              @if (PERMISSIONS.SHIFT_ASSIGNMENT_MANAGE) {\n              <td>\n                <div class=\"btn-group btn-group-sm\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-primary\"\n                    (click)=\"editAssignment(assignment)\"\n                    [title]=\"i18n.t('common.edit')\">\n                    <i class=\"fas fa-edit\"></i>\n                  </button>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-outline-danger\"\n                    (click)=\"deleteAssignment(assignment)\"\n                    [title]=\"i18n.t('common.delete')\">\n                    <i class=\"fas fa-trash\"></i>\n                  </button>\n                </div>\n              </td>\n              }\n            </tr>\n            }\n            @if (assignments().length === 0) {\n            <tr>\n              <td [attr.colspan]=\"8\" class=\"text-center py-4 text-muted\">\n                {{ i18n.t('shifts.assignments.noAssignments') }}\n              </td>\n            </tr>\n            }\n          </tbody>\n        </table>\n      </div>\n      }\n\n      <!-- Pagination -->\n      @if (totalPages() > 1) {\n      <nav class=\"mt-4\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n          <div>\n            <span class=\"text-muted\">\n              {{ i18n.t('common.showing') }}\n              {{ (currentPage() - 1) * pageSize() + 1 }}\n              {{ i18n.t('common.to') }}\n              {{ Math.min(currentPage() * pageSize(), totalCount()) }}\n              {{ i18n.t('common.of') }}\n              {{ totalCount() }}\n              {{ i18n.t('common.entries') }}\n            </span>\n          </div>\n          <ul class=\"pagination pagination-sm mb-0\">\n            <li class=\"page-item\" [class.disabled]=\"currentPage() === 1\">\n              <a class=\"page-link\" (click)=\"onPageChanged(currentPage() - 1)\">\n                {{ i18n.t('common.previous') }}\n              </a>\n            </li>\n            @for (page of [].constructor(totalPages()); track i; let i = $index) {\n            <li class=\"page-item\"\n                [class.active]=\"currentPage() === i + 1\">\n              <a class=\"page-link\" (click)=\"onPageChanged(i + 1)\">{{ i + 1 }}</a>\n            </li>\n            }\n            <li class=\"page-item\" [class.disabled]=\"currentPage() === totalPages()\">\n              <a class=\"page-link\" (click)=\"onPageChanged(currentPage() + 1)\">\n                {{ i18n.t('common.next') }}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n      }\n    </div>\n  </div>\n</div>\n\n<!-- Create Assignment Modal -->\n<app-modal-wrapper\n  [show]=\"showCreateModal()\"\n  [title]=\"i18n.t('shifts.assignments.createTitle')\"\n  [size]=\"'lg'\"\n  [centered]=\"true\"\n  (close)=\"closeCreateModal()\">\n\n  <div class=\"modal-body\">\n    <form>\n          <div class=\"row g-3\">\n            <!-- Shift Selection -->\n            <div class=\"col-md-6\">\n              <label class=\"form-label\">{{ i18n.t('shifts.shift') }} <span class=\"text-danger\">*</span></label>\n              <app-searchable-select\n                [options]=\"shiftSelectOptions\"\n                [ngModel]=\"createForm().shiftId.toString()\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (selectionChange)=\"onShiftSelectionChange($event)\"\n                [placeholder]=\"i18n.t('common.select')\"\n                [searchable]=\"true\"\n                [clearable]=\"false\"\n              ></app-searchable-select>\n            </div>\n\n            <!-- Assignment Type -->\n            <div class=\"col-md-6\">\n              <label class=\"form-label\">{{ i18n.t('shifts.assignments.assignmentType') }} <span class=\"text-danger\">*</span></label>\n              <app-searchable-select\n                [options]=\"assignmentTypeSelectOptions\"\n                [ngModel]=\"createForm().assignmentType.toString()\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (selectionChange)=\"onAssignmentTypeSelectionChange($event)\"\n                [searchable]=\"false\"\n                [clearable]=\"false\"\n              ></app-searchable-select>\n            </div>\n\n            <!-- Employee Selection (if Employee type) -->\n            @if (createForm().assignmentType === ShiftAssignmentType.Employee) {\n            <div class=\"col-md-6\">\n              <label class=\"form-label\">{{ i18n.t('employees.employee') }} <span class=\"text-danger\">*</span></label>\n              <app-searchable-select\n                [options]=\"employeeSelectOptions\"\n                [ngModel]=\"createForm().employeeId?.toString() || ''\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (selectionChange)=\"onEmployeeSelectionChange($event)\"\n                [placeholder]=\"i18n.t('common.select')\"\n                [searchable]=\"true\"\n                [clearable]=\"false\"\n              ></app-searchable-select>\n            </div>\n            }\n\n            <!-- Department Selection (if Department type) -->\n            @if (createForm().assignmentType === ShiftAssignmentType.Department) {\n            <div class=\"col-md-6\">\n              <label class=\"form-label\">{{ i18n.t('departments.department') }} <span class=\"text-danger\">*</span></label>\n              <app-searchable-select\n                [options]=\"departmentSelectOptions\"\n                [ngModel]=\"createForm().departmentId?.toString() || ''\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (selectionChange)=\"onDepartmentSelectionChange($event)\"\n                [placeholder]=\"i18n.t('common.select')\"\n                [searchable]=\"true\"\n                [clearable]=\"false\"\n              ></app-searchable-select>\n            </div>\n            }\n\n            <!-- Branch Selection (if Branch type) -->\n            @if (createForm().assignmentType === ShiftAssignmentType.Branch) {\n            <div class=\"col-md-6\">\n              <label class=\"form-label\">{{ i18n.t('branches.branch') }} <span class=\"text-danger\">*</span></label>\n              <app-searchable-select\n                [options]=\"branchSelectOptions\"\n                [ngModel]=\"createForm().branchId?.toString() || ''\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (selectionChange)=\"onBranchSelectionChange($event)\"\n                [placeholder]=\"i18n.t('common.select')\"\n                [searchable]=\"true\"\n                [clearable]=\"false\"\n              ></app-searchable-select>\n            </div>\n            }\n\n            <!-- Effective Date -->\n            <div class=\"col-md-6\">\n              <label class=\"form-label\">{{ i18n.t('shifts.assignments.effectiveDate') }} <span class=\"text-danger\">*</span></label>\n              <input\n                type=\"date\"\n                class=\"form-control\"\n                name=\"effectiveDate\"\n                [ngModel]=\"createForm().effectiveDate\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (ngModelChange)=\"updateCreateForm('effectiveDate', $event)\"\n                required>\n            </div>\n\n            <!-- End Date -->\n            <div class=\"col-md-6\">\n              <label class=\"form-label\">{{ i18n.t('shifts.assignments.endDate') }}</label>\n              <input\n                type=\"date\"\n                class=\"form-control\"\n                name=\"endDate\"\n                [ngModel]=\"createForm().endDate\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (ngModelChange)=\"updateCreateForm('endDate', $event)\">\n            </div>\n\n            <!-- Status -->\n            <div class=\"col-md-6\">\n              <label class=\"form-label\">{{ i18n.t('common.status') }}</label>\n              <app-searchable-select\n                [options]=\"statusSelectOptions\"\n                [ngModel]=\"createForm().status?.toString() || ''\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (selectionChange)=\"onStatusSelectionChange($event)\"\n                [searchable]=\"false\"\n                [clearable]=\"false\"\n              ></app-searchable-select>\n            </div>\n\n            <!-- Priority -->\n            <div class=\"col-md-6\">\n              <label class=\"form-label\">{{ i18n.t('shifts.assignments.priority') }}</label>\n              <input\n                type=\"number\"\n                class=\"form-control\"\n                name=\"priority\"\n                min=\"0\"\n                max=\"100\"\n                [ngModel]=\"createForm().priority\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (ngModelChange)=\"updateCreateForm('priority', +$event)\">\n            </div>\n\n            <!-- Notes -->\n            <div class=\"col-12\">\n              <label class=\"form-label\">{{ i18n.t('common.notes') }}</label>\n              <textarea\n                class=\"form-control\"\n                name=\"notes\"\n                rows=\"3\"\n                [ngModel]=\"createForm().notes\"\n                [ngModelOptions]=\"{standalone: true}\"\n                (ngModelChange)=\"updateCreateForm('notes', $event)\"\n                [placeholder]=\"i18n.t('shifts.assignments.notesPlaceholder')\"></textarea>\n            </div>\n          </div>\n    </form>\n  </div>\n\n  <div modal-footer class=\"d-flex gap-2 justify-content-end\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeCreateModal()\">\n      {{ i18n.t('common.cancel') }}\n    </button>\n    <button\n      type=\"button\"\n      class=\"btn btn-primary\"\n      (click)=\"createAssignment()\"\n      [disabled]=\"!isCreateFormValid()\">\n      {{ i18n.t('common.create') }}\n    </button>\n  </div>\n\n</app-modal-wrapper>"],
  "mappings": "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",
  "names": []
}
