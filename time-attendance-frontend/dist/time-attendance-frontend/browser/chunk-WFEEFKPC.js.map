{
  "version": 3,
  "sources": ["src/app/pages/users/edit-user-page/edit-user-page.component.ts"],
  "sourcesContent": ["import { Component, OnInit, signal, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { UserFormComponent } from '../user-form/user-form.component';\nimport { UsersService } from '../users.service';\nimport { UserDto } from '../../../shared/models/user.model';\nimport { I18nService } from '../../../core/i18n/i18n.service';\n\n@Component({\n  selector: 'app-edit-user-page',\n  standalone: true,\n  imports: [CommonModule, RouterModule, UserFormComponent],\n  template: `\n    @if (loading()) {\n      <div class=\"d-flex justify-content-center py-5\">\n        <div class=\"spinner-border\" role=\"status\">\n          <span class=\"visually-hidden\">{{ i18n.t('common.loading') }}</span>\n        </div>\n      </div>\n    } @else if (user()) {\n      @if (isSystemAdmin(user()!)) {\n        <div class=\"container-fluid\">\n          <div class=\"alert alert-warning\">\n            <i class=\"fa-solid fa-shield-alt me-2\"></i>\n            {{ i18n.t('users.system_admin_cannot_be_edited') }}\n          </div>\n          <div class=\"d-flex justify-content-start\">\n            <button type=\"button\" class=\"btn btn-outline-secondary\" routerLink=\"/users\">\n              <i class=\"fa-solid fa-arrow-left me-2\"></i>\n              {{ i18n.t('common.back') }}\n            </button>\n          </div>\n        </div>\n      } @else {\n        <app-user-form \n          [user]=\"user()\" \n          [show]=\"true\"\n          (userSaved)=\"onUserSaved($event)\">\n        </app-user-form>\n      }\n    } @else {\n      <div class=\"alert alert-danger\">\n        <i class=\"fa-solid fa-exclamation-triangle me-2\"></i>\n        {{ error() || i18n.t('users.user_not_found') }}\n      </div>\n    }\n  `\n})\nexport class EditUserPageComponent implements OnInit {\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private usersService = inject(UsersService);\n  public i18n = inject(I18nService);\n\n  user = signal<UserDto | null>(null);\n  loading = signal(true);\n  error = signal('');\n\n  ngOnInit(): void {\n    const userId = this.route.snapshot.paramMap.get('id');\n    if (userId) {\n      this.loadUser(userId);\n    } else {\n      this.error.set('Invalid user ID');\n      this.loading.set(false);\n    }\n  }\n\n  isSystemAdmin(user: UserDto): boolean {\n    return user.username.toLowerCase() === 'systemadmin';\n  }\n\n  loadUser(userId: string): void {\n    this.usersService.getUserById(+userId).subscribe({\n      next: (user) => {\n        this.user.set(user);\n        this.loading.set(false);\n      },\n      error: (error) => {\n        this.error.set(this.getErrorMessage(error));\n        this.loading.set(false);\n      }\n    });\n  }\n\n  onUserSaved(user: UserDto): void {\n    this.router.navigate(['/users', user.id, 'view']);\n  }\n\n  private getErrorMessage(error: any): string {\n    if (error?.error?.error) {\n      return error.error.error;\n    }\n    return this.i18n.t('errors.unknown');\n  }\n}"],
  "mappings": "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",
  "names": []
}
