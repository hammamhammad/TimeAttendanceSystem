{
  "version": 3,
  "sources": ["src/app/pages/employee-vacations/employee-vacation-table/employee-vacation-table.component.ts", "src/app/pages/employee-vacations/bulk-vacation-modal/bulk-vacation-modal.component.ts", "src/app/pages/employee-vacations/bulk-vacation-modal/bulk-vacation-modal.component.html", "src/app/pages/employee-vacations/employee-vacations.component.ts", "src/app/pages/employee-vacations/employee-vacations.component.html"],
  "sourcesContent": ["import { Component, Input, Output, EventEmitter, signal, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DataTableComponent, TableColumn, TableAction } from '../../../shared/components/data-table/data-table.component';\r\nimport { EmployeeVacation } from '../../../shared/models/employee-vacation.model';\r\nimport { I18nService } from '../../../core/i18n/i18n.service';\r\nimport { PermissionService } from '../../../core/auth/permission.service';\r\nimport { PermissionResources, PermissionActions } from '../../../shared/utils/permission.utils';\r\n\r\n@Component({\r\n  selector: 'app-employee-vacation-table',\r\n  standalone: true,\r\n  imports: [CommonModule, DataTableComponent],\r\n  template: `\r\n    <app-data-table\r\n      [data]=\"vacations\"\r\n      [columns]=\"columns\"\r\n      [actions]=\"actions\"\r\n      [loading]=\"loading\"\r\n      [currentPage]=\"currentPage\"\r\n      [totalPages]=\"totalPages\"\r\n      [totalItems]=\"totalItems\"\r\n      [pageSize]=\"pageSize\"\r\n      [emptyMessage]=\"'No vacation records found'\"\r\n      (actionClick)=\"onActionClick($event)\"\r\n      (pageChange)=\"onPageChange($event)\"\r\n      (pageSizeChange)=\"onPageSizeChange($event)\"\r\n      (selectionChange)=\"onSelectionChange($event)\"\r\n      (sortChange)=\"onSortChange($event)\">\r\n\r\n      <ng-template #cellTemplate let-vacation let-column=\"column\">\r\n        <ng-container [ngSwitch]=\"column.key\">\r\n          <!-- Employee name with avatar -->\r\n          <div *ngSwitchCase=\"'employee'\" class=\"d-flex align-items-center\">\r\n            <div class=\"avatar-sm me-2\">\r\n              <div class=\"avatar-initial bg-primary text-white rounded-circle\">\r\n                {{ getInitials(vacation.employeeName) }}\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div class=\"fw-medium\">{{ vacation.employeeName }}</div>\r\n              <small class=\"text-muted\">{{ vacation.employeeNumber }}</small>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Vacation Type -->\r\n          <span *ngSwitchCase=\"'vacationType'\" class=\"fw-medium\">\r\n            {{ vacation.vacationTypeName }}\r\n          </span>\r\n\r\n          <!-- Start Date -->\r\n          <span *ngSwitchCase=\"'startDate'\">\r\n            {{ formatDate(vacation.startDate) }}\r\n          </span>\r\n\r\n          <!-- End Date -->\r\n          <span *ngSwitchCase=\"'endDate'\">\r\n            {{ formatDate(vacation.endDate) }}\r\n          </span>\r\n\r\n          <!-- Total Days -->\r\n          <span *ngSwitchCase=\"'totalDays'\" class=\"badge bg-secondary\">\r\n            {{ vacation.totalDays }}\r\n            {{ vacation.totalDays === 1 ? 'day' : 'days' }}\r\n          </span>\r\n\r\n          <!-- Approval Status -->\r\n          <span *ngSwitchCase=\"'status'\"\r\n                class=\"badge\"\r\n                [class.bg-success]=\"vacation.isApproved\"\r\n                [class.bg-warning]=\"!vacation.isApproved\">\r\n            <i class=\"fas\"\r\n               [class.fa-check-circle]=\"vacation.isApproved\"\r\n               [class.fa-clock]=\"!vacation.isApproved\"></i>\r\n            {{ vacation.isApproved ? 'Approved' : 'Pending' }}\r\n          </span>\r\n\r\n          <!-- Current Status -->\r\n          <span *ngSwitchCase=\"'currentStatus'\" class=\"badge\"\r\n                [class]=\"getCurrentStatusClass(vacation)\">\r\n            {{ getCurrentStatusLabel(vacation) }}\r\n          </span>\r\n\r\n          <!-- Notes -->\r\n          <div *ngSwitchCase=\"'notes'\">\r\n            <span *ngIf=\"vacation.notes\">{{ vacation.notes }}</span>\r\n            <span *ngIf=\"!vacation.notes\" class=\"text-muted\">-</span>\r\n          </div>\r\n        </ng-container>\r\n      </ng-template>\r\n    </app-data-table>\r\n  `,\r\n  styles: [`\r\n    .avatar-sm {\r\n      width: 2rem;\r\n      height: 2rem;\r\n    }\r\n\r\n    .avatar-initial {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      width: 100%;\r\n      height: 100%;\r\n      font-size: 0.875rem;\r\n      font-weight: 600;\r\n    }\r\n  `]\r\n})\r\nexport class EmployeeVacationTableComponent {\r\n  private i18n = inject(I18nService);\r\n  private permissionService = inject(PermissionService);\r\n\r\n  @Input() vacations: EmployeeVacation[] = [];\r\n  @Input() loading: any;\r\n  @Input() currentPage: any;\r\n  @Input() totalPages: any;\r\n  @Input() totalItems: any;\r\n  @Input() pageSize: any;\r\n\r\n  @Output() viewVacation = new EventEmitter<EmployeeVacation>();\r\n  @Output() editVacation = new EventEmitter<EmployeeVacation>();\r\n  @Output() deleteVacation = new EventEmitter<EmployeeVacation>();\r\n  @Output() toggleStatus = new EventEmitter<EmployeeVacation>();\r\n  @Output() pageChange = new EventEmitter<number>();\r\n  @Output() pageSizeChange = new EventEmitter<number>();\r\n  @Output() selectionChange = new EventEmitter<EmployeeVacation[]>();\r\n  @Output() sortChange = new EventEmitter<{column: string, direction: 'asc' | 'desc'}>();\r\n\r\n  columns: TableColumn[] = [\r\n    {\r\n      key: 'employee',\r\n      label: 'Employee',\r\n      width: '200px',\r\n      sortable: true,\r\n      priority: 'high',\r\n      mobileLabel: 'Employee'\r\n    },\r\n    {\r\n      key: 'vacationType',\r\n      label: 'Vacation Type',\r\n      width: '150px',\r\n      sortable: true,\r\n      priority: 'high',\r\n      mobileLabel: 'Type'\r\n    },\r\n    {\r\n      key: 'startDate',\r\n      label: 'Start Date',\r\n      width: '120px',\r\n      sortable: true,\r\n      priority: 'medium',\r\n      hideOnMobile: false,\r\n      mobileLabel: 'Start'\r\n    },\r\n    {\r\n      key: 'endDate',\r\n      label: 'End Date',\r\n      width: '120px',\r\n      sortable: true,\r\n      priority: 'medium',\r\n      hideOnMobile: false,\r\n      mobileLabel: 'End'\r\n    },\r\n    {\r\n      key: 'totalDays',\r\n      label: 'Total Days',\r\n      width: '100px',\r\n      align: 'center',\r\n      sortable: true,\r\n      priority: 'medium',\r\n      hideOnMobile: true,\r\n      mobileLabel: 'Days'\r\n    },\r\n    {\r\n      key: 'status',\r\n      label: 'Status',\r\n      width: '100px',\r\n      align: 'center',\r\n      sortable: true,\r\n      priority: 'high',\r\n      mobileLabel: 'Status'\r\n    },\r\n    {\r\n      key: 'currentStatus',\r\n      label: 'Current Status',\r\n      width: '120px',\r\n      align: 'center',\r\n      priority: 'medium',\r\n      hideOnMobile: true,\r\n      mobileLabel: 'Current'\r\n    },\r\n    {\r\n      key: 'notes',\r\n      label: 'Notes',\r\n      width: '150px',\r\n      priority: 'low',\r\n      hideOnMobile: true,\r\n      mobileLabel: 'Notes'\r\n    }\r\n  ];\r\n\r\n  get actions(): TableAction[] {\r\n    const actions: TableAction[] = [];\r\n\r\n    if (this.permissionService.has(`${PermissionResources.VACATION}.${PermissionActions.READ}`)) {\r\n      actions.push({\r\n        key: 'view',\r\n        label: 'View',\r\n        icon: 'fa-eye',\r\n        color: 'info'\r\n      });\r\n    }\r\n\r\n    if (this.permissionService.has(`${PermissionResources.VACATION}.${PermissionActions.UPDATE}`)) {\r\n      actions.push({\r\n        key: 'edit',\r\n        label: 'Edit',\r\n        icon: 'fa-edit',\r\n        color: 'primary'\r\n      });\r\n\r\n      actions.push({\r\n        key: 'toggleStatus',\r\n        label: 'Toggle Status',\r\n        icon: 'fa-toggle-on',\r\n        color: 'warning'\r\n      });\r\n    }\r\n\r\n    if (this.permissionService.has(`${PermissionResources.VACATION}.${PermissionActions.DELETE}`)) {\r\n      actions.push({\r\n        key: 'delete',\r\n        label: 'Delete',\r\n        icon: 'fa-trash',\r\n        color: 'danger'\r\n      });\r\n    }\r\n\r\n    return actions;\r\n  }\r\n\r\n  onActionClick(event: {action: string, item: EmployeeVacation}) {\r\n    const { action, item } = event;\r\n\r\n    switch (action) {\r\n      case 'view':\r\n        this.viewVacation.emit(item);\r\n        break;\r\n      case 'edit':\r\n        this.editVacation.emit(item);\r\n        break;\r\n      case 'delete':\r\n        this.deleteVacation.emit(item);\r\n        break;\r\n      case 'toggleStatus':\r\n        this.toggleStatus.emit(item);\r\n        break;\r\n    }\r\n  }\r\n\r\n  onPageChange(page: number) {\r\n    this.pageChange.emit(page);\r\n  }\r\n\r\n  onPageSizeChange(size: number) {\r\n    this.pageSizeChange.emit(size);\r\n  }\r\n\r\n  onSelectionChange(selectedVacations: EmployeeVacation[]) {\r\n    this.selectionChange.emit(selectedVacations);\r\n  }\r\n\r\n  onSortChange(sortEvent: {column: string, direction: 'asc' | 'desc'}) {\r\n    this.sortChange.emit(sortEvent);\r\n  }\r\n\r\n  getInitials(fullName: string): string {\r\n    if (!fullName) return '';\r\n    const nameParts = fullName.trim().split(' ');\r\n    if (nameParts.length >= 2) {\r\n      return nameParts[0].charAt(0).toUpperCase() + nameParts[nameParts.length - 1].charAt(0).toUpperCase();\r\n    }\r\n    return fullName.charAt(0).toUpperCase();\r\n  }\r\n\r\n  getCurrentStatusLabel(vacation: EmployeeVacation): string {\r\n    if (vacation.isCurrentlyActive) {\r\n      return 'Active';\r\n    } else if (vacation.isUpcoming) {\r\n      return 'Upcoming';\r\n    } else if (this.isVacationPeriodActive(vacation) && !vacation.isApproved) {\r\n      return 'Pending';\r\n    } else {\r\n      return 'Past';\r\n    }\r\n  }\r\n\r\n  getCurrentStatusClass(vacation: EmployeeVacation): string {\r\n    if (vacation.isCurrentlyActive) {\r\n      return 'bg-success';\r\n    } else if (vacation.isUpcoming) {\r\n      return 'bg-info';\r\n    } else if (this.isVacationPeriodActive(vacation) && !vacation.isApproved) {\r\n      return 'bg-warning';\r\n    } else {\r\n      return 'bg-light text-dark border';\r\n    }\r\n  }\r\n\r\n  private isVacationPeriodActive(vacation: EmployeeVacation): boolean {\r\n    const today = new Date();\r\n    const startDate = new Date(vacation.startDate);\r\n    const endDate = new Date(vacation.endDate);\r\n\r\n    // Set time to beginning of day for accurate comparison\r\n    today.setHours(0, 0, 0, 0);\r\n    startDate.setHours(0, 0, 0, 0);\r\n    endDate.setHours(0, 0, 0, 0);\r\n\r\n    return startDate <= today && endDate >= today;\r\n  }\r\n\r\n  formatDate(date: Date): string {\r\n    if (!date) return '';\r\n    const d = new Date(date);\r\n    return d.toLocaleDateString();\r\n  }\r\n}", "import { Component, Output, EventEmitter, signal, inject, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { I18nService } from '../../../core/i18n/i18n.service';\r\nimport { NotificationService } from '../../../core/notifications/notification.service';\r\nimport { EmployeeVacationsService } from '../employee-vacations.service';\r\nimport { ModalWrapperComponent } from '../../../shared/components/modal-wrapper/modal-wrapper.component';\r\n\r\nexport interface BulkVacationRequest {\r\n  vacationTypeId: number;\r\n  startDate: string;\r\n  endDate: string;\r\n  assignmentType: BulkAssignmentType;\r\n  branchId?: number;\r\n  departmentId?: number;\r\n  isApproved: boolean;\r\n  notes?: string;\r\n}\r\n\r\nexport interface BulkVacationResult {\r\n  totalEligibleEmployees: number;\r\n  vacationsCreated: number;\r\n  employeesSkipped: number;\r\n  skippedEmployees: Array<{\r\n    employeeId: number;\r\n    employeeName: string;\r\n    employeeNumber: string;\r\n    reason: string;\r\n  }>;\r\n  isCompleteSuccess: boolean;\r\n  summary: string;\r\n}\r\n\r\nexport enum BulkAssignmentType {\r\n  Branch = 1,\r\n  Department = 2\r\n}\r\n\r\n@Component({\r\n  selector: 'app-bulk-vacation-modal',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, ModalWrapperComponent],\r\n  templateUrl: './bulk-vacation-modal.component.html',\r\n  styleUrls: ['./bulk-vacation-modal.component.css']\r\n})\r\nexport class BulkVacationModalComponent implements OnInit {\r\n  private fb = inject(FormBuilder);\r\n  private notificationService = inject(NotificationService);\r\n  private employeeVacationsService = inject(EmployeeVacationsService);\r\n  public i18n = inject(I18nService);\r\n\r\n  @Output() modalClose = new EventEmitter<void>();\r\n  @Output() bulkVacationCreated = new EventEmitter<void>();\r\n\r\n  // Modal state\r\n  isVisible = signal(false);\r\n  loading = signal(false);\r\n  submitting = signal(false);\r\n\r\n  // Form\r\n  bulkVacationForm: FormGroup;\r\n\r\n  // Available options\r\n  vacationTypes = signal<Array<{id: number, name: string}>>([]);\r\n  branches = signal<Array<{id: number, name: string}>>([]);\r\n  departments = signal<Array<{id: number, name: string}>>([]);\r\n\r\n  // Preview data\r\n  previewEmployeeCount = signal<number | null>(null);\r\n  loadingPreview = signal(false);\r\n\r\n  // Assignment types for template\r\n  readonly BulkAssignmentType = BulkAssignmentType;\r\n\r\n  constructor() {\r\n    this.bulkVacationForm = this.createForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadVacationTypes();\r\n    this.loadBranches();\r\n    this.loadDepartments();\r\n  }\r\n\r\n  /**\r\n   * Create reactive form\r\n   */\r\n  private createForm(): FormGroup {\r\n    return this.fb.group({\r\n      vacationTypeId: [null, [Validators.required]],\r\n      startDate: ['', [Validators.required]],\r\n      endDate: ['', [Validators.required]],\r\n      assignmentType: [BulkAssignmentType.Branch, [Validators.required]],\r\n      branchId: [null],\r\n      departmentId: [null],\r\n      isApproved: [true],\r\n      notes: ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load vacation types for dropdown\r\n   */\r\n  private loadVacationTypes(): void {\r\n    this.employeeVacationsService.getVacationTypes().subscribe({\r\n      next: (vacationTypes) => {\r\n        this.vacationTypes.set(vacationTypes);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load vacation types:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load branches for dropdown\r\n   */\r\n  private loadBranches(): void {\r\n    this.employeeVacationsService.getBranches().subscribe({\r\n      next: (branches) => {\r\n        this.branches.set(branches);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load branches:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load departments for dropdown\r\n   */\r\n  private loadDepartments(): void {\r\n    this.employeeVacationsService.getDepartments().subscribe({\r\n      next: (departments) => {\r\n        this.departments.set(departments);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load departments:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open modal\r\n   */\r\n  openModal(): void {\r\n    this.resetForm();\r\n    this.previewEmployeeCount.set(null);\r\n    this.isVisible.set(true);\r\n  }\r\n\r\n  /**\r\n   * Close modal\r\n   */\r\n  closeModal(): void {\r\n    this.isVisible.set(false);\r\n    this.resetForm();\r\n    this.modalClose.emit();\r\n  }\r\n\r\n  /**\r\n   * Reset form to initial state\r\n   */\r\n  private resetForm(): void {\r\n    this.bulkVacationForm.reset({\r\n      assignmentType: BulkAssignmentType.Branch,\r\n      isApproved: true\r\n    });\r\n    this.previewEmployeeCount.set(null);\r\n  }\r\n\r\n  /**\r\n   * Handle assignment type change\r\n   */\r\n  onAssignmentTypeChange(): void {\r\n    const assignmentType = this.bulkVacationForm.get('assignmentType')?.value;\r\n\r\n    // Clear both IDs and update validators\r\n    this.bulkVacationForm.patchValue({\r\n      branchId: null,\r\n      departmentId: null\r\n    });\r\n\r\n    // Update validators based on assignment type\r\n    const branchControl = this.bulkVacationForm.get('branchId');\r\n    const departmentControl = this.bulkVacationForm.get('departmentId');\r\n\r\n    if (assignmentType === BulkAssignmentType.Branch) {\r\n      branchControl?.setValidators([Validators.required]);\r\n      departmentControl?.clearValidators();\r\n    } else if (assignmentType === BulkAssignmentType.Department) {\r\n      departmentControl?.setValidators([Validators.required]);\r\n      branchControl?.clearValidators();\r\n    }\r\n\r\n    branchControl?.updateValueAndValidity();\r\n    departmentControl?.updateValueAndValidity();\r\n\r\n    // Clear preview\r\n    this.previewEmployeeCount.set(null);\r\n  }\r\n\r\n  /**\r\n   * Handle target change (branch or department)\r\n   */\r\n  onTargetChange(): void {\r\n    this.updatePreview();\r\n  }\r\n\r\n  /**\r\n   * Update employee count preview\r\n   */\r\n  private updatePreview(): void {\r\n    const formValue = this.bulkVacationForm.value;\r\n\r\n    if (!this.isValidForPreview(formValue)) {\r\n      this.previewEmployeeCount.set(null);\r\n      return;\r\n    }\r\n\r\n    this.loadingPreview.set(true);\r\n\r\n    const request = {\r\n      assignmentType: formValue.assignmentType,\r\n      branchId: formValue.assignmentType === BulkAssignmentType.Branch ? formValue.branchId : undefined,\r\n      departmentId: formValue.assignmentType === BulkAssignmentType.Department ? formValue.departmentId : undefined\r\n    };\r\n\r\n    this.employeeVacationsService.getEmployeeCountPreview(request).subscribe({\r\n      next: (count) => {\r\n        this.previewEmployeeCount.set(count);\r\n        this.loadingPreview.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load preview:', error);\r\n        this.previewEmployeeCount.set(null);\r\n        this.loadingPreview.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if form is valid for preview\r\n   */\r\n  private isValidForPreview(formValue: any): boolean {\r\n    if (formValue.assignmentType === BulkAssignmentType.Branch) {\r\n      return formValue.branchId != null;\r\n    } else if (formValue.assignmentType === BulkAssignmentType.Department) {\r\n      return formValue.departmentId != null;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Submit form\r\n   */\r\n  onSubmit(): void {\r\n    if (this.bulkVacationForm.invalid) {\r\n      this.markFormGroupTouched();\r\n      return;\r\n    }\r\n\r\n    this.submitting.set(true);\r\n\r\n    const formValue = this.bulkVacationForm.value;\r\n    const request: BulkVacationRequest = {\r\n      vacationTypeId: formValue.vacationTypeId,\r\n      startDate: formValue.startDate,\r\n      endDate: formValue.endDate,\r\n      assignmentType: formValue.assignmentType,\r\n      branchId: formValue.assignmentType === BulkAssignmentType.Branch ? formValue.branchId : undefined,\r\n      departmentId: formValue.assignmentType === BulkAssignmentType.Department ? formValue.departmentId : undefined,\r\n      isApproved: formValue.isApproved,\r\n      notes: formValue.notes || undefined\r\n    };\r\n\r\n    this.employeeVacationsService.createBulkVacations(request).subscribe({\r\n      next: (result) => {\r\n        this.submitting.set(false);\r\n        this.handleBulkCreationResult(result);\r\n        this.closeModal();\r\n        this.bulkVacationCreated.emit();\r\n      },\r\n      error: (error) => {\r\n        this.submitting.set(false);\r\n        const message = error.error?.message || this.i18n.t('employee_vacations.errors.bulk_create_failed');\r\n        this.notificationService.error(this.i18n.t('app.error'), message);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle bulk creation result and show appropriate notifications\r\n   */\r\n  private handleBulkCreationResult(result: BulkVacationResult): void {\r\n    if (result.isCompleteSuccess) {\r\n      this.notificationService.success(\r\n        this.i18n.t('app.success'),\r\n        this.i18n.t('employee_vacations.bulk_create_success').replace('{{count}}', result.vacationsCreated.toString())\r\n      );\r\n    } else {\r\n      // Show partial success with warning\r\n      this.notificationService.warning(\r\n        this.i18n.t('app.partial_success'),\r\n        this.i18n.t('employee_vacations.bulk_create_partial')\r\n          .replace('{{created}}', result.vacationsCreated.toString())\r\n          .replace('{{skipped}}', result.employeesSkipped.toString())\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mark all form controls as touched\r\n   */\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.bulkVacationForm.controls).forEach(key => {\r\n      const control = this.bulkVacationForm.get(key);\r\n      control?.markAsTouched();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if field has error\r\n   */\r\n  hasError(fieldName: string): boolean {\r\n    const field = this.bulkVacationForm.get(fieldName);\r\n    return !!(field && field.invalid && (field.dirty || field.touched));\r\n  }\r\n\r\n  /**\r\n   * Get field error message\r\n   */\r\n  getErrorMessage(fieldName: string): string {\r\n    const field = this.bulkVacationForm.get(fieldName);\r\n    if (field?.errors) {\r\n      if (field.errors['required']) {\r\n        return this.i18n.t('validation.required');\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Get assignment type display name\r\n   */\r\n  getAssignmentTypeName(type: BulkAssignmentType): string {\r\n    return type === BulkAssignmentType.Branch\r\n      ? this.i18n.t('employee_vacations.branch')\r\n      : this.i18n.t('employee_vacations.department');\r\n  }\r\n}", "<app-modal-wrapper\r\n  [show]=\"isVisible()\"\r\n  [title]=\"i18n.t('employee_vacations.bulk_assignment')\"\r\n  [size]=\"'lg'\"\r\n  [centered]=\"true\"\r\n  [loading]=\"submitting()\"\r\n  (close)=\"closeModal()\">\r\n\r\n  <div class=\"modal-body\">\r\n    <form [formGroup]=\"bulkVacationForm\" (ngSubmit)=\"onSubmit()\">\r\n\r\n            <!-- Assignment Type Selection -->\r\n            <div class=\"row mb-3\">\r\n              <div class=\"col-12\">\r\n                <label class=\"form-label\">{{ i18n.t('employee_vacations.assignment_type') }} *</label>\r\n                <div class=\"btn-group w-100\" role=\"group\">\r\n                  <input\r\n                    type=\"radio\"\r\n                    class=\"btn-check\"\r\n                    id=\"assignmentType-branch\"\r\n                    [value]=\"BulkAssignmentType.Branch\"\r\n                    formControlName=\"assignmentType\"\r\n                    (change)=\"onAssignmentTypeChange()\">\r\n                  <label class=\"btn btn-outline-primary\" for=\"assignmentType-branch\">\r\n                    <i class=\"fas fa-building me-2\"></i>\r\n                    {{ i18n.t('employee_vacations.branch') }}\r\n                  </label>\r\n\r\n                  <input\r\n                    type=\"radio\"\r\n                    class=\"btn-check\"\r\n                    id=\"assignmentType-department\"\r\n                    [value]=\"BulkAssignmentType.Department\"\r\n                    formControlName=\"assignmentType\"\r\n                    (change)=\"onAssignmentTypeChange()\">\r\n                  <label class=\"btn btn-outline-primary\" for=\"assignmentType-department\">\r\n                    <i class=\"fas fa-sitemap me-2\"></i>\r\n                    {{ i18n.t('employee_vacations.department') }}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Target Selection -->\r\n            <div class=\"row mb-3\">\r\n              <!-- Branch Selection -->\r\n              @if (bulkVacationForm.get('assignmentType')?.value === BulkAssignmentType.Branch) {\r\n                <div class=\"col-12\">\r\n                  <label class=\"form-label\">{{ i18n.t('employee_vacations.select_branch') }} *</label>\r\n                  <select\r\n                    class=\"form-select\"\r\n                    formControlName=\"branchId\"\r\n                    [class.is-invalid]=\"hasError('branchId')\"\r\n                    (change)=\"onTargetChange()\">\r\n                    <option value=\"\">{{ i18n.t('employee_vacations.select_branch_placeholder') }}</option>\r\n                    @for (branch of branches(); track branch.id) {\r\n                      <option [value]=\"branch.id\">{{ branch.name }}</option>\r\n                    }\r\n                  </select>\r\n                  @if (hasError('branchId')) {\r\n                    <div class=\"invalid-feedback\">\r\n                      {{ getErrorMessage('branchId') }}\r\n                    </div>\r\n                  }\r\n                </div>\r\n              }\r\n\r\n              <!-- Department Selection -->\r\n              @if (bulkVacationForm.get('assignmentType')?.value === BulkAssignmentType.Department) {\r\n                <div class=\"col-12\">\r\n                  <label class=\"form-label\">{{ i18n.t('employee_vacations.select_department') }} *</label>\r\n                  <select\r\n                    class=\"form-select\"\r\n                    formControlName=\"departmentId\"\r\n                    [class.is-invalid]=\"hasError('departmentId')\"\r\n                    (change)=\"onTargetChange()\">\r\n                    <option value=\"\">{{ i18n.t('employee_vacations.select_department_placeholder') }}</option>\r\n                    @for (department of departments(); track department.id) {\r\n                      <option [value]=\"department.id\">{{ department.name }}</option>\r\n                    }\r\n                  </select>\r\n                  @if (hasError('departmentId')) {\r\n                    <div class=\"invalid-feedback\">\r\n                      {{ getErrorMessage('departmentId') }}\r\n                    </div>\r\n                  }\r\n                </div>\r\n              }\r\n            </div>\r\n\r\n            <!-- Employee Count Preview -->\r\n            @if (previewEmployeeCount() !== null || loadingPreview()) {\r\n              <div class=\"alert alert-info mb-3\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  @if (loadingPreview()) {\r\n                    <div class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></div>\r\n                    <span>{{ i18n.t('employee_vacations.loading_preview') }}</span>\r\n                  } @else {\r\n                    <i class=\"fas fa-info-circle me-2\"></i>\r\n                    <span>\r\n                      {{ i18n.t('employee_vacations.employees_affected').replace('{{count}}', (previewEmployeeCount() || 0).toString()) }}\r\n                    </span>\r\n                  }\r\n                </div>\r\n              </div>\r\n            }\r\n\r\n            <!-- Vacation Details -->\r\n            <div class=\"row mb-3\">\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">{{ i18n.t('employee_vacations.vacation_type') }} *</label>\r\n                <select\r\n                  class=\"form-select\"\r\n                  formControlName=\"vacationTypeId\"\r\n                  [class.is-invalid]=\"hasError('vacationTypeId')\">\r\n                  <option value=\"\">{{ i18n.t('employee_vacations.select_vacation_type') }}</option>\r\n                  @for (vacationType of vacationTypes(); track vacationType.id) {\r\n                    <option [value]=\"vacationType.id\">{{ vacationType.name }}</option>\r\n                  }\r\n                </select>\r\n                @if (hasError('vacationTypeId')) {\r\n                  <div class=\"invalid-feedback\">\r\n                    {{ getErrorMessage('vacationTypeId') }}\r\n                  </div>\r\n                }\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">{{ i18n.t('employee_vacations.approval_status') }}</label>\r\n                <div class=\"form-check form-switch mt-2\">\r\n                  <input\r\n                    class=\"form-check-input\"\r\n                    type=\"checkbox\"\r\n                    id=\"isApproved\"\r\n                    formControlName=\"isApproved\">\r\n                  <label class=\"form-check-label\" for=\"isApproved\">\r\n                    {{ i18n.t('employee_vacations.auto_approve') }}\r\n                  </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Date Range -->\r\n            <div class=\"row mb-3\">\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">{{ i18n.t('employee_vacations.start_date') }} *</label>\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"startDate\"\r\n                  [class.is-invalid]=\"hasError('startDate')\">\r\n                @if (hasError('startDate')) {\r\n                  <div class=\"invalid-feedback\">\r\n                    {{ getErrorMessage('startDate') }}\r\n                  </div>\r\n                }\r\n              </div>\r\n\r\n              <div class=\"col-md-6\">\r\n                <label class=\"form-label\">{{ i18n.t('employee_vacations.end_date') }} *</label>\r\n                <input\r\n                  type=\"date\"\r\n                  class=\"form-control\"\r\n                  formControlName=\"endDate\"\r\n                  [class.is-invalid]=\"hasError('endDate')\">\r\n                @if (hasError('endDate')) {\r\n                  <div class=\"invalid-feedback\">\r\n                    {{ getErrorMessage('endDate') }}\r\n                  </div>\r\n                }\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Notes -->\r\n            <div class=\"row mb-3\">\r\n              <div class=\"col-12\">\r\n                <label class=\"form-label\">{{ i18n.t('employee_vacations.notes') }}</label>\r\n                <textarea\r\n                  class=\"form-control\"\r\n                  rows=\"3\"\r\n                  formControlName=\"notes\"\r\n                  [placeholder]=\"i18n.t('employee_vacations.notes_placeholder')\">\r\n                </textarea>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Warning Message -->\r\n            <div class=\"alert alert-warning\">\r\n              <div class=\"d-flex align-items-start\">\r\n                <i class=\"fas fa-exclamation-triangle me-2 mt-1\"></i>\r\n                <div>\r\n                  <strong>{{ i18n.t('employee_vacations.bulk_warning_title') }}</strong>\r\n                  <p class=\"mb-0 mt-1\">{{ i18n.t('employee_vacations.bulk_warning_message') }}</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n    </form>\r\n  </div>\r\n\r\n  <div modal-footer class=\"d-flex gap-2 justify-content-end\">\r\n    <button\r\n      type=\"button\"\r\n      class=\"btn btn-secondary\"\r\n      [disabled]=\"submitting()\"\r\n      (click)=\"closeModal()\">\r\n      {{ i18n.t('common.cancel') }}\r\n    </button>\r\n\r\n    <button\r\n      type=\"submit\"\r\n      class=\"btn btn-primary\"\r\n      [disabled]=\"bulkVacationForm.invalid || submitting()\"\r\n      (click)=\"onSubmit()\">\r\n      @if (submitting()) {\r\n        <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\"></span>\r\n      }\r\n      <i class=\"fas fa-plus-circle me-2\" [class.d-none]=\"submitting()\"></i>\r\n      {{ i18n.t('employee_vacations.create_bulk_vacations') }}\r\n    </button>\r\n  </div>\r\n\r\n</app-modal-wrapper>", "import { Component, signal, computed, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeeVacationsService } from './employee-vacations.service';\r\nimport { UnifiedFilterComponent } from '../../shared/components/unified-filter/unified-filter.component';\r\nimport { EmployeeVacationTableComponent } from './employee-vacation-table/employee-vacation-table.component';\r\nimport { BulkVacationModalComponent } from './bulk-vacation-modal/bulk-vacation-modal.component';\r\nimport { EmployeeVacation, VacationQueryParams } from '../../shared/models/employee-vacation.model';\r\nimport { I18nService } from '../../core/i18n/i18n.service';\r\nimport { NotificationService } from '../../core/notifications/notification.service';\r\nimport { ConfirmationService, ConfirmationConfig } from '../../core/confirmation/confirmation.service';\r\nimport { PermissionService } from '../../core/auth/permission.service';\r\nimport { PermissionResources, PermissionActions } from '../../shared/utils/permission.utils';\r\nimport { PageHeaderComponent } from '../../shared/components/page-header/page-header.component';\r\n\r\n@Component({\r\n  selector: 'app-employee-vacations',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    UnifiedFilterComponent,\r\n    EmployeeVacationTableComponent,\r\n    BulkVacationModalComponent,\r\n    PageHeaderComponent\r\n  ],\r\n  templateUrl: './employee-vacations.component.html',\r\n  styleUrls: ['./employee-vacations.component.css']\r\n})\r\nexport class EmployeeVacationsComponent {\r\n  private employeeVacationsService = inject(EmployeeVacationsService);\r\n  private notificationService = inject(NotificationService);\r\n  private confirmationService = inject(ConfirmationService);\r\n  private router = inject(Router);\r\n  readonly i18n = inject(I18nService);\r\n  readonly permissionService = inject(PermissionService);\r\n\r\n  // Signals for state management\r\n  currentPage = signal(1);\r\n  pageSize = signal(10);\r\n  currentFilters = signal<any>({});\r\n\r\n  // Service signals\r\n  vacations = this.employeeVacationsService.vacations;\r\n  loading = this.employeeVacationsService.loading;\r\n  pagedResult = this.employeeVacationsService.pagedResult;\r\n\r\n  // Computed signals\r\n  totalItems = computed(() => this.pagedResult()?.totalCount ?? 0);\r\n  totalPages = computed(() => {\r\n    const result = this.pagedResult();\r\n    if (!result || result.pageSize === 0) return 1;\r\n    return Math.ceil(result.totalCount / result.pageSize);\r\n  });\r\n\r\n  // Permission constants\r\n  readonly PERMISSIONS = {\r\n    VACATION_READ: `${PermissionResources.VACATION}.${PermissionActions.READ}`,\r\n    VACATION_CREATE: `${PermissionResources.VACATION}.${PermissionActions.CREATE}`,\r\n    VACATION_UPDATE: `${PermissionResources.VACATION}.${PermissionActions.UPDATE}`,\r\n    VACATION_DELETE: `${PermissionResources.VACATION}.${PermissionActions.DELETE}`,\r\n    VACATION_BULK_CREATE: `${PermissionResources.VACATION}.${PermissionActions.BULK_CREATE}`\r\n  };\r\n\r\n\r\n  constructor() {\r\n    this.loadVacations();\r\n  }\r\n\r\n  /**\r\n   * Load employee vacations with current filter and pagination\r\n   */\r\n  private loadVacations(): void {\r\n    if (!this.permissionService.has(this.PERMISSIONS.VACATION_READ)) {\r\n      this.notificationService.error(this.i18n.t('common.errors.insufficient_permissions'));\r\n      return;\r\n    }\r\n\r\n    const queryParams: VacationQueryParams = {\r\n      page: this.currentPage(),\r\n      pageSize: this.pageSize(),\r\n      ...this.currentFilters()\r\n    };\r\n\r\n    this.employeeVacationsService.getVacations(queryParams).subscribe({\r\n      error: (error) => {\r\n        this.notificationService.error(this.i18n.t('employee_vacations.errors.load_failed'));\r\n        console.error('Failed to load employee vacations:', error);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle search and filter changes\r\n   */\r\n  onSearchChange(searchTerm: string): void {\r\n    this.currentFilters.update(filters => ({\r\n      ...filters,\r\n      searchTerm: searchTerm || undefined\r\n    }));\r\n    this.currentPage.set(1);\r\n    this.loadVacations();\r\n  }\r\n\r\n  onFiltersChange(filters: any): void {\r\n    this.currentFilters.set(filters);\r\n    this.currentPage.set(1);\r\n    this.loadVacations();\r\n  }\r\n\r\n  onRefreshData(): void {\r\n    // Reset filters and pagination\r\n    this.currentFilters.set({});\r\n    this.currentPage.set(1);\r\n\r\n    // Reload data\r\n    this.loadVacations();\r\n  }\r\n\r\n  /**\r\n   * Handle page changes\r\n   */\r\n  onPageChange(page: number): void {\r\n    this.currentPage.set(page);\r\n    this.loadVacations();\r\n  }\r\n\r\n  onPageSizeChange(pageSize: number): void {\r\n    this.pageSize.set(pageSize);\r\n    this.currentPage.set(1);\r\n    this.loadVacations();\r\n  }\r\n\r\n  /**\r\n   * Navigate to create employee vacation page\r\n   */\r\n  onAddVacation(): void {\r\n    if (!this.permissionService.has(this.PERMISSIONS.VACATION_CREATE)) {\r\n      this.notificationService.error(this.i18n.t('common.errors.insufficient_permissions'));\r\n      return;\r\n    }\r\n\r\n    this.router.navigate(['/employee-vacations/create']);\r\n  }\r\n\r\n  /**\r\n   * Navigate to view employee vacation details\r\n   */\r\n  onViewVacation(vacation: EmployeeVacation): void {\r\n    this.router.navigate(['/employee-vacations', vacation.id, 'view']);\r\n  }\r\n\r\n  /**\r\n   * Navigate to edit employee vacation\r\n   */\r\n  onEditVacation(vacation: EmployeeVacation): void {\r\n    if (!this.permissionService.has(this.PERMISSIONS.VACATION_UPDATE)) {\r\n      this.notificationService.error(this.i18n.t('common.errors.insufficient_permissions'));\r\n      return;\r\n    }\r\n\r\n    this.router.navigate(['/employee-vacations', vacation.id, 'edit']);\r\n  }\r\n\r\n  /**\r\n   * Toggle vacation approval status\r\n   */\r\n  onToggleStatus(vacation: EmployeeVacation): void {\r\n    if (!this.permissionService.has(this.PERMISSIONS.VACATION_UPDATE)) {\r\n      this.notificationService.error(this.i18n.t('common.errors.insufficient_permissions'));\r\n      return;\r\n    }\r\n\r\n    const action = vacation.isApproved ? 'reject' : 'approve';\r\n    const message = this.i18n.t(`employee_vacations.confirm_${action}`)\r\n      .replace('{{employee}}', vacation.employeeName);\r\n\r\n    this.confirmationService.confirm({\r\n      title: this.i18n.t(`employee_vacations.${action}_vacation`),\r\n      message,\r\n      confirmText: this.i18n.t(`common.${action}`),\r\n      cancelText: this.i18n.t('common.cancel'),\r\n      confirmButtonClass: action === 'approve' ? 'btn-success' : 'btn-warning'\r\n    } as ConfirmationConfig).then(result => {\r\n      if (result.confirmed) {\r\n        this.employeeVacationsService.toggleVacationStatus(vacation.id).subscribe({\r\n          next: () => {\r\n            const successMessage = vacation.isApproved\r\n              ? this.i18n.t('employee_vacations.success.rejected')\r\n              : this.i18n.t('employee_vacations.success.approved');\r\n            this.notificationService.success(successMessage);\r\n          },\r\n          error: (error) => {\r\n            console.error('Failed to toggle vacation status:', error);\r\n            this.notificationService.error(this.i18n.t('employee_vacations.errors.status_toggle_failed'));\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Delete employee vacation\r\n   */\r\n  onDeleteVacation(vacation: EmployeeVacation): void {\r\n    if (!this.permissionService.has(this.PERMISSIONS.VACATION_DELETE)) {\r\n      this.notificationService.error(this.i18n.t('common.errors.insufficient_permissions'));\r\n      return;\r\n    }\r\n\r\n    this.confirmationService.confirm({\r\n      title: this.i18n.t('employee_vacations.delete_vacation'),\r\n      message: this.i18n.t('employee_vacations.confirm_delete')\r\n        .replace('{{employee}}', vacation.employeeName),\r\n      confirmText: this.i18n.t('common.delete'),\r\n      cancelText: this.i18n.t('common.cancel'),\r\n      confirmButtonClass: 'btn-danger'\r\n    } as ConfirmationConfig).then(result => {\r\n      if (result.confirmed) {\r\n        this.employeeVacationsService.deleteVacation(vacation.id).subscribe({\r\n          next: () => {\r\n            this.notificationService.success(this.i18n.t('employee_vacations.success.deleted'));\r\n          },\r\n          error: (error) => {\r\n            console.error('Failed to delete vacation:', error);\r\n            this.notificationService.error(this.i18n.t('employee_vacations.errors.delete_failed'));\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Open bulk vacation assignment modal\r\n   */\r\n  onBulkAssignVacation(): void {\r\n    if (!this.permissionService.has(this.PERMISSIONS.VACATION_BULK_CREATE)) {\r\n      this.notificationService.error(this.i18n.t('common.errors.insufficient_permissions'));\r\n      return;\r\n    }\r\n\r\n    this.router.navigate(['/employee-vacations/bulk-create']);\r\n  }\r\n\r\n  /**\r\n   * Handle bulk vacation created\r\n   */\r\n  onBulkVacationCreated(): void {\r\n    this.loadVacations();\r\n  }\r\n}", "<div class=\"app-list-page\">\r\n  <!-- Page Header -->\r\n  <app-page-header\r\n    [title]=\"i18n.t('employee_vacations.title')\">\r\n  </app-page-header>\r\n\r\n  <!-- Filters Component -->\r\n  <app-unified-filter\r\n    moduleName=\"employee-vacations\"\r\n    [refreshing]=\"loading()\"\r\n    (searchChange)=\"onSearchChange($event)\"\r\n    (filtersChange)=\"onFiltersChange($event)\"\r\n    (add)=\"onAddVacation()\"\r\n    (refresh)=\"onRefreshData()\">\r\n  </app-unified-filter>\r\n\r\n  <!-- Employee Vacations Table Component -->\r\n  <app-employee-vacation-table\r\n    [vacations]=\"vacations()\"\r\n    [loading]=\"loading\"\r\n    [currentPage]=\"currentPage\"\r\n    [totalPages]=\"totalPages\"\r\n    [totalItems]=\"totalItems\"\r\n    [pageSize]=\"pageSize\"\r\n    (viewVacation)=\"onViewVacation($event)\"\r\n    (editVacation)=\"onEditVacation($event)\"\r\n    (deleteVacation)=\"onDeleteVacation($event)\"\r\n    (toggleStatus)=\"onToggleStatus($event)\"\r\n    (pageChange)=\"onPageChange($event)\"\r\n    (pageSizeChange)=\"onPageSizeChange($event)\">\r\n  </app-employee-vacation-table>\r\n\r\n  <!-- Bulk Vacation Modal Component -->\r\n  <app-bulk-vacation-modal\r\n    #bulkVacationModal\r\n    (bulkVacationCreated)=\"onBulkVacationCreated()\">\r\n  </app-bulk-vacation-modal>\r\n</div>"],
  "mappings": "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",
  "names": ["BulkAssignmentType"]
}
