{
  "version": 3,
  "sources": ["src/app/shared/components/stat-card/stat-card.component.ts"],
  "sourcesContent": ["import { Component, Input } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nexport interface StatChange {\r\n  value: number;\r\n  type: 'increase' | 'decrease' | 'neutral';\r\n  period?: string;\r\n  isPercentage?: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-stat-card',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  template: `\r\n    <div class=\"app-stat-card card\" [class]=\"getCardClasses()\">\r\n      <div class=\"card-body\">\r\n        <div class=\"d-flex justify-content-between align-items-start\">\r\n          <div class=\"app-stat-content\">\r\n            <div class=\"app-stat-label\">{{ label }}</div>\r\n            <div class=\"app-stat-number\" [class]=\"getNumberClasses()\">\r\n              @if (prefix) {\r\n                <span class=\"app-stat-prefix\">{{ prefix }}</span>\r\n              }\r\n              {{ formatValue(value) }}\r\n              @if (suffix) {\r\n                <span class=\"app-stat-suffix\">{{ suffix }}</span>\r\n              }\r\n            </div>\r\n            @if (change) {\r\n              <div class=\"app-stat-change\" [class]=\"getChangeClasses()\">\r\n                <i [class]=\"getChangeIcon()\" class=\"me-1\"></i>\r\n                {{ formatChange(change) }}\r\n                @if (change.period) {\r\n                  <span class=\"ms-1 text-muted\">{{ change.period }}</span>\r\n                }\r\n              </div>\r\n            }\r\n            @if (subtitle) {\r\n              <div class=\"app-stat-subtitle text-muted\">{{ subtitle }}</div>\r\n            }\r\n          </div>\r\n\r\n          @if (icon) {\r\n            <div class=\"app-stat-icon\">\r\n              <div [class]=\"'icon-circle ' + getIconCircleClasses()\">\r\n                <i [class]=\"icon + ' ' + getIconClasses()\"></i>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n\r\n        @if (showProgress && progressValue !== undefined) {\r\n          <div class=\"app-stat-progress mt-3\">\r\n            <div class=\"app-progress-bar\">\r\n              <div class=\"app-progress-fill\"\r\n                   [class]=\"'app-progress-fill-' + (variant || 'primary')\"\r\n                   [style.width.%]=\"progressValue\">\r\n              </div>\r\n            </div>\r\n            @if (progressLabel) {\r\n              <small class=\"text-muted mt-1 d-block\">{{ progressLabel }}</small>\r\n            }\r\n          </div>\r\n        }\r\n      </div>\r\n\r\n      @if (clickable) {\r\n        <div class=\"card-footer bg-transparent border-0 pt-0\">\r\n          <div class=\"d-flex align-items-center text-muted\">\r\n            <small>{{ clickableText || 'View details' }}</small>\r\n            <i class=\"fas fa-arrow-right ms-auto\"></i>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  `\r\n})\r\nexport class StatCardComponent {\r\n  @Input() label!: string;\r\n  @Input() value!: number | string;\r\n  @Input() prefix?: string;\r\n  @Input() suffix?: string;\r\n  @Input() subtitle?: string;\r\n  @Input() icon?: string;\r\n  @Input() variant: 'primary' | 'success' | 'warning' | 'danger' | 'info' | 'secondary' = 'primary';\r\n  @Input() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Input() change?: StatChange;\r\n  @Input() showProgress = false;\r\n  @Input() progressValue?: number;\r\n  @Input() progressLabel?: string;\r\n  @Input() clickable = false;\r\n  @Input() clickableText?: string;\r\n  @Input() loading = false;\r\n  @Input() borderAccent = false;\r\n  @Input() formatAsNumber = true;\r\n\r\n  getCardClasses(): string {\r\n    const classes = ['h-100'];\r\n\r\n    if (this.borderAccent) {\r\n      classes.push(`border-start border-${this.variant} border-4`);\r\n    }\r\n\r\n    if (this.clickable) {\r\n      classes.push('app-clickable app-hover-lift');\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n\r\n  getNumberClasses(): string {\r\n    const classes = [];\r\n\r\n    if (this.size === 'sm') {\r\n      classes.push('fs-4');\r\n    } else if (this.size === 'lg') {\r\n      classes.push('fs-1');\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n\r\n  getIconCircleClasses(): string {\r\n    return `bg-${this.variant} bg-opacity-10`;\r\n  }\r\n\r\n  getIconClasses(): string {\r\n    return `text-${this.variant}`;\r\n  }\r\n\r\n  getChangeClasses(): string {\r\n    if (!this.change) return '';\r\n\r\n    switch (this.change.type) {\r\n      case 'increase':\r\n        return 'app-stat-change-positive';\r\n      case 'decrease':\r\n        return 'app-stat-change-negative';\r\n      default:\r\n        return 'app-stat-change-neutral';\r\n    }\r\n  }\r\n\r\n  getChangeIcon(): string {\r\n    if (!this.change) return '';\r\n\r\n    switch (this.change.type) {\r\n      case 'increase':\r\n        return 'fas fa-arrow-up';\r\n      case 'decrease':\r\n        return 'fas fa-arrow-down';\r\n      default:\r\n        return 'fas fa-minus';\r\n    }\r\n  }\r\n\r\n  formatValue(value: number | string): string {\r\n    if (typeof value === 'string') return value;\r\n\r\n    if (!this.formatAsNumber) return value.toString();\r\n\r\n    // Format large numbers with appropriate suffixes\r\n    if (value >= 1000000) {\r\n      return (value / 1000000).toFixed(1) + 'M';\r\n    } else if (value >= 1000) {\r\n      return (value / 1000).toFixed(1) + 'K';\r\n    }\r\n\r\n    return value.toLocaleString();\r\n  }\r\n\r\n  formatChange(change: StatChange): string {\r\n    const sign = change.type === 'increase' ? '+' : change.type === 'decrease' ? '-' : '';\r\n    const formattedValue = change.isPercentage ?\r\n      `${Math.abs(change.value)}%` :\r\n      Math.abs(change.value).toLocaleString();\r\n\r\n    return `${sign}${formattedValue}`;\r\n  }\r\n}"],
  "mappings": "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",
  "names": []
}
