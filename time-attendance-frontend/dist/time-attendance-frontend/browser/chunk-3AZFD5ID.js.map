{
  "version": 3,
  "sources": ["src/app/shared/models/unified-filter.model.ts", "src/app/shared/models/employee-vacation.model.ts", "src/app/core/configs/filter-configurations.ts"],
  "sourcesContent": ["import { SearchableSelectOption } from '../components/searchable-select/searchable-select.component';\r\n\r\nexport interface UnifiedFilterConfig {\r\n  searchPlaceholder: string;\r\n  addButtonText: string;\r\n  addButtonPermission?: string;\r\n  filters: FilterDefinition[];\r\n}\r\n\r\nexport interface FilterDefinition {\r\n  key: string;\r\n  label: string;\r\n  type: 'status' | 'branch' | 'department' | 'employee' | 'date' | 'dateRange' | 'custom' | 'shift' | 'vacationType' | 'role' | 'excusePolicy';\r\n  statusEnum?: any;\r\n  statusLabels?: { [key: string]: string };\r\n  dependent?: string[];\r\n  dependsOn?: string;\r\n  options?: SearchableSelectOption[];\r\n  required?: boolean;\r\n  multiple?: boolean;\r\n  placeholder?: string;\r\n}\r\n\r\nexport interface FilterData {\r\n  branches?: any[];\r\n  departments?: any[];\r\n  employees?: any[];\r\n  shifts?: any[];\r\n  vacationTypes?: any[];\r\n  roles?: any[];\r\n  excusePolicies?: any[];\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface FilterState {\r\n  [key: string]: any;\r\n}\r\n\r\nexport interface ModuleFilterRegistry {\r\n  [moduleName: string]: UnifiedFilterConfig;\r\n}\r\n\r\nexport enum CommonFilterTypes {\r\n  Branch = 'branch',\r\n  Department = 'department',\r\n  Employee = 'employee',\r\n  Status = 'status',\r\n  Date = 'date',\r\n  DateRange = 'dateRange',\r\n  Custom = 'custom',\r\n  Shift = 'shift',\r\n  VacationType = 'vacationType',\r\n  Role = 'role',\r\n  ExcusePolicy = 'excusePolicy'\r\n}\r\n\r\nexport interface FilterChangeEvent {\r\n  key: string;\r\n  value: any;\r\n  allFilters: FilterState;\r\n}\r\n\r\nexport interface FilterLoadEvent {\r\n  filterKey: string;\r\n  dependentValue?: any;\r\n  filters: FilterState;\r\n}", "/**\r\n * Employee vacation record model for frontend consumption.\r\n * Matches the backend EmployeeVacationDto structure.\r\n */\r\nexport interface EmployeeVacation {\r\n  id: number;\r\n  employeeId: number;\r\n  employeeNumber: string;\r\n  employeeName: string;\r\n  vacationTypeId: number;\r\n  vacationTypeName: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  totalDays: number;\r\n  businessDays: number;\r\n  isApproved: boolean;\r\n  notes?: string;\r\n  isCurrentlyActive: boolean;\r\n  isUpcoming: boolean;\r\n  isCompleted: boolean;\r\n  createdAtUtc: Date;\r\n  createdBy: string;\r\n  modifiedAtUtc?: Date;\r\n  modifiedBy?: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object for creating new employee vacation records.\r\n */\r\nexport interface CreateEmployeeVacationRequest {\r\n  employeeId: number;\r\n  vacationTypeId: number;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  isApproved?: boolean;\r\n  notes?: string;\r\n}\r\n\r\n/**\r\n * Data Transfer Object for updating existing employee vacation records.\r\n */\r\nexport interface UpdateEmployeeVacationRequest {\r\n  vacationTypeId: number;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  isApproved: boolean;\r\n  notes?: string;\r\n}\r\n\r\n/**\r\n * Vacation calendar item for calendar display.\r\n */\r\nexport interface VacationCalendarItem {\r\n  id: number;\r\n  employeeId: number;\r\n  employeeName: string;\r\n  vacationTypeName: string;\r\n  startDate: Date;\r\n  endDate: Date;\r\n  isApproved: boolean;\r\n  color: string;\r\n}\r\n\r\n/**\r\n * Filter options for vacation queries.\r\n */\r\nexport interface VacationFilters {\r\n  employeeId?: number;\r\n  vacationTypeId?: number;\r\n  startDate?: Date;\r\n  endDate?: Date;\r\n  isApproved?: boolean;\r\n  isCurrentlyActive?: boolean;\r\n  isUpcoming?: boolean;\r\n  searchTerm?: string;\r\n  year?: number;\r\n  month?: number;\r\n}\r\n\r\n/**\r\n * Pagination and sorting options for vacation queries.\r\n */\r\nexport interface VacationQueryOptions {\r\n  page?: number;\r\n  pageSize?: number;\r\n  sortBy?: 'StartDate' | 'EndDate' | 'EmployeeName' | 'VacationTypeName' | 'CreatedAtUtc' | 'TotalDays';\r\n  sortDescending?: boolean;\r\n}\r\n\r\n/**\r\n * Complete vacation query parameters combining filters and options.\r\n */\r\nexport interface VacationQueryParams extends VacationFilters, VacationQueryOptions {}\r\n\r\n/**\r\n * Vacation status enumeration for type safety.\r\n */\r\nexport enum VacationStatus {\r\n  All = 'all',\r\n  Approved = 'approved',\r\n  Pending = 'pending',\r\n  Active = 'active',\r\n  Upcoming = 'upcoming',\r\n  Completed = 'completed'\r\n}\r\n\r\n/**\r\n * Vacation form data interface for reactive forms.\r\n */\r\nexport interface VacationFormData {\r\n  employeeId: number | null;\r\n  vacationTypeId: number | null;\r\n  startDate: Date | null;\r\n  endDate: Date | null;\r\n  isApproved: boolean;\r\n  notes: string | null;\r\n}\r\n\r\n/**\r\n * Vacation conflict detection result.\r\n */\r\nexport interface VacationConflict {\r\n  hasConflict: boolean;\r\n  conflictingVacations: EmployeeVacation[];\r\n  message: string;\r\n}\r\n\r\n/**\r\n * Vacation statistics for reporting and dashboard.\r\n */\r\nexport interface VacationStatistics {\r\n  totalVacations: number;\r\n  approvedVacations: number;\r\n  pendingVacations: number;\r\n  activeVacations: number;\r\n  upcomingVacations: number;\r\n  totalDays: number;\r\n  averageDaysPerVacation: number;\r\n}\r\n\r\n/**\r\n * Employee vacation summary for employee-specific views.\r\n */\r\nexport interface EmployeeVacationSummary {\r\n  employeeId: number;\r\n  employeeName: string;\r\n  totalVacationDays: number;\r\n  remainingDays?: number;\r\n  usedDays: number;\r\n  pendingDays: number;\r\n  currentVacation?: EmployeeVacation;\r\n  nextVacation?: EmployeeVacation;\r\n}\r\n\r\n/**\r\n * Vacation type with additional metadata for dropdowns.\r\n */\r\nexport interface VacationTypeOption {\r\n  id: number;\r\n  name: string;\r\n  nameAr?: string;\r\n  isActive: boolean;\r\n  color?: string;\r\n  icon?: string;\r\n}\r\n\r\n/**\r\n * Employee option for dropdowns and selection.\r\n */\r\nexport interface EmployeeOption {\r\n  id: number;\r\n  employeeNumber: string;\r\n  name: string;\r\n  departmentName?: string;\r\n  isActive: boolean;\r\n}\r\n\r\n/**\r\n * Vacation bulk operation request.\r\n */\r\nexport interface VacationBulkOperationRequest {\r\n  vacationIds: number[];\r\n  operation: 'approve' | 'reject' | 'delete';\r\n  reason?: string;\r\n}\r\n\r\n/**\r\n * Vacation import/export data structure.\r\n */\r\nexport interface VacationImportData {\r\n  employeeNumber: string;\r\n  vacationTypeName: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  isApproved: boolean;\r\n  notes?: string;\r\n}\r\n\r\n/**\r\n * Type guard to check if an object is an EmployeeVacation.\r\n */\r\nexport function isEmployeeVacation(obj: any): obj is EmployeeVacation {\r\n  return obj &&\r\n    typeof obj.id === 'number' &&\r\n    typeof obj.employeeId === 'number' &&\r\n    typeof obj.vacationTypeId === 'number' &&\r\n    obj.startDate instanceof Date &&\r\n    obj.endDate instanceof Date;\r\n}\r\n\r\n/**\r\n * Utility function to calculate vacation duration in business days.\r\n */\r\nexport function calculateBusinessDays(startDate: Date, endDate: Date): number {\r\n  let businessDays = 0;\r\n  const currentDate = new Date(startDate);\r\n\r\n  while (currentDate <= endDate) {\r\n    const dayOfWeek = currentDate.getDay();\r\n    if (dayOfWeek !== 0 && dayOfWeek !== 6) { // Not Sunday (0) or Saturday (6)\r\n      businessDays++;\r\n    }\r\n    currentDate.setDate(currentDate.getDate() + 1);\r\n  }\r\n\r\n  return businessDays;\r\n}\r\n\r\n/**\r\n * Utility function to check if a vacation is currently active.\r\n */\r\nexport function isVacationActive(vacation: EmployeeVacation): boolean {\r\n  const today = new Date();\r\n  today.setHours(0, 0, 0, 0);\r\n\r\n  const startDate = new Date(vacation.startDate);\r\n  const endDate = new Date(vacation.endDate);\r\n  startDate.setHours(0, 0, 0, 0);\r\n  endDate.setHours(0, 0, 0, 0);\r\n\r\n  return vacation.isApproved && today >= startDate && today <= endDate;\r\n}\r\n\r\n/**\r\n * Utility function to format vacation period as string.\r\n */\r\nexport function formatVacationPeriod(vacation: EmployeeVacation): string {\r\n  const startDate = new Date(vacation.startDate).toLocaleDateString();\r\n  const endDate = new Date(vacation.endDate).toLocaleDateString();\r\n\r\n  if (vacation.startDate.getTime() === vacation.endDate.getTime()) {\r\n    return startDate;\r\n  }\r\n\r\n  return `${startDate} - ${endDate}`;\r\n}", "import { UnifiedFilterConfig, CommonFilterTypes } from '../../shared/models/unified-filter.model';\r\nimport { ExcuseStatus } from '../../shared/models/employee-excuse.model';\r\nimport { VacationStatus } from '../../shared/models/employee-vacation.model';\r\nimport { AttendanceStatus } from '../../shared/models/attendance.model';\r\nimport { EmploymentStatus } from '../../shared/models/employee.model';\r\nimport { PermissionActions } from '../../shared/utils/permission.utils';\r\n\r\nexport const FILTER_CONFIGURATIONS: { [key: string]: UnifiedFilterConfig } = {\r\n  'employee-excuses': {\r\n    searchPlaceholder: 'employee_excuses.search_placeholder',\r\n    addButtonText: 'employee_excuses.create_excuse',\r\n    addButtonPermission: `excuse.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'status',\r\n        label: 'employee_excuses.status',\r\n        type: CommonFilterTypes.Status,\r\n        statusEnum: ExcuseStatus,\r\n        statusLabels: {\r\n          'Pending': 'employee_excuses.status_pending',\r\n          'Approved': 'employee_excuses.status_approved',\r\n          'Rejected': 'employee_excuses.status_rejected',\r\n          'Cancelled': 'employee_excuses.status_cancelled'\r\n        }\r\n      },\r\n      {\r\n        key: 'branchId',\r\n        label: 'employees.branch',\r\n        type: CommonFilterTypes.Branch,\r\n        dependent: ['departmentId']\r\n      },\r\n      {\r\n        key: 'departmentId',\r\n        label: 'employees.department',\r\n        type: CommonFilterTypes.Department,\r\n        dependsOn: 'branchId'\r\n      }\r\n    ]\r\n  },\r\n\r\n  'employee-vacations': {\r\n    searchPlaceholder: 'employee_vacations.search_placeholder',\r\n    addButtonText: 'employee_vacations.create_vacation',\r\n    addButtonPermission: `vacation.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'status',\r\n        label: 'employee_vacations.status',\r\n        type: CommonFilterTypes.Status,\r\n        statusEnum: VacationStatus,\r\n        statusLabels: {\r\n          'approved': 'employee_vacations.status_approved',\r\n          'pending': 'employee_vacations.status_pending',\r\n          'active': 'employee_vacations.status_active',\r\n          'upcoming': 'employee_vacations.status_upcoming',\r\n          'completed': 'employee_vacations.status_completed'\r\n        }\r\n      },\r\n      {\r\n        key: 'branchId',\r\n        label: 'employees.branch',\r\n        type: CommonFilterTypes.Branch,\r\n        dependent: ['departmentId']\r\n      },\r\n      {\r\n        key: 'departmentId',\r\n        label: 'employees.department',\r\n        type: CommonFilterTypes.Department,\r\n        dependsOn: 'branchId'\r\n      }\r\n    ]\r\n  },\r\n\r\n  'employees': {\r\n    searchPlaceholder: 'employees.search_placeholder',\r\n    addButtonText: 'employees.add_employee',\r\n    addButtonPermission: `employee.${PermissionActions.CREATE}`,\r\n    filters: []\r\n  },\r\n\r\n  'attendance': {\r\n    searchPlaceholder: 'attendance.fields.search_placeholder',\r\n    addButtonText: 'attendance.actions.create_transaction',\r\n    addButtonPermission: `attendance.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'status',\r\n        label: 'attendance.status',\r\n        type: CommonFilterTypes.Status,\r\n        statusEnum: AttendanceStatus,\r\n        statusLabels: {\r\n          'Present': 'attendance.status_present',\r\n          'Absent': 'attendance.status_absent',\r\n          'Late': 'attendance.status_late',\r\n          'EarlyLeave': 'attendance.status_early_leave',\r\n          'OnLeave': 'attendance.status_on_leave',\r\n          'DayOff': 'attendance.status_day_off',\r\n          'Overtime': 'attendance.status_overtime',\r\n          'Incomplete': 'attendance.status_incomplete',\r\n          'Holiday': 'attendance.status_holiday',\r\n          'SickLeave': 'attendance.status_sick_leave',\r\n          'Pending': 'attendance.status_pending'\r\n        }\r\n      },\r\n      {\r\n        key: 'dateRange',\r\n        label: 'common.date_range',\r\n        type: CommonFilterTypes.DateRange\r\n      },\r\n      {\r\n        key: 'branchId',\r\n        label: 'employees.branch',\r\n        type: CommonFilterTypes.Branch,\r\n        dependent: ['departmentId']\r\n      },\r\n      {\r\n        key: 'departmentId',\r\n        label: 'employees.department',\r\n        type: CommonFilterTypes.Department,\r\n        dependsOn: 'branchId'\r\n      }\r\n    ]\r\n  },\r\n\r\n  'users': {\r\n    searchPlaceholder: 'users.search_placeholder',\r\n    addButtonText: 'users.add_user',\r\n    addButtonPermission: `user.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'branchId',\r\n        label: 'employees.branch',\r\n        type: CommonFilterTypes.Branch\r\n      },\r\n      {\r\n        key: 'isActive',\r\n        label: 'common.status',\r\n        type: CommonFilterTypes.Custom,\r\n        options: [\r\n          { value: '', label: 'common.all' },\r\n          { value: 'true', label: 'common.active' },\r\n          { value: 'false', label: 'common.inactive' }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n\r\n  'departments': {\r\n    searchPlaceholder: 'department.searchPlaceholder',\r\n    addButtonText: 'department.addDepartment',\r\n    addButtonPermission: `department.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'branchId',\r\n        label: 'employees.branch',\r\n        type: CommonFilterTypes.Branch\r\n      },\r\n      {\r\n        key: 'isActive',\r\n        label: 'common.status',\r\n        type: CommonFilterTypes.Custom,\r\n        options: [\r\n          { value: '', label: 'common.all' },\r\n          { value: 'true', label: 'common.active' },\r\n          { value: 'false', label: 'common.inactive' }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n\r\n  'branches': {\r\n    searchPlaceholder: 'branches.search_placeholder',\r\n    addButtonText: 'branches.create_branch',\r\n    addButtonPermission: `branch.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'isActive',\r\n        label: 'common.status',\r\n        type: CommonFilterTypes.Custom,\r\n        options: [\r\n          { value: '', label: 'common.all' },\r\n          { value: 'true', label: 'common.active' },\r\n          { value: 'false', label: 'common.inactive' }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n\r\n  'shifts': {\r\n    searchPlaceholder: 'shifts.searchPlaceholder',\r\n    addButtonText: 'shifts.create',\r\n    addButtonPermission: `shift.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'branchId',\r\n        label: 'employees.branch',\r\n        type: CommonFilterTypes.Branch\r\n      },\r\n      {\r\n        key: 'isActive',\r\n        label: 'common.status',\r\n        type: CommonFilterTypes.Custom,\r\n        options: [\r\n          { value: '', label: 'common.all' },\r\n          { value: 'true', label: 'common.active' },\r\n          { value: 'false', label: 'common.inactive' }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n\r\n  'roles': {\r\n    searchPlaceholder: 'roles.search_placeholder',\r\n    addButtonText: 'roles.create_role',\r\n    addButtonPermission: `role.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'isActive',\r\n        label: 'common.status',\r\n        type: CommonFilterTypes.Custom,\r\n        options: [\r\n          { value: '', label: 'common.all' },\r\n          { value: 'true', label: 'common.active' },\r\n          { value: 'false', label: 'common.inactive' }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n\r\n  'vacation-types': {\r\n    searchPlaceholder: 'vacation_types.search_placeholder',\r\n    addButtonText: 'vacation_types.create_vacation_type',\r\n    addButtonPermission: `vacationType.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'branchId',\r\n        label: 'employees.branch',\r\n        type: CommonFilterTypes.Branch\r\n      },\r\n      {\r\n        key: 'isActive',\r\n        label: 'common.status',\r\n        type: CommonFilterTypes.Custom,\r\n        options: [\r\n          { value: '', label: 'common.all' },\r\n          { value: 'true', label: 'common.active' },\r\n          { value: 'false', label: 'common.inactive' }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n\r\n  'public-holidays': {\r\n    searchPlaceholder: 'settings.holidays.searchPlaceholder',\r\n    addButtonText: 'settings.holidays.create',\r\n    addButtonPermission: `publicHoliday.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'branchId',\r\n        label: 'employees.branch',\r\n        type: CommonFilterTypes.Branch\r\n      },\r\n      {\r\n        key: 'year',\r\n        label: 'common.year',\r\n        type: CommonFilterTypes.Custom,\r\n        options: [\r\n          { value: '', label: 'common.all' },\r\n          { value: '2024', label: '2024' },\r\n          { value: '2025', label: '2025' },\r\n          { value: '2026', label: '2026' }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n\r\n  'overtime-configurations': {\r\n    searchPlaceholder: 'settings.overtime.searchPlaceholder',\r\n    addButtonText: 'settings.overtime.createPolicy',\r\n    addButtonPermission: `settings.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'branchId',\r\n        label: 'employees.branch',\r\n        type: CommonFilterTypes.Branch\r\n      },\r\n      {\r\n        key: 'isActive',\r\n        label: 'common.status',\r\n        type: CommonFilterTypes.Custom,\r\n        options: [\r\n          { value: '', label: 'common.all' },\r\n          { value: 'true', label: 'common.active' },\r\n          { value: 'false', label: 'common.inactive' }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n\r\n  'excuse-policies': {\r\n    searchPlaceholder: 'excuse_policies.searchPlaceholder',\r\n    addButtonText: 'excuse_policies.create_policy',\r\n    addButtonPermission: `excuse.${PermissionActions.CREATE}`,\r\n    filters: [\r\n      {\r\n        key: 'branchId',\r\n        label: 'employees.branch',\r\n        type: CommonFilterTypes.Branch\r\n      },\r\n      {\r\n        key: 'isActive',\r\n        label: 'common.status',\r\n        type: CommonFilterTypes.Custom,\r\n        options: [\r\n          { value: '', label: 'common.all' },\r\n          { value: 'true', label: 'common.active' },\r\n          { value: 'false', label: 'common.inactive' }\r\n        ]\r\n      }\r\n    ]\r\n  },\r\n\r\n  'shift-assignments': {\r\n    searchPlaceholder: 'shifts.assignments.searchPlaceholder',\r\n    addButtonText: 'shifts.assignments.createButton',\r\n    addButtonPermission: `shift.${PermissionActions.CREATE}`,\r\n    filters: []\r\n  }\r\n};"],
  "mappings": "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",
  "names": ["CommonFilterTypes", "VacationStatus"]
}
