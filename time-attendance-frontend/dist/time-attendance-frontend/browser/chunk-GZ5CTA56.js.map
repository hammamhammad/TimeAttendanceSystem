{
  "version": 3,
  "sources": ["src/app/pages/attendance/monthly-report/monthly-report.component.ts", "src/app/pages/attendance/monthly-report/monthly-report.component.html"],
  "sourcesContent": ["import { Component, OnInit, signal, computed } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, RouterModule } from '@angular/router';\r\nimport { AttendanceService } from '../../../core/services/attendance.service';\r\nimport { I18nService } from '../../../core/i18n/i18n.service';\r\nimport { NotificationService } from '../../../core/notifications/notification.service';\r\nimport { DataTableComponent } from '../../../shared/components/data-table/data-table.component';\r\nimport { PageHeaderComponent } from '../../../shared/components/page-header/page-header.component';\r\nimport { FilterPanelComponent, FilterConfig, FilterValues } from '../shared/filter-panel/filter-panel.component';\r\nimport { AttendanceChartComponent, ChartData } from '../shared/attendance-chart/attendance-chart.component';\r\nimport { AttendanceSummaryCardComponent, AttendanceSummaryData } from '../shared/attendance-summary-card/attendance-summary-card.component';\r\nimport {\r\n  AttendanceStatistics,\r\n  AttendanceStatus\r\n} from '../../../shared/models/attendance.model';\r\nimport { StatusBadgeComponent } from '../../../shared/components/status-badge/status-badge.component';\r\n\r\ninterface MonthlyReportFilters {\r\n  month: number;\r\n  year: number;\r\n  departmentIds?: number[];\r\n  branchIds?: number[];\r\n  employeeIds?: number[];\r\n}\r\n\r\ninterface MonthlyAttendanceReport {\r\n  summary: any;\r\n  summaryStatistics: any;\r\n  employeeRecords: MonthlyEmployeeRecord[];\r\n  dailyBreakdown: any[];\r\n  period: any;\r\n}\r\n\r\ninterface MonthlyEmployeeRecord {\r\n  employeeId: string;\r\n  employeeName: string;\r\n  employeeNumber: string;\r\n  department: string;\r\n  branch?: string;\r\n  presentDays: number;\r\n  absentDays: number;\r\n  lateDays: number;\r\n  overtimeDays: number;\r\n  totalWorkingHours: number;\r\n  totalWorkingDays?: number;\r\n  totalOvertimeHours: number;\r\n  attendanceRate: number;\r\n  perfectAttendance: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-monthly-report',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n    DataTableComponent,\r\n    PageHeaderComponent,\r\n    FilterPanelComponent,\r\n    AttendanceChartComponent,\r\n    AttendanceSummaryCardComponent,\r\n    StatusBadgeComponent\r\n  ],\r\n  templateUrl: './monthly-report.component.html',\r\n  styleUrls: ['./monthly-report.component.css']\r\n})\r\nexport class MonthlyReportComponent implements OnInit {\r\n  // Signals for reactive state management\r\n  monthlyReport = signal<MonthlyAttendanceReport | null>(null);\r\n  loading = signal(false);\r\n  error = signal<string | null>(null);\r\n  exporting = signal(false);\r\n\r\n  // Form and filters\r\n  filterForm!: FormGroup;\r\n  filterConfig = signal<FilterConfig>({});\r\n  currentFilters = signal<MonthlyReportFilters>({\r\n    month: new Date().getMonth() + 1,\r\n    year: new Date().getFullYear()\r\n  });\r\n\r\n  // Computed properties\r\n  reportData = computed(() => this.monthlyReport()?.employeeRecords || []);\r\n  summaryStats = computed(() => this.monthlyReport()?.summaryStatistics);\r\n\r\n  // Chart data for monthly overview\r\n  attendanceOverviewChart = computed<ChartData>(() => {\r\n    const stats = this.summaryStats();\r\n    if (!stats) return { labels: [], datasets: [] };\r\n\r\n    return {\r\n      labels: ['Present Days', 'Absent Days', 'Late Days', 'Overtime Days'],\r\n      datasets: [{\r\n        label: 'Monthly Attendance Overview',\r\n        data: [\r\n          stats.totalPresentDays,\r\n          stats.totalAbsentDays,\r\n          stats.totalLateDays,\r\n          stats.totalOvertimeDays\r\n        ],\r\n        backgroundColor: ['#198754', '#dc3545', '#ffc107', '#0d6efd'],\r\n        borderWidth: 2\r\n      }]\r\n    };\r\n  });\r\n\r\n  // Overtime trends chart\r\n  overtimeTrendChart = computed<ChartData>(() => {\r\n    const report = this.monthlyReport();\r\n    if (!report?.dailyBreakdown) return { labels: [], datasets: [] };\r\n\r\n    const dailyData = report.dailyBreakdown;\r\n    return {\r\n      labels: dailyData.map((d: any) => new Date(d.date).getDate().toString()),\r\n      datasets: [{\r\n        label: 'Daily Overtime Hours',\r\n        data: dailyData.map((d: any) => d.totalOvertimeHours),\r\n        backgroundColor: '#0d6efd',\r\n        borderColor: '#0d6efd',\r\n        borderWidth: 2,\r\n        fill: false\r\n      }]\r\n    };\r\n  });\r\n\r\n  // Summary cards\r\n  summaryCards = computed<AttendanceSummaryData[]>(() => {\r\n    const stats = this.summaryStats();\r\n    if (!stats) return [];\r\n\r\n    const workingDays = this.getWorkingDaysInMonth();\r\n\r\n    return [\r\n      {\r\n        title: 'Total Employees',\r\n        value: stats.totalEmployees,\r\n        icon: 'fa-users',\r\n        color: 'primary',\r\n        subtitle: 'In selected period'\r\n      },\r\n      {\r\n        title: 'Average Attendance Rate',\r\n        value: `${Math.round(stats.averageAttendanceRate)}%`,\r\n        icon: 'fa-percentage',\r\n        color: stats.averageAttendanceRate >= 90 ? 'success' : stats.averageAttendanceRate >= 80 ? 'warning' : 'danger',\r\n        percentage: stats.averageAttendanceRate,\r\n        trend: {\r\n          value: 2.3,\r\n          isPositive: true,\r\n          label: 'vs last month'\r\n        }\r\n      },\r\n      {\r\n        title: 'Total Overtime Hours',\r\n        value: `${Math.round(stats.totalOvertimeHours)}h`,\r\n        icon: 'fa-business-time',\r\n        color: 'info',\r\n        subtitle: `${Math.round(stats.totalOvertimeHours / stats.totalEmployees)}h avg per employee`\r\n      },\r\n      {\r\n        title: 'Perfect Attendance',\r\n        value: stats.perfectAttendanceEmployees,\r\n        icon: 'fa-award',\r\n        color: 'success',\r\n        percentage: stats.totalEmployees > 0 ? (stats.perfectAttendanceEmployees / stats.totalEmployees) * 100 : 0,\r\n        subtitle: 'Employees with no absences'\r\n      },\r\n      {\r\n        title: 'Late Arrivals',\r\n        value: stats.totalLateDays,\r\n        icon: 'fa-clock',\r\n        color: 'warning',\r\n        subtitle: `${Math.round(stats.totalLateDays / workingDays)} avg per day`\r\n      },\r\n      {\r\n        title: 'Absent Days',\r\n        value: stats.totalAbsentDays,\r\n        icon: 'fa-user-times',\r\n        color: 'danger',\r\n        percentage: workingDays > 0 ? ((workingDays * stats.totalEmployees - stats.totalPresentDays) / (workingDays * stats.totalEmployees)) * 100 : 0,\r\n        subtitle: `${Math.round(stats.totalAbsentDays / workingDays)} avg per day`\r\n      }\r\n    ];\r\n  });\r\n\r\n  // Table configuration\r\n  tableColumns = [\r\n    { key: 'employeeName', label: 'Employee', sortable: true },\r\n    { key: 'employeeNumber', label: 'Number', sortable: true },\r\n    { key: 'department', label: 'Department', sortable: true },\r\n    { key: 'totalWorkingDays', label: 'Working Days', sortable: true },\r\n    { key: 'presentDays', label: 'Present', sortable: true },\r\n    { key: 'absentDays', label: 'Absent', sortable: true },\r\n    { key: 'lateDays', label: 'Late', sortable: true },\r\n    { key: 'overtimeDays', label: 'Overtime Days', sortable: true },\r\n    { key: 'totalWorkingHours', label: 'Total Hours', sortable: true },\r\n    { key: 'totalOvertimeHours', label: 'Overtime Hours', sortable: true },\r\n    { key: 'attendanceRate', label: 'Rate %', sortable: true },\r\n    { key: 'actions', label: 'Actions', sortable: false }\r\n  ];\r\n\r\n  // Constants for template\r\n  AttendanceStatus = AttendanceStatus;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private attendanceService: AttendanceService,\r\n    public readonly i18nService: I18nService,\r\n    private notificationService: NotificationService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.createFilterForm();\r\n    this.setupFilterConfig();\r\n    this.loadMonthlyReport();\r\n  }\r\n\r\n  private createFilterForm(): void {\r\n    const currentDate = new Date();\r\n    this.filterForm = this.fb.group({\r\n      month: [currentDate.getMonth() + 1, [Validators.required, Validators.min(1), Validators.max(12)]],\r\n      year: [currentDate.getFullYear(), [Validators.required, Validators.min(2020)]],\r\n      departmentIds: [[]],\r\n      branchIds: [[]],\r\n      employeeIds: [[]]\r\n    });\r\n\r\n    // Subscribe to form changes\r\n    this.filterForm.valueChanges.subscribe(values => {\r\n      this.currentFilters.set(values);\r\n    });\r\n  }\r\n\r\n  private setupFilterConfig(): void {\r\n    // For now, we'll set up basic configuration\r\n    // In a real implementation, these would be loaded from services\r\n    this.filterConfig.set({\r\n      employees: {\r\n        enabled: true,\r\n        multiple: true,\r\n        options: [] // Would be loaded from EmployeeService\r\n      },\r\n      departments: {\r\n        enabled: true,\r\n        multiple: true,\r\n        options: [] // Would be loaded from DepartmentService\r\n      },\r\n      branches: {\r\n        enabled: true,\r\n        multiple: true,\r\n        options: [] // Would be loaded from BranchService\r\n      }\r\n    });\r\n  }\r\n\r\n  loadMonthlyReport(): void {\r\n    const filters = this.currentFilters();\r\n    this.loading.set(true);\r\n    this.error.set(null);\r\n\r\n    this.attendanceService.getMonthlyReport(filters).subscribe({\r\n      next: (data) => {\r\n        this.monthlyReport.set(data);\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading monthly report:', error);\r\n        this.error.set('Failed to load monthly report');\r\n        this.loading.set(false);\r\n        this.notificationService.error('Failed to load monthly report');\r\n      }\r\n    });\r\n  }\r\n\r\n  private generateMockMonthlyReport(filters: MonthlyReportFilters): MonthlyAttendanceReport {\r\n    const workingDays = this.getWorkingDaysInMonth();\r\n    const employeeCount = 50; // Mock employee count\r\n\r\n    // Generate mock employee records\r\n    const employeeRecords: MonthlyEmployeeRecord[] = [];\r\n    for (let i = 1; i <= employeeCount; i++) {\r\n      const presentDays = Math.floor(Math.random() * (workingDays - 2)) + 18; // 18-22 present days\r\n      const absentDays = workingDays - presentDays;\r\n      const lateDays = Math.floor(Math.random() * 5); // 0-4 late days\r\n      const overtimeDays = Math.floor(Math.random() * 10); // 0-9 overtime days\r\n      const totalWorkingHours = presentDays * 8 + (Math.random() * 10 - 5); // Around 8h per day with variation\r\n      const totalOvertimeHours = overtimeDays * (Math.random() * 3 + 0.5); // 0.5-3.5h overtime per day\r\n\r\n      employeeRecords.push({\r\n        employeeId: i.toString(),\r\n        employeeName: `Employee ${i.toString().padStart(3, '0')}`,\r\n        employeeNumber: `EMP${i.toString().padStart(3, '0')}`,\r\n        department: `Department ${(i % 5) + 1}`,\r\n        branch: `Branch ${(i % 3) + 1}`,\r\n        totalWorkingDays: workingDays,\r\n        presentDays,\r\n        absentDays,\r\n        lateDays,\r\n        overtimeDays,\r\n        totalWorkingHours: Math.round(totalWorkingHours * 100) / 100,\r\n        totalOvertimeHours: Math.round(totalOvertimeHours * 100) / 100,\r\n        attendanceRate: Math.round((presentDays / workingDays) * 100),\r\n        perfectAttendance: absentDays === 0 && lateDays === 0\r\n      });\r\n    }\r\n\r\n    // Calculate summary statistics\r\n    const summaryStatistics: any = {\r\n      totalEmployees: employeeCount,\r\n      totalPresentDays: employeeRecords.reduce((sum: number, emp: any) => sum + emp.presentDays, 0),\r\n      totalAbsentDays: employeeRecords.reduce((sum: number, emp: any) => sum + emp.absentDays, 0),\r\n      totalLateDays: employeeRecords.reduce((sum: number, emp: any) => sum + emp.lateDays, 0),\r\n      totalOvertimeDays: employeeRecords.reduce((sum: number, emp: any) => sum + emp.overtimeDays, 0),\r\n      totalOvertimeHours: employeeRecords.reduce((sum: number, emp: any) => sum + emp.totalOvertimeHours, 0),\r\n      averageWorkingHours: employeeRecords.reduce((sum: number, emp: any) => sum + emp.totalWorkingHours, 0) / employeeCount,\r\n      averageAttendanceRate: employeeRecords.reduce((sum: number, emp: any) => sum + emp.attendanceRate, 0) / employeeCount,\r\n      perfectAttendanceEmployees: employeeRecords.filter((emp: any) => emp.perfectAttendance).length,\r\n      period: {\r\n        startDate: `${filters.year}-${filters.month.toString().padStart(2, '0')}-01`,\r\n        endDate: `${filters.year}-${filters.month.toString().padStart(2, '0')}-${workingDays.toString().padStart(2, '0')}`\r\n      }\r\n    };\r\n\r\n    // Generate daily breakdown for charts\r\n    const dailyBreakdown = [];\r\n    for (let day = 1; day <= workingDays; day++) {\r\n      dailyBreakdown.push({\r\n        date: `${filters.year}-${filters.month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`,\r\n        totalOvertimeHours: Math.random() * 20 + 5 // 5-25 hours per day\r\n      });\r\n    }\r\n\r\n    return {\r\n      period: summaryStatistics.period,\r\n      summary: summaryStatistics,\r\n      summaryStatistics,\r\n      employeeRecords,\r\n      dailyBreakdown\r\n    };\r\n  }\r\n\r\n  private getWorkingDaysInMonth(): number {\r\n    const filters = this.currentFilters();\r\n    const date = new Date(filters.year, filters.month - 1, 1);\r\n    const lastDay = new Date(filters.year, filters.month, 0).getDate();\r\n    let workingDays = 0;\r\n\r\n    for (let day = 1; day <= lastDay; day++) {\r\n      const currentDate = new Date(filters.year, filters.month - 1, day);\r\n      // Skip weekends (Saturday = 6, Sunday = 0)\r\n      if (currentDate.getDay() !== 0 && currentDate.getDay() !== 6) {\r\n        workingDays++;\r\n      }\r\n    }\r\n\r\n    return workingDays;\r\n  }\r\n\r\n  onFiltersChanged(filters: FilterValues): void {\r\n    // Update form with filter values if needed\r\n    if (filters.departmentIds) {\r\n      this.filterForm.patchValue({ departmentIds: filters.departmentIds });\r\n    }\r\n    if (filters.branchIds) {\r\n      this.filterForm.patchValue({ branchIds: filters.branchIds });\r\n    }\r\n    if (filters.employeeIds) {\r\n      this.filterForm.patchValue({ employeeIds: filters.employeeIds });\r\n    }\r\n  }\r\n\r\n  onFiltersApplied(): void {\r\n    this.loadMonthlyReport();\r\n  }\r\n\r\n  generateReport(): void {\r\n    this.loadMonthlyReport();\r\n  }\r\n\r\n  exportToExcel(): void {\r\n    this.exporting.set(true);\r\n\r\n    // Mock export functionality\r\n    setTimeout(() => {\r\n      this.exporting.set(false);\r\n      this.notificationService.success('Monthly report exported successfully');\r\n    }, 2000);\r\n  }\r\n\r\n  exportToPDF(): void {\r\n    this.exporting.set(true);\r\n\r\n    // Mock export functionality\r\n    setTimeout(() => {\r\n      this.exporting.set(false);\r\n      this.notificationService.success('Monthly report exported to PDF successfully');\r\n    }, 2000);\r\n  }\r\n\r\n  getMonthName(month: number): string {\r\n    const months = [\r\n      'January', 'February', 'March', 'April', 'May', 'June',\r\n      'July', 'August', 'September', 'October', 'November', 'December'\r\n    ];\r\n    return months[month - 1] || '';\r\n  }\r\n\r\n  getAttendanceRateClass(rate: number): string {\r\n    if (rate >= 95) return 'text-success';\r\n    if (rate >= 85) return 'text-warning';\r\n    return 'text-danger';\r\n  }\r\n\r\n  viewEmployeeDetails(employee: MonthlyEmployeeRecord): void {\r\n    const filters = this.currentFilters();\r\n    const year = filters.year;\r\n    const month = filters.month;\r\n\r\n    // Navigate to employee attendance history with employee ID and date range\r\n    this.router.navigate(['/attendance/employee-history'], {\r\n      queryParams: {\r\n        employeeId: employee.employeeId,\r\n        year: year,\r\n        month: month\r\n      }\r\n    });\r\n  }\r\n\r\n  onTableAction(action: { action: string; item: MonthlyEmployeeRecord }): void {\r\n    switch (action.action) {\r\n      case 'view':\r\n        this.viewEmployeeDetails(action.item);\r\n        break;\r\n      case 'export':\r\n        this.exportEmployeeReport(action.item);\r\n        break;\r\n    }\r\n  }\r\n\r\n  private exportEmployeeReport(employee: MonthlyEmployeeRecord): void {\r\n    this.notificationService.success(`Exporting report for ${employee.employeeName}`);\r\n  }\r\n}", "<div class=\"container-fluid p-4\">\r\n  <!-- Page Header -->\r\n  <app-page-header\r\n    [title]=\"i18nService.t('attendance.monthly_report')\">\r\n  </app-page-header>\r\n\r\n  <div class=\"row mb-4\">\r\n    <div class=\"col-12\">\r\n      <div class=\"d-flex justify-content-end align-items-center\">\r\n        <div>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-secondary me-2\"\r\n            (click)=\"loadMonthlyReport()\"\r\n            [disabled]=\"loading()\">\r\n            <i class=\"fa-solid fa-refresh me-2\" [class.fa-spin]=\"loading()\"></i>{{ i18nService.t('app.refresh') }}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-success me-2\"\r\n            (click)=\"exportToExcel()\"\r\n            [disabled]=\"exporting() || loading()\">\r\n            <i class=\"fa-solid fa-file-excel me-2\" [class.fa-spin]=\"exporting()\"></i>{{ i18nService.t('app.export_excel') }}\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            class=\"btn btn-outline-danger\"\r\n            (click)=\"exportToPDF()\"\r\n            [disabled]=\"exporting() || loading()\">\r\n            <i class=\"fa-solid fa-file-pdf me-2\" [class.fa-spin]=\"exporting()\"></i>{{ i18nService.t('app.export_pdf') }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Loading State -->\r\n  @if (loading()) {\r\n    <div class=\"text-center py-5\">\r\n      <div class=\"spinner-border text-primary\" role=\"status\">\r\n        <span class=\"visually-hidden\">{{ i18nService.t('app.loading') }}</span>\r\n      </div>\r\n      <p class=\"mt-2 text-muted\">{{ i18nService.t('attendance.messages.loading_monthly_report') }}</p>\r\n    </div>\r\n  }\r\n\r\n  <!-- Error State -->\r\n  @if (error()) {\r\n    <div class=\"alert alert-danger\">\r\n      <i class=\"fa-solid fa-exclamation-triangle\"></i>\r\n      {{ error() }}\r\n    </div>\r\n  }\r\n\r\n  <!-- Main Content -->\r\n  @if (!loading() && !error()) {\r\n    <div class=\"monthly-report-content\">\r\n\r\n      <!-- Filters Panel -->\r\n      <div class=\"filters-section mb-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"mb-0\">\r\n              <i class=\"fa-solid fa-filter me-2\"></i>\r\n              {{ i18nService.t('attendance.filters.title') }}\r\n            </h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <form [formGroup]=\"filterForm\" class=\"row g-3\">\r\n              <!-- Month and Year Selection -->\r\n              <div class=\"col-md-3\">\r\n                <label class=\"form-label\">{{ i18nService.t('attendance.filters.month') }}</label>\r\n                <select class=\"form-select\" formControlName=\"month\">\r\n                  <option value=\"1\">{{ i18nService.t('months.january') }}</option>\r\n                  <option value=\"2\">{{ i18nService.t('months.february') }}</option>\r\n                  <option value=\"3\">{{ i18nService.t('months.march') }}</option>\r\n                  <option value=\"4\">{{ i18nService.t('months.april') }}</option>\r\n                  <option value=\"5\">{{ i18nService.t('months.may') }}</option>\r\n                  <option value=\"6\">{{ i18nService.t('months.june') }}</option>\r\n                  <option value=\"7\">{{ i18nService.t('months.july') }}</option>\r\n                  <option value=\"8\">{{ i18nService.t('months.august') }}</option>\r\n                  <option value=\"9\">{{ i18nService.t('months.september') }}</option>\r\n                  <option value=\"10\">{{ i18nService.t('months.october') }}</option>\r\n                  <option value=\"11\">{{ i18nService.t('months.november') }}</option>\r\n                  <option value=\"12\">{{ i18nService.t('months.december') }}</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div class=\"col-md-3\">\r\n                <label class=\"form-label\">{{ i18nService.t('attendance.filters.year') }}</label>\r\n                <select class=\"form-select\" formControlName=\"year\">\r\n                  <option value=\"2024\">2024</option>\r\n                  <option value=\"2025\">2025</option>\r\n                  <option value=\"2026\">2026</option>\r\n                </select>\r\n              </div>\r\n\r\n              <!-- Filter Actions -->\r\n              <div class=\"col-md-6 d-flex align-items-end\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-primary me-2\"\r\n                  (click)=\"generateReport()\"\r\n                  [disabled]=\"loading()\">\r\n                  <i class=\"fa-solid fa-chart-bar me-1\"></i>\r\n                  {{ i18nService.t('attendance.actions.generate_report') }}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-outline-secondary\"\r\n                  (click)=\"filterForm.reset()\"\r\n                  [disabled]=\"loading()\">\r\n                  <i class=\"fa-solid fa-times me-1\"></i>\r\n                  {{ i18nService.t('app.reset') }}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Report Summary -->\r\n      @if (summaryStats()) {\r\n        <div class=\"report-summary mb-4\">\r\n          <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n            <h4 class=\"section-title\">\r\n              <i class=\"fa-solid fa-chart-line me-2\"></i>\r\n              {{ i18nService.t('attendance.monthly_summary') }}\r\n              - {{ getMonthName(currentFilters().month) }} {{ currentFilters().year }}\r\n            </h4>\r\n          </div>\r\n\r\n          <!-- Summary Cards -->\r\n          <div class=\"row mb-4\">\r\n            @for (card of summaryCards(); track card.title) {\r\n              <div class=\"col-xl-2 col-lg-4 col-md-6 mb-3\">\r\n                <app-attendance-summary-card\r\n                  [data]=\"card\"\r\n                  [loading]=\"loading()\"\r\n                  [showProgress]=\"!!card.percentage\"\r\n                  [clickable]=\"false\">\r\n                </app-attendance-summary-card>\r\n              </div>\r\n            }\r\n          </div>\r\n\r\n          <!-- Charts Section -->\r\n          <div class=\"row mb-4\">\r\n            <!-- Monthly Overview Chart -->\r\n            <div class=\"col-lg-6 mb-4\">\r\n              <div class=\"card h-100\">\r\n                <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n                  <h5 class=\"mb-0\">\r\n                    <i class=\"fa-solid fa-chart-pie text-primary me-2\"></i>\r\n                    {{ i18nService.t('attendance.charts.monthly_overview') }}\r\n                  </h5>\r\n                  <app-status-badge\r\n                    [label]=\"getMonthName(currentFilters().month)\"\r\n                    [variant]=\"'primary'\"\r\n                    [showIcon]=\"false\">\r\n                  </app-status-badge>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                  <p class=\"text-muted small mb-3\">\r\n                    <i class=\"fa-solid fa-info-circle me-1\"></i>\r\n                    {{ i18nService.t('attendance.chart.descriptions.monthly_overview') }}\r\n                  </p>\r\n                  <app-attendance-chart\r\n                    chartType=\"doughnut\"\r\n                    [data]=\"attendanceOverviewChart()\"\r\n                    [loading]=\"loading()\"\r\n                    [height]=\"300\">\r\n                  </app-attendance-chart>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Overtime Trend Chart -->\r\n            <div class=\"col-lg-6 mb-4\">\r\n              <div class=\"card h-100\">\r\n                <div class=\"card-header d-flex justify-content-between align-items-center\">\r\n                  <h5 class=\"mb-0\">\r\n                    <i class=\"fa-solid fa-chart-line text-info me-2\"></i>\r\n                    {{ i18nService.t('attendance.charts.overtime_trend') }}\r\n                  </h5>\r\n                  <app-status-badge\r\n                    [label]=\"i18nService.t('attendance.dashboard.daily')\"\r\n                    [variant]=\"'info'\"\r\n                    [showIcon]=\"false\">\r\n                  </app-status-badge>\r\n                </div>\r\n                <div class=\"card-body\">\r\n                  <p class=\"text-muted small mb-3\">\r\n                    <i class=\"fa-solid fa-info-circle me-1\"></i>\r\n                    {{ i18nService.t('attendance.chart.descriptions.overtime_trend') }}\r\n                  </p>\r\n                  <app-attendance-chart\r\n                    chartType=\"line\"\r\n                    [data]=\"overtimeTrendChart()\"\r\n                    [loading]=\"loading()\"\r\n                    [height]=\"300\">\r\n                  </app-attendance-chart>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      }\r\n\r\n      <!-- Employee Records Table -->\r\n      <div class=\"employee-records-section\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <div class=\"d-flex justify-content-between align-items-center\">\r\n              <h5 class=\"mb-0\">\r\n                <i class=\"fa-solid fa-table me-2\"></i>\r\n                {{ i18nService.t('attendance.employee_records') }}\r\n              </h5>\r\n              <app-status-badge\r\n                [label]=\"reportData().length + ' ' + i18nService.t('attendance.employees')\"\r\n                [variant]=\"'light'\"\r\n                [showIcon]=\"false\">\r\n              </app-status-badge>\r\n            </div>\r\n          </div>\r\n          <div class=\"card-body p-0\">\r\n            <app-data-table\r\n              [data]=\"reportData()\"\r\n              [columns]=\"tableColumns\"\r\n              [loading]=\"loading()\"\r\n              [searchable]=\"true\"\r\n              [sortable]=\"true\"\r\n              [paginated]=\"true\"\r\n              [pageSize]=\"10\"\r\n              [exportable]=\"true\"\r\n              (actionClick)=\"onTableAction($event)\">\r\n\r\n              <ng-template #cellTemplate let-item let-column=\"column\">\r\n                @if (column.key === 'attendanceRate') {\r\n                  <span [class]=\"getAttendanceRateClass(item.attendanceRate)\">\r\n                    {{ item.attendanceRate | number:'1.2-2' }}%\r\n                  </span>\r\n                } @else if (column.key === 'totalWorkingHours') {\r\n                  {{ item.totalWorkingHours | number:'1.2-2' }}\r\n                } @else if (column.key === 'totalOvertimeHours') {\r\n                  {{ item.totalOvertimeHours | number:'1.2-2' }}\r\n                } @else {\r\n                  {{ item[column.key] }}\r\n                }\r\n              </ng-template>\r\n            </app-data-table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Export Options -->\r\n      <div class=\"mt-4\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h5 class=\"mb-0\">\r\n              <i class=\"fa-solid fa-download me-2\"></i>\r\n              {{ i18nService.t('attendance.export_options') }}\r\n            </h5>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-4\">\r\n                <div class=\"export-option-card\">\r\n                  <div class=\"export-icon text-success\">\r\n                    <i class=\"fa-solid fa-file-excel fa-2x\"></i>\r\n                  </div>\r\n                  <h6>{{ i18nService.t('app.export_excel') }}</h6>\r\n                  <p class=\"text-muted small\">{{ i18nService.t('attendance.export.excel_description') }}</p>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-success btn-sm\"\r\n                    (click)=\"exportToExcel()\"\r\n                    [disabled]=\"exporting()\">\r\n                    <i class=\"fa-solid fa-download me-1\"></i>\r\n                    {{ i18nService.t('app.download') }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-4\">\r\n                <div class=\"export-option-card\">\r\n                  <div class=\"export-icon text-danger\">\r\n                    <i class=\"fa-solid fa-file-pdf fa-2x\"></i>\r\n                  </div>\r\n                  <h6>{{ i18nService.t('app.export_pdf') }}</h6>\r\n                  <p class=\"text-muted small\">{{ i18nService.t('attendance.export.pdf_description') }}</p>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-danger btn-sm\"\r\n                    (click)=\"exportToPDF()\"\r\n                    [disabled]=\"exporting()\">\r\n                    <i class=\"fa-solid fa-download me-1\"></i>\r\n                    {{ i18nService.t('app.download') }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"col-md-4\">\r\n                <div class=\"export-option-card\">\r\n                  <div class=\"export-icon text-info\">\r\n                    <i class=\"fa-solid fa-envelope fa-2x\"></i>\r\n                  </div>\r\n                  <h6>{{ i18nService.t('attendance.export.email_report') }}</h6>\r\n                  <p class=\"text-muted small\">{{ i18nService.t('attendance.export.email_description') }}</p>\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-info btn-sm\"\r\n                    [disabled]=\"true\">\r\n                    <i class=\"fa-solid fa-envelope me-1\"></i>\r\n                    {{ i18nService.t('app.coming_soon') }}\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  }\r\n</div>"],
  "mappings": "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",
  "names": []
}
