import{a as r}from"./chunk-CQWUHIOF.js";import{L as n,P as o,jc as a,kc as p,n as i}from"./chunk-LHYYCVNR.js";var b=class s{constructor(e){this.http=e}baseUrl=`${r.apiUrl}/api/v1/users`;getUsers(e={}){let t=new a;return e.page&&(t=t.set("page",e.page.toString())),e.pageSize&&(t=t.set("pageSize",e.pageSize.toString())),e.search&&(t=t.set("search",e.search)),e.branchId&&(t=t.set("branchId",e.branchId.toString())),e.roleId&&(t=t.set("roleId",e.roleId.toString())),e.isActive!==void 0&&(t=t.set("isActive",e.isActive.toString())),this.http.get(this.baseUrl,{params:t})}getUserById(e){return this.http.get(`${this.baseUrl}/${e}`)}createUser(e){return this.http.post(this.baseUrl,e)}updateUser(e,t){return this.http.put(`${this.baseUrl}/${e}`,t)}deleteUser(e){return this.http.delete(`${this.baseUrl}/${e}`)}assignRole(e,t){return this.http.post(`${this.baseUrl}/${e}/roles`,t)}removeRole(e,t){return this.http.delete(`${this.baseUrl}/${e}/roles/${t}`)}assignBranch(e,t){return this.http.post(`${this.baseUrl}/${e}/branches`,t)}getRoles(){return this.http.get(`${r.apiUrl}/api/v1/roles`)}getBranches(){let e=new a().set("pageSize","1000").set("isActive","true");return this.http.get(`${r.apiUrl}/api/v1/branches`,{params:e}).pipe(i(t=>t.items||[]))}static \u0275fac=function(t){return new(t||s)(o(p))};static \u0275prov=n({token:s,factory:s.\u0275fac,providedIn:"root"})};export{b as a};
