{
  "version": 3,
  "sources": ["src/app/pages/departments/departments.service.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../../environments/environment';\nimport { \n  DepartmentDto, \n  CreateDepartmentRequest, \n  UpdateDepartmentRequest, \n  DepartmentFilter \n} from '../../shared/models/department.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DepartmentsService {\n  private http = inject(HttpClient);\n  private readonly baseUrl = `${environment.apiUrl}/api/v1/departments`;\n\n  getDepartments(filter: DepartmentFilter = {}): Observable<DepartmentDto[]> {\n    let params = new HttpParams();\n    \n    if (filter.branchId !== undefined && filter.branchId !== null) {\n      params = params.set('branchId', filter.branchId.toString());\n    }\n    if (filter.includeTree !== undefined) {\n      params = params.set('includeTree', filter.includeTree.toString());\n    }\n    if (filter.isActive !== undefined) {\n      params = params.set('isActive', filter.isActive.toString());\n    }\n    if (filter.search) {\n      params = params.set('search', filter.search);\n    }\n    if (filter.parentDepartmentId !== undefined) {\n      params = params.set('parentDepartmentId', filter.parentDepartmentId.toString());\n    }\n    if (filter.includeInactive !== undefined) {\n      params = params.set('includeInactive', filter.includeInactive.toString());\n    }\n\n    return this.http.get<DepartmentDto[]>(this.baseUrl, { params });\n  }\n\n  getDepartmentTree(branchId?: number): Observable<DepartmentDto[]> {\n    return this.getDepartments({\n      branchId,\n      includeTree: true,\n      isActive: true\n    });\n  }\n\n  getDepartmentById(id: number): Observable<DepartmentDto> {\n    return this.http.get<DepartmentDto>(`${this.baseUrl}/${id}`);\n  }\n\n  createDepartment(department: CreateDepartmentRequest): Observable<{ id: number }> {\n    return this.http.post<{ id: number }>(this.baseUrl, department);\n  }\n\n  updateDepartment(id: number, department: UpdateDepartmentRequest): Observable<void> {\n    return this.http.put<void>(`${this.baseUrl}/${id}`, department);\n  }\n\n  deleteDepartment(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n\n  // Helper method to flatten tree structure for table view\n  flattenDepartmentTree(departments: DepartmentDto[]): DepartmentDto[] {\n    const result: DepartmentDto[] = [];\n    \n    const flatten = (items: DepartmentDto[], level: number = 0) => {\n      for (const item of items) {\n        result.push({ ...item, level });\n        if (item.children && item.children.length > 0) {\n          flatten(item.children, level + 1);\n        }\n      }\n    };\n    \n    flatten(departments);\n    return result;\n  }\n\n  // Helper method to build department path\n  buildDepartmentPath(departmentId: number, allDepartments: DepartmentDto[]): string {\n    const department = allDepartments.find(d => d.id === departmentId);\n    if (!department) return '';\n    \n    if (!department.parentDepartmentId) {\n      return department.name;\n    }\n    \n    const parentPath = this.buildDepartmentPath(department.parentDepartmentId, allDepartments);\n    return `${parentPath} > ${department.name}`;\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAcM,IAAO,sBAAP,MAAO,oBAAkB;EACrB,OAAO,OAAO,UAAU;EACf,UAAU,GAAG,YAAY,MAAM;EAEhD,eAAe,SAA2B,CAAA,GAAE;AAC1C,QAAI,SAAS,IAAI,WAAU;AAE3B,QAAI,OAAO,aAAa,UAAa,OAAO,aAAa,MAAM;AAC7D,eAAS,OAAO,IAAI,YAAY,OAAO,SAAS,SAAQ,CAAE;IAC5D;AACA,QAAI,OAAO,gBAAgB,QAAW;AACpC,eAAS,OAAO,IAAI,eAAe,OAAO,YAAY,SAAQ,CAAE;IAClE;AACA,QAAI,OAAO,aAAa,QAAW;AACjC,eAAS,OAAO,IAAI,YAAY,OAAO,SAAS,SAAQ,CAAE;IAC5D;AACA,QAAI,OAAO,QAAQ;AACjB,eAAS,OAAO,IAAI,UAAU,OAAO,MAAM;IAC7C;AACA,QAAI,OAAO,uBAAuB,QAAW;AAC3C,eAAS,OAAO,IAAI,sBAAsB,OAAO,mBAAmB,SAAQ,CAAE;IAChF;AACA,QAAI,OAAO,oBAAoB,QAAW;AACxC,eAAS,OAAO,IAAI,mBAAmB,OAAO,gBAAgB,SAAQ,CAAE;IAC1E;AAEA,WAAO,KAAK,KAAK,IAAqB,KAAK,SAAS,EAAE,OAAM,CAAE;EAChE;EAEA,kBAAkB,UAAiB;AACjC,WAAO,KAAK,eAAe;MACzB;MACA,aAAa;MACb,UAAU;KACX;EACH;EAEA,kBAAkB,IAAU;AAC1B,WAAO,KAAK,KAAK,IAAmB,GAAG,KAAK,OAAO,IAAI,EAAE,EAAE;EAC7D;EAEA,iBAAiB,YAAmC;AAClD,WAAO,KAAK,KAAK,KAAqB,KAAK,SAAS,UAAU;EAChE;EAEA,iBAAiB,IAAY,YAAmC;AAC9D,WAAO,KAAK,KAAK,IAAU,GAAG,KAAK,OAAO,IAAI,EAAE,IAAI,UAAU;EAChE;EAEA,iBAAiB,IAAU;AACzB,WAAO,KAAK,KAAK,OAAa,GAAG,KAAK,OAAO,IAAI,EAAE,EAAE;EACvD;;EAGA,sBAAsB,aAA4B;AAChD,UAAM,SAA0B,CAAA;AAEhC,UAAM,UAAU,wBAAC,OAAwB,QAAgB,MAAK;AAC5D,iBAAW,QAAQ,OAAO;AACxB,eAAO,KAAK,iCAAK,OAAL,EAAW,MAAK,EAAE;AAC9B,YAAI,KAAK,YAAY,KAAK,SAAS,SAAS,GAAG;AAC7C,kBAAQ,KAAK,UAAU,QAAQ,CAAC;QAClC;MACF;IACF,GAPgB;AAShB,YAAQ,WAAW;AACnB,WAAO;EACT;;EAGA,oBAAoB,cAAsB,gBAA+B;AACvE,UAAM,aAAa,eAAe,KAAK,OAAK,EAAE,OAAO,YAAY;AACjE,QAAI,CAAC;AAAY,aAAO;AAExB,QAAI,CAAC,WAAW,oBAAoB;AAClC,aAAO,WAAW;IACpB;AAEA,UAAM,aAAa,KAAK,oBAAoB,WAAW,oBAAoB,cAAc;AACzF,WAAO,GAAG,UAAU,MAAM,WAAW,IAAI;EAC3C;;AAjF6B;cAAlB;mCAAA,qBAAkB;AAAA;cAAlB,yFAAA,qBAAkB,SAAlB,oBAAkB,WAAA,YAFjB,OAAM,CAAA;AAEd,IAAO,qBAAP;;sEAAO,oBAAkB,CAAA;UAH9B;WAAW;MACV,YAAY;KACb;;;",
  "names": []
}
