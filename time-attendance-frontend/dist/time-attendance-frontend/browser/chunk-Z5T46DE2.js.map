{
  "version": 3,
  "sources": ["src/app/shared/components/form-header/form-header.component.ts", "src/app/shared/components/form-header/form-header.component.html"],
  "sourcesContent": ["import { Component, Input, Output, EventEmitter, inject } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { I18nService } from '../../../core/i18n/i18n.service';\r\nimport { PermissionService } from '../../../core/auth/permission.service';\r\n\r\nexport interface FormHeaderBreadcrumb {\r\n  label: string;\r\n  route?: string;\r\n}\r\n\r\nexport interface FormHeaderAction {\r\n  label: string;\r\n  icon: string;\r\n  action: () => void;\r\n  type?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'outline-primary' | 'outline-secondary' | 'outline-info';\r\n  permission?: string;\r\n  disabled?: boolean;\r\n  route?: string;\r\n  routeParams?: any;\r\n}\r\n\r\nexport type FormHeaderMode = 'create' | 'edit' | 'view';\r\n\r\n@Component({\r\n  selector: 'app-form-header',\r\n  standalone: true,\r\n  imports: [CommonModule, RouterModule],\r\n  templateUrl: './form-header.component.html',\r\n  styleUrls: ['./form-header.component.css']\r\n})\r\nexport class FormHeaderComponent {\r\n  private i18n = inject(I18nService);\r\n  private permissionService = inject(PermissionService);\r\n\r\n  @Input() mode: FormHeaderMode = 'create';\r\n  @Input() title!: string;\r\n  @Input() subtitle?: string;\r\n  @Input() breadcrumbs: FormHeaderBreadcrumb[] = [];\r\n  @Input() actions: FormHeaderAction[] = [];\r\n  @Input() loading = false;\r\n  @Input() entityId?: string | number;\r\n  @Input() moduleName!: string;\r\n  @Input() moduleRoute!: string;\r\n\r\n  @Output() actionClicked = new EventEmitter<string>();\r\n\r\n  get t() {\r\n    return this.i18n.t.bind(this.i18n);\r\n  }\r\n\r\n  get visibleActions(): FormHeaderAction[] {\r\n    return this.actions.filter(action => {\r\n      if (action.permission) {\r\n        return this.permissionService.has(action.permission);\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  get defaultActions(): FormHeaderAction[] {\r\n    const actions: FormHeaderAction[] = [];\r\n\r\n    // Add mode-specific default actions\r\n    if (this.mode === 'edit' && this.entityId) {\r\n      actions.push({\r\n        label: this.t('common.view_details'),\r\n        icon: 'fa-solid fa-eye',\r\n        type: 'outline-info',\r\n        route: `/${this.moduleRoute}/${this.entityId}/view`,\r\n        action: () => {}\r\n      });\r\n    }\r\n\r\n    if (this.mode === 'view' && this.entityId) {\r\n      const editPermission = this.getEditPermission();\r\n      if (!editPermission || this.permissionService.has(editPermission)) {\r\n        actions.push({\r\n          label: this.t('common.edit'),\r\n          icon: 'fa-solid fa-edit',\r\n          type: 'primary',\r\n          route: `/${this.moduleRoute}/${this.entityId}/edit`,\r\n          action: () => {}\r\n        });\r\n      }\r\n    }\r\n\r\n    // Always add back button\r\n    actions.push({\r\n      label: this.t('common.back'),\r\n      icon: 'fa-solid fa-arrow-left',\r\n      type: 'outline-secondary',\r\n      route: `/${this.moduleRoute}`,\r\n      action: () => {}\r\n    });\r\n\r\n    return actions;\r\n  }\r\n\r\n  get allActions(): FormHeaderAction[] {\r\n    return [...this.visibleActions, ...this.defaultActions];\r\n  }\r\n\r\n  get defaultBreadcrumbs(): FormHeaderBreadcrumb[] {\r\n    const breadcrumbs: FormHeaderBreadcrumb[] = [\r\n      { label: this.t('dashboard.title'), route: '/dashboard' }\r\n    ];\r\n\r\n    if (this.moduleName && this.moduleRoute) {\r\n      breadcrumbs.push({\r\n        label: this.t(`${this.moduleName}.title`),\r\n        route: `/${this.moduleRoute}`\r\n      });\r\n    }\r\n\r\n    // Add current page breadcrumb\r\n    let currentLabel = '';\r\n    switch (this.mode) {\r\n      case 'create':\r\n        currentLabel = this.t(`${this.moduleName}.create`);\r\n        break;\r\n      case 'edit':\r\n        currentLabel = this.t(`${this.moduleName}.edit`);\r\n        break;\r\n      case 'view':\r\n        currentLabel = this.t(`${this.moduleName}.view_details`);\r\n        break;\r\n    }\r\n\r\n    if (currentLabel) {\r\n      breadcrumbs.push({ label: currentLabel });\r\n    }\r\n\r\n    return breadcrumbs;\r\n  }\r\n\r\n  get allBreadcrumbs(): FormHeaderBreadcrumb[] {\r\n    return this.breadcrumbs.length > 0 ? this.breadcrumbs : this.defaultBreadcrumbs;\r\n  }\r\n\r\n  onActionClick(action: FormHeaderAction, event?: Event): void {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    if (action.disabled || this.loading) {\r\n      return;\r\n    }\r\n\r\n    if (action.action) {\r\n      action.action();\r\n    }\r\n\r\n    this.actionClicked.emit(action.label);\r\n  }\r\n\r\n  getButtonClass(action: FormHeaderAction): string {\r\n    const baseClass = 'btn';\r\n    const typeClass = action.type ? `btn-${action.type}` : 'btn-secondary';\r\n    const disabledClass = (action.disabled || this.loading) ? 'disabled' : '';\r\n\r\n    return `${baseClass} ${typeClass} ${disabledClass}`.trim();\r\n  }\r\n\r\n  private getEditPermission(): string | null {\r\n    // Map common module names to their edit permissions\r\n    const permissionMap: { [key: string]: string } = {\r\n      'employees': 'employee.update',\r\n      'users': 'user.update',\r\n      'roles': 'role.update',\r\n      'branches': 'branch.update',\r\n      'departments': 'department.update',\r\n      'shifts': 'shift.update',\r\n      'vacation-types': 'vacationType.update',\r\n      'public-holidays': 'publicHoliday.update',\r\n      'overtime-configurations': 'settings.update',\r\n      'excuse-policies': 'excuse.update',\r\n      'employee-vacations': 'vacation.update',\r\n      'employee-excuses': 'excuse.update'\r\n    };\r\n\r\n    return permissionMap[this.moduleRoute] || null;\r\n  }\r\n}", "<div class=\"app-page-header\">\r\n  <div class=\"app-page-header-content\">\r\n    <div>\r\n      <h2>{{ title }}</h2>\r\n      @if (subtitle) {\r\n        <p class=\"text-muted mb-0\">{{ subtitle }}</p>\r\n      }\r\n      <nav aria-label=\"breadcrumb\" class=\"app-breadcrumb-wrapper\">\r\n        <ol class=\"breadcrumb app-breadcrumb\">\r\n          @for (breadcrumb of allBreadcrumbs; track breadcrumb.label; let isLast = $last) {\r\n            <li class=\"breadcrumb-item\" [class.active]=\"isLast\">\r\n              @if (breadcrumb.route && !isLast) {\r\n                <a [routerLink]=\"breadcrumb.route\">{{ breadcrumb.label }}</a>\r\n              } @else {\r\n                {{ breadcrumb.label }}\r\n              }\r\n            </li>\r\n          }\r\n        </ol>\r\n      </nav>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"app-page-header-actions\">\r\n    @if (loading) {\r\n      <div class=\"d-flex align-items-center\">\r\n        <div class=\"spinner-border spinner-border-sm me-2\" role=\"status\">\r\n          <span class=\"visually-hidden\">{{ t('common.loading') }}</span>\r\n        </div>\r\n        <span class=\"text-muted\">{{ t('common.loading') }}</span>\r\n      </div>\r\n    } @else {\r\n      <div class=\"app-action-buttons\">\r\n        @for (action of allActions; track action.label) {\r\n          @if (action.route) {\r\n            <a\r\n              [routerLink]=\"action.route\"\r\n              [queryParams]=\"action.routeParams\"\r\n              [class]=\"getButtonClass(action)\"\r\n              [attr.disabled]=\"action.disabled || loading ? true : null\"\r\n              (click)=\"onActionClick(action, $event)\">\r\n              <i [class]=\"action.icon + ' me-2'\"></i>\r\n              {{ action.label }}\r\n            </a>\r\n          } @else {\r\n            <button\r\n              type=\"button\"\r\n              [class]=\"getButtonClass(action)\"\r\n              [disabled]=\"action.disabled || loading\"\r\n              (click)=\"onActionClick(action)\">\r\n              <i [class]=\"action.icon + ' me-2'\"></i>\r\n              {{ action.label }}\r\n            </button>\r\n          }\r\n        }\r\n      </div>\r\n    }\r\n  </div>\r\n</div>"],
  "mappings": "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",
  "names": []
}
