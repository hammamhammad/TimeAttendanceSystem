{
  "version": 3,
  "sources": ["src/app/pages/branches/branches.service.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Branch, BranchesResponse, CreateBranchRequest, UpdateBranchRequest } from '../../shared/models/branch.model';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BranchesService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/api/v1/branches`;\n\n  getBranches(\n    page: number = 1, \n    pageSize: number = 10, \n    search?: string, \n    isActive?: boolean\n  ): Observable<BranchesResponse> {\n    let httpParams = new HttpParams()\n      .set('page', page.toString())\n      .set('pageSize', pageSize.toString());\n\n    if (search) {\n      httpParams = httpParams.set('search', search);\n    }\n\n    if (isActive !== undefined) {\n      httpParams = httpParams.set('isActive', isActive.toString());\n    }\n\n    return this.http.get<BranchesResponse>(this.baseUrl, { params: httpParams });\n  }\n\n  createBranch(branch: CreateBranchRequest): Observable<{ id: number }> {\n    return this.http.post<{ id: number }>(this.baseUrl, branch);\n  }\n\n  updateBranch(id: number, branch: UpdateBranchRequest): Observable<void> {\n    return this.http.put<void>(`${this.baseUrl}/${id}`, branch);\n  }\n\n  deleteBranch(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n\n  getBranchesForDropdown(): Observable<Branch[]> {\n    return this.http.get<BranchesResponse>(`${this.baseUrl}?pageSize=100&isActive=true`)\n      .pipe(\n        map(response => response.items)\n      );\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAUM,IAAO,mBAAP,MAAO,iBAAe;EAClB,OAAO,OAAO,UAAU;EACxB,UAAU,GAAG,YAAY,MAAM;EAEvC,YACE,OAAe,GACf,WAAmB,IACnB,QACA,UAAkB;AAElB,QAAI,aAAa,IAAI,WAAU,EAC5B,IAAI,QAAQ,KAAK,SAAQ,CAAE,EAC3B,IAAI,YAAY,SAAS,SAAQ,CAAE;AAEtC,QAAI,QAAQ;AACV,mBAAa,WAAW,IAAI,UAAU,MAAM;IAC9C;AAEA,QAAI,aAAa,QAAW;AAC1B,mBAAa,WAAW,IAAI,YAAY,SAAS,SAAQ,CAAE;IAC7D;AAEA,WAAO,KAAK,KAAK,IAAsB,KAAK,SAAS,EAAE,QAAQ,WAAU,CAAE;EAC7E;EAEA,aAAa,QAA2B;AACtC,WAAO,KAAK,KAAK,KAAqB,KAAK,SAAS,MAAM;EAC5D;EAEA,aAAa,IAAY,QAA2B;AAClD,WAAO,KAAK,KAAK,IAAU,GAAG,KAAK,OAAO,IAAI,EAAE,IAAI,MAAM;EAC5D;EAEA,aAAa,IAAU;AACrB,WAAO,KAAK,KAAK,OAAa,GAAG,KAAK,OAAO,IAAI,EAAE,EAAE;EACvD;EAEA,yBAAsB;AACpB,WAAO,KAAK,KAAK,IAAsB,GAAG,KAAK,OAAO,6BAA6B,EAChF,KACC,IAAI,cAAY,SAAS,KAAK,CAAC;EAErC;;AA1C0B;cAAf;mCAAA,kBAAe;AAAA;cAAf,sFAAA,kBAAe,SAAf,iBAAe,WAAA,YAFd,OAAM,CAAA;AAEd,IAAO,kBAAP;;sEAAO,iBAAe,CAAA;UAH3B;WAAW;MACV,YAAY;KACb;;;",
  "names": []
}
