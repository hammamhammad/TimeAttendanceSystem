import{a as Q}from"./chunk-I3BKX7JQ.js";import{a as K}from"./chunk-QS4HD2YC.js";import{a as Y}from"./chunk-SRPEDAT4.js";import{a as J}from"./chunk-H5EPUHY6.js";import"./chunk-5MHFUEKN.js";import"./chunk-Y62N6K5S.js";import{b as R,c as H,e as k,f as W,g as V,h as N,i as A,j as q,t as L,u as B,x as G}from"./chunk-VRETN7JA.js";import{a as j}from"./chunk-HHXRLUSQ.js";import"./chunk-O7LPL3AF.js";import{b as z}from"./chunk-3VZ5QHEY.js";import{g as I,m as T}from"./chunk-TWXUAMJ4.js";import{Ab as _,Bb as r,Cb as s,Db as g,Ea as x,Ib as v,Jb as u,Kb as p,R as S,W as d,X as c,Xa as h,Ya as b,bb as M,cb as i,da as P,db as n,eb as O,lb as w,nb as D,pb as y,ta as t,wc as E}from"./chunk-JSQL33QG.js";import{d as F}from"./chunk-DGAILPFQ.js";function X(m,a){if(m&1&&(i(0,"div",3),O(1,"i",58),r(2),n()),m&2){let l=y();t(2),g(" ",l.error()," ")}}function Z(m,a){if(m&1&&(i(0,"div",16),r(1),n()),m&2){let l=y();t(),s(l.getError("general"))}}function $(m,a){if(m&1&&(i(0,"div",24),r(1),n()),m&2){let l=y();t(),s(l.getError("normalDayRate"))}}function ee(m,a){if(m&1&&(i(0,"div",24),r(1),n()),m&2){let l=y();t(),s(l.getError("publicHolidayRate"))}}function te(m,a){if(m&1&&(i(0,"div",24),r(1),n()),m&2){let l=y();t(),s(l.getError("offDayRate"))}}function ie(m,a){if(m&1&&(i(0,"div",24),r(1),n()),m&2){let l=y();t(),s(l.getError("maxPreShiftOvertimeHours"))}}function ne(m,a){if(m&1&&(i(0,"div",24),r(1),n()),m&2){let l=y();t(),s(l.getError("maxPostShiftOvertimeHours"))}}function oe(m,a){if(m&1&&(i(0,"div",24),r(1),n()),m&2){let l=y();t(),s(l.getError("minimumOvertimeMinutes"))}}function re(m,a){if(m&1&&(i(0,"div",24),r(1),n()),m&2){let l=y();t(),s(l.getError("overtimeGracePeriodMinutes"))}}function ae(m,a){if(m&1&&(i(0,"div",24),r(1),n()),m&2){let l=y();t(),s(l.getError("roundingIntervalMinutes"))}}function me(m,a){if(m&1&&(i(0,"div",24),r(1),n()),m&2){let l=y();t(),s(l.getError("effectiveFromDate"))}}function le(m,a){if(m&1&&(i(0,"div",24),r(1),n()),m&2){let l=y();t(),s(l.getError("effectiveToDate"))}}function se(m,a){m&1&&O(0,"i",56)}function de(m,a){m&1&&O(0,"i",57)}var U=class m{overtimeService=S(Q);router=S(I);notificationService=S(j);confirmationService=S(J);i18n=S(z);loading=P(!1);submitting=P(!1);error=P(null);configForm={enablePreShiftOvertime:!1,enablePostShiftOvertime:!0,normalDayRate:1.5,publicHolidayRate:2,offDayRate:1.5,minimumOvertimeMinutes:15,considerFlexibleTime:!0,maxPreShiftOvertimeHours:2,maxPostShiftOvertimeHours:4,requireApproval:!1,overtimeGracePeriodMinutes:5,weekendAsOffDay:!0,roundingIntervalMinutes:15,policyNotes:"",effectiveFromDate:this.getTodayDate(),effectiveToDate:""};validationErrors=P({});ngOnInit(){}t(a){return this.i18n.t(a)}getTodayDate(){return new Date().toISOString().split("T")[0]}validateForm(){let a={};if(this.configForm.effectiveFromDate||(a.effectiveFromDate=this.t("settings.overtime.validation.effectiveFromRequired")),this.configForm.normalDayRate<=0&&(a.normalDayRate=this.t("settings.overtime.validation.ratePositive")),this.configForm.publicHolidayRate<=0&&(a.publicHolidayRate=this.t("settings.overtime.validation.ratePositive")),this.configForm.offDayRate<=0&&(a.offDayRate=this.t("settings.overtime.validation.ratePositive")),this.configForm.minimumOvertimeMinutes<0&&(a.minimumOvertimeMinutes=this.t("settings.overtime.validation.minimumOvertimePositive")),this.configForm.overtimeGracePeriodMinutes<0&&(a.overtimeGracePeriodMinutes=this.t("settings.overtime.validation.gracePeriodPositive")),this.configForm.roundingIntervalMinutes<=0&&(a.roundingIntervalMinutes=this.t("settings.overtime.validation.roundingIntervalPositive")),this.configForm.maxPreShiftOvertimeHours<0&&(a.maxPreShiftOvertimeHours=this.t("settings.overtime.validation.maxHoursPositive")),this.configForm.maxPostShiftOvertimeHours<0&&(a.maxPostShiftOvertimeHours=this.t("settings.overtime.validation.maxHoursPositive")),this.configForm.effectiveToDate&&this.configForm.effectiveFromDate){let l=new Date(this.configForm.effectiveFromDate);new Date(this.configForm.effectiveToDate)<=l&&(a.effectiveToDate=this.t("settings.overtime.validation.effectiveToAfterFrom"))}return!this.configForm.enablePreShiftOvertime&&!this.configForm.enablePostShiftOvertime&&(a.general=this.t("settings.overtime.validation.atLeastOneOvertimeType")),this.validationErrors.set(a),Object.keys(a).length===0}hasError(a){return!!this.validationErrors()[a]}getError(a){return this.validationErrors()[a]||""}onSubmit(){if(!this.validateForm()){this.error.set(this.t("settings.overtime.validation.pleaseFix"));return}this.submitting.set(!0),this.error.set(null);let a={enablePreShiftOvertime:this.configForm.enablePreShiftOvertime,enablePostShiftOvertime:this.configForm.enablePostShiftOvertime,normalDayRate:this.configForm.normalDayRate,publicHolidayRate:this.configForm.publicHolidayRate,offDayRate:this.configForm.offDayRate,minimumOvertimeMinutes:this.configForm.minimumOvertimeMinutes,considerFlexibleTime:this.configForm.considerFlexibleTime,maxPreShiftOvertimeHours:this.configForm.maxPreShiftOvertimeHours,maxPostShiftOvertimeHours:this.configForm.maxPostShiftOvertimeHours,requireApproval:this.configForm.requireApproval,overtimeGracePeriodMinutes:this.configForm.overtimeGracePeriodMinutes,weekendAsOffDay:this.configForm.weekendAsOffDay,roundingIntervalMinutes:this.configForm.roundingIntervalMinutes,policyNotes:this.configForm.policyNotes.trim(),effectiveFromDate:this.configForm.effectiveFromDate,effectiveToDate:this.configForm.effectiveToDate||void 0};this.overtimeService.createOvertimeConfiguration(a).subscribe({next:()=>{this.notificationService.success(this.t("app.success"),this.t("settings.overtime.policyCreatedSuccessfully")),this.router.navigate(["/settings/overtime"])},error:l=>{console.error("Failed to create overtime configuration:",l),this.submitting.set(!1),l.status===400&&l.error?.errors?(this.validationErrors.set(l.error.errors),this.error.set(this.t("settings.overtime.validation.serverErrors"))):(this.error.set(this.t("errors.server")),this.notificationService.error(this.t("app.error"),this.t("errors.server")))}})}onCancel(){return F(this,null,function*(){this.hasFormChanges()&&!(yield this.confirmationService.confirm({title:this.t("common.unsavedChanges"),message:this.t("common.unsavedChangesMessage"),confirmText:this.t("common.discard"),cancelText:this.t("common.stay"),confirmButtonClass:"btn-warning",icon:"fa-exclamation-triangle",iconClass:"text-warning"})).confirmed||this.router.navigate(["/settings/overtime"])})}hasFormChanges(){let a={enablePreShiftOvertime:!1,enablePostShiftOvertime:!0,normalDayRate:1.5,publicHolidayRate:2,offDayRate:1.5,minimumOvertimeMinutes:15,considerFlexibleTime:!0,maxPreShiftOvertimeHours:2,maxPostShiftOvertimeHours:4,requireApproval:!1,overtimeGracePeriodMinutes:5,weekendAsOffDay:!0,roundingIntervalMinutes:15,policyNotes:"",effectiveFromDate:this.getTodayDate(),effectiveToDate:""};return JSON.stringify(this.configForm)!==JSON.stringify(a)}onReset(){this.configForm={enablePreShiftOvertime:!1,enablePostShiftOvertime:!0,normalDayRate:1.5,publicHolidayRate:2,offDayRate:1.5,minimumOvertimeMinutes:15,considerFlexibleTime:!0,maxPreShiftOvertimeHours:2,maxPostShiftOvertimeHours:4,requireApproval:!1,overtimeGracePeriodMinutes:5,weekendAsOffDay:!0,roundingIntervalMinutes:15,policyNotes:"",effectiveFromDate:this.getTodayDate(),effectiveToDate:""},this.validationErrors.set({}),this.error.set(null)}isFieldInvalid(a){return this.hasError(a)}getFieldClasses(a){let l="form-control";return this.isFieldInvalid(a)?`${l} is-invalid`:l}static \u0275fac=function(l){return new(l||m)};static \u0275cmp=x({type:m,selectors:[["app-create-overtime-configuration"]],decls:193,vars:98,consts:[["formRef","ngForm"],[1,"container-fluid"],["mode","create","moduleName","settings","moduleRoute","settings/overtime",3,"title","loading"],["role","alert",1,"alert","alert-danger"],[3,"ngSubmit"],[1,"row"],[1,"col-lg-8"],[3,"title"],[1,"card-body"],[1,"col-md-6"],[1,"form-check","mb-3"],["type","checkbox","id","enablePreShiftOvertime","name","enablePreShiftOvertime",1,"form-check-input",3,"ngModelChange","ngModel"],["for","enablePreShiftOvertime",1,"form-check-label"],[1,"text-muted"],["type","checkbox","id","enablePostShiftOvertime","name","enablePostShiftOvertime",1,"form-check-input",3,"ngModelChange","ngModel"],["for","enablePostShiftOvertime",1,"form-check-label"],[1,"text-danger","small"],[1,"col-md-4"],[1,"mb-3"],["for","normalDayRate",1,"form-label"],[1,"text-danger"],[1,"input-group"],["type","number","id","normalDayRate","name","normalDayRate","step","0.1","min","1","required","",3,"ngModelChange","ngModel"],[1,"input-group-text"],[1,"invalid-feedback","d-block"],[1,"form-text"],["for","publicHolidayRate",1,"form-label"],["type","number","id","publicHolidayRate","name","publicHolidayRate","step","0.1","min","1","required","",3,"ngModelChange","ngModel"],["for","offDayRate",1,"form-label"],["type","number","id","offDayRate","name","offDayRate","step","0.1","min","1","required","",3,"ngModelChange","ngModel"],["for","maxPreShiftOvertimeHours",1,"form-label"],["type","number","id","maxPreShiftOvertimeHours","name","maxPreShiftOvertimeHours","step","0.5","min","0",3,"ngModelChange","ngModel"],["for","maxPostShiftOvertimeHours",1,"form-label"],["type","number","id","maxPostShiftOvertimeHours","name","maxPostShiftOvertimeHours","step","0.5","min","0",3,"ngModelChange","ngModel"],["for","minimumOvertimeMinutes",1,"form-label"],["type","number","id","minimumOvertimeMinutes","name","minimumOvertimeMinutes","min","0",3,"ngModelChange","ngModel"],["for","overtimeGracePeriodMinutes",1,"form-label"],["type","number","id","overtimeGracePeriodMinutes","name","overtimeGracePeriodMinutes","min","0",3,"ngModelChange","ngModel"],["for","roundingIntervalMinutes",1,"form-label"],["type","number","id","roundingIntervalMinutes","name","roundingIntervalMinutes","min","1",3,"ngModelChange","ngModel"],["type","checkbox","id","considerFlexibleTime","name","considerFlexibleTime",1,"form-check-input",3,"ngModelChange","ngModel"],["for","considerFlexibleTime",1,"form-check-label"],["type","checkbox","id","weekendAsOffDay","name","weekendAsOffDay",1,"form-check-input",3,"ngModelChange","ngModel"],["for","weekendAsOffDay",1,"form-check-label"],["for","policyNotes",1,"form-label"],["id","policyNotes","name","policyNotes","rows","4",1,"form-control",3,"ngModelChange","ngModel","placeholder"],[1,"col-lg-4"],["for","effectiveFromDate",1,"form-label"],["type","date","id","effectiveFromDate","name","effectiveFromDate","required","",3,"ngModelChange","ngModel"],["for","effectiveToDate",1,"form-label"],["type","date","id","effectiveToDate","name","effectiveToDate",3,"ngModelChange","ngModel"],["type","checkbox","id","requireApproval","name","requireApproval",1,"form-check-input",3,"ngModelChange","ngModel"],["for","requireApproval",1,"form-check-label"],[1,"card"],[1,"d-grid","gap-2"],["type","submit",1,"btn","btn-primary",3,"disabled"],[1,"fa-solid","fa-spinner","fa-spin","me-2"],[1,"fa-solid","fa-save","me-2"],[1,"fa-solid","fa-exclamation-triangle","me-2"]],template:function(l,e){if(l&1){let f=w();i(0,"div",1),O(1,"app-form-header",2),h(2,X,3,1,"div",3),i(3,"form",4,0),D("ngSubmit",function(){return d(f),c(e.onSubmit())}),i(5,"div",5)(6,"div",6)(7,"app-form-section",7)(8,"div",8)(9,"div",5)(10,"div",9)(11,"div",10)(12,"input",11),p("ngModelChange",function(o){return d(f),u(e.configForm.enablePreShiftOvertime,o)||(e.configForm.enablePreShiftOvertime=o),c(o)}),n(),i(13,"label",12)(14,"strong"),r(15),n(),O(16,"br"),i(17,"small",13),r(18),n()()()(),i(19,"div",9)(20,"div",10)(21,"input",14),p("ngModelChange",function(o){return d(f),u(e.configForm.enablePostShiftOvertime,o)||(e.configForm.enablePostShiftOvertime=o),c(o)}),n(),i(22,"label",15)(23,"strong"),r(24),n(),O(25,"br"),i(26,"small",13),r(27),n()()()()(),h(28,Z,2,1,"div",16),n()(),i(29,"app-form-section",7)(30,"div",8)(31,"div",5)(32,"div",17)(33,"div",18)(34,"label",19),r(35),i(36,"span",20),r(37,"*"),n()(),i(38,"div",21)(39,"input",22),p("ngModelChange",function(o){return d(f),u(e.configForm.normalDayRate,o)||(e.configForm.normalDayRate=o),c(o)}),n(),i(40,"span",23),r(41,"x"),n()(),h(42,$,2,1,"div",24),i(43,"div",25),r(44),n()()(),i(45,"div",17)(46,"div",18)(47,"label",26),r(48),i(49,"span",20),r(50,"*"),n()(),i(51,"div",21)(52,"input",27),p("ngModelChange",function(o){return d(f),u(e.configForm.publicHolidayRate,o)||(e.configForm.publicHolidayRate=o),c(o)}),n(),i(53,"span",23),r(54,"x"),n()(),h(55,ee,2,1,"div",24),i(56,"div",25),r(57),n()()(),i(58,"div",17)(59,"div",18)(60,"label",28),r(61),i(62,"span",20),r(63,"*"),n()(),i(64,"div",21)(65,"input",29),p("ngModelChange",function(o){return d(f),u(e.configForm.offDayRate,o)||(e.configForm.offDayRate=o),c(o)}),n(),i(66,"span",23),r(67,"x"),n()(),h(68,te,2,1,"div",24),i(69,"div",25),r(70),n()()()()()(),i(71,"app-form-section",7)(72,"div",8)(73,"div",5)(74,"div",9)(75,"div",18)(76,"label",30),r(77),n(),i(78,"div",21)(79,"input",31),p("ngModelChange",function(o){return d(f),u(e.configForm.maxPreShiftOvertimeHours,o)||(e.configForm.maxPreShiftOvertimeHours=o),c(o)}),n(),i(80,"span",23),r(81),n()(),h(82,ie,2,1,"div",24),i(83,"div",25),r(84),n()()(),i(85,"div",9)(86,"div",18)(87,"label",32),r(88),n(),i(89,"div",21)(90,"input",33),p("ngModelChange",function(o){return d(f),u(e.configForm.maxPostShiftOvertimeHours,o)||(e.configForm.maxPostShiftOvertimeHours=o),c(o)}),n(),i(91,"span",23),r(92),n()(),h(93,ne,2,1,"div",24),i(94,"div",25),r(95),n()()()()()(),i(96,"app-form-section",7)(97,"div",8)(98,"div",5)(99,"div",17)(100,"div",18)(101,"label",34),r(102),n(),i(103,"div",21)(104,"input",35),p("ngModelChange",function(o){return d(f),u(e.configForm.minimumOvertimeMinutes,o)||(e.configForm.minimumOvertimeMinutes=o),c(o)}),n(),i(105,"span",23),r(106),n()(),h(107,oe,2,1,"div",24),i(108,"div",25),r(109),n()()(),i(110,"div",17)(111,"div",18)(112,"label",36),r(113),n(),i(114,"div",21)(115,"input",37),p("ngModelChange",function(o){return d(f),u(e.configForm.overtimeGracePeriodMinutes,o)||(e.configForm.overtimeGracePeriodMinutes=o),c(o)}),n(),i(116,"span",23),r(117),n()(),h(118,re,2,1,"div",24),i(119,"div",25),r(120),n()()(),i(121,"div",17)(122,"div",18)(123,"label",38),r(124),n(),i(125,"div",21)(126,"input",39),p("ngModelChange",function(o){return d(f),u(e.configForm.roundingIntervalMinutes,o)||(e.configForm.roundingIntervalMinutes=o),c(o)}),n(),i(127,"span",23),r(128),n()(),h(129,ae,2,1,"div",24),i(130,"div",25),r(131),n()()()(),i(132,"div",5)(133,"div",9)(134,"div",10)(135,"input",40),p("ngModelChange",function(o){return d(f),u(e.configForm.considerFlexibleTime,o)||(e.configForm.considerFlexibleTime=o),c(o)}),n(),i(136,"label",41),r(137),O(138,"br"),i(139,"small",13),r(140),n()()()(),i(141,"div",9)(142,"div",10)(143,"input",42),p("ngModelChange",function(o){return d(f),u(e.configForm.weekendAsOffDay,o)||(e.configForm.weekendAsOffDay=o),c(o)}),n(),i(144,"label",43),r(145),O(146,"br"),i(147,"small",13),r(148),n()()()()()()(),i(149,"app-form-section",7)(150,"div",8)(151,"div",18)(152,"label",44),r(153),n(),i(154,"textarea",45),p("ngModelChange",function(o){return d(f),u(e.configForm.policyNotes,o)||(e.configForm.policyNotes=o),c(o)}),r(155,"              "),n(),i(156,"div",25),r(157),n()()()()(),i(158,"div",46)(159,"app-form-section",7)(160,"div",8)(161,"div",18)(162,"label",47),r(163),i(164,"span",20),r(165,"*"),n()(),i(166,"input",48),p("ngModelChange",function(o){return d(f),u(e.configForm.effectiveFromDate,o)||(e.configForm.effectiveFromDate=o),c(o)}),n(),h(167,me,2,1,"div",24),i(168,"div",25),r(169),n()(),i(170,"div",18)(171,"label",49),r(172),n(),i(173,"input",50),p("ngModelChange",function(o){return d(f),u(e.configForm.effectiveToDate,o)||(e.configForm.effectiveToDate=o),c(o)}),n(),h(174,le,2,1,"div",24),i(175,"div",25),r(176),n()()()(),i(177,"app-form-section",7)(178,"div",8)(179,"div",10)(180,"input",51),p("ngModelChange",function(o){return d(f),u(e.configForm.requireApproval,o)||(e.configForm.requireApproval=o),c(o)}),n(),i(181,"label",52),r(182),O(183,"br"),i(184,"small",13),r(185),n()()()()(),i(186,"div",53)(187,"div",8)(188,"div",54)(189,"button",55),h(190,se,1,0,"i",56)(191,de,1,0,"i",57),r(192),n()()()()()()()()}l&2&&(t(),M("title",e.t("settings.overtime.createPolicy"))("loading",e.submitting()),t(),b(e.error()?2:-1),t(5),M("title",e.t("settings.overtime.overtimeTypes")),t(5),v("ngModel",e.configForm.enablePreShiftOvertime),t(3),s(e.t("settings.overtime.enablePreShift")),t(3),s(e.t("settings.overtime.enablePreShiftDescription")),t(3),v("ngModel",e.configForm.enablePostShiftOvertime),t(3),s(e.t("settings.overtime.enablePostShift")),t(3),s(e.t("settings.overtime.enablePostShiftDescription")),t(),b(e.hasError("general")?28:-1),t(),M("title",e.t("settings.overtime.overtimeRates")),t(6),g(" ",e.t("settings.overtime.normalDayRate")," "),t(4),_(e.getFieldClasses("normalDayRate")),v("ngModel",e.configForm.normalDayRate),t(3),b(e.hasError("normalDayRate")?42:-1),t(2),s(e.t("settings.overtime.normalDayRateDescription")),t(4),g(" ",e.t("settings.overtime.publicHolidayRate")," "),t(4),_(e.getFieldClasses("publicHolidayRate")),v("ngModel",e.configForm.publicHolidayRate),t(3),b(e.hasError("publicHolidayRate")?55:-1),t(2),s(e.t("settings.overtime.publicHolidayRateDescription")),t(4),g(" ",e.t("settings.overtime.offDayRate")," "),t(4),_(e.getFieldClasses("offDayRate")),v("ngModel",e.configForm.offDayRate),t(3),b(e.hasError("offDayRate")?68:-1),t(2),s(e.t("settings.overtime.offDayRateDescription")),t(),M("title",e.t("settings.overtime.overtimeLimits")),t(6),g(" ",e.t("settings.overtime.maxPreShiftHours")," "),t(2),_(e.getFieldClasses("maxPreShiftOvertimeHours")),v("ngModel",e.configForm.maxPreShiftOvertimeHours),t(2),s(e.t("common.hours")),t(),b(e.hasError("maxPreShiftOvertimeHours")?82:-1),t(2),s(e.t("settings.overtime.maxPreShiftHoursDescription")),t(4),g(" ",e.t("settings.overtime.maxPostShiftHours")," "),t(2),_(e.getFieldClasses("maxPostShiftOvertimeHours")),v("ngModel",e.configForm.maxPostShiftOvertimeHours),t(2),s(e.t("common.hours")),t(),b(e.hasError("maxPostShiftOvertimeHours")?93:-1),t(2),s(e.t("settings.overtime.maxPostShiftHoursDescription")),t(),M("title",e.t("settings.overtime.calculationSettings")),t(6),g(" ",e.t("settings.overtime.minimumOvertimeMinutes")," "),t(2),_(e.getFieldClasses("minimumOvertimeMinutes")),v("ngModel",e.configForm.minimumOvertimeMinutes),t(2),s(e.t("common.minutes")),t(),b(e.hasError("minimumOvertimeMinutes")?107:-1),t(2),s(e.t("settings.overtime.minimumOvertimeMinutesDescription")),t(4),g(" ",e.t("settings.overtime.gracePeriodMinutes")," "),t(2),_(e.getFieldClasses("overtimeGracePeriodMinutes")),v("ngModel",e.configForm.overtimeGracePeriodMinutes),t(2),s(e.t("common.minutes")),t(),b(e.hasError("overtimeGracePeriodMinutes")?118:-1),t(2),s(e.t("settings.overtime.gracePeriodMinutesDescription")),t(4),g(" ",e.t("settings.overtime.roundingIntervalMinutes")," "),t(2),_(e.getFieldClasses("roundingIntervalMinutes")),v("ngModel",e.configForm.roundingIntervalMinutes),t(2),s(e.t("common.minutes")),t(),b(e.hasError("roundingIntervalMinutes")?129:-1),t(2),s(e.t("settings.overtime.roundingIntervalMinutesDescription")),t(4),v("ngModel",e.configForm.considerFlexibleTime),t(2),g(" ",e.t("settings.overtime.considerFlexibleTime")," "),t(3),s(e.t("settings.overtime.considerFlexibleTimeDescription")),t(3),v("ngModel",e.configForm.weekendAsOffDay),t(2),g(" ",e.t("settings.overtime.weekendAsOffDay")," "),t(3),s(e.t("settings.overtime.weekendAsOffDayDescription")),t(),M("title",e.t("settings.overtime.policyNotes")),t(4),g(" ",e.t("settings.overtime.policyNotesLabel")," "),t(),v("ngModel",e.configForm.policyNotes),M("placeholder",e.t("settings.overtime.policyNotesPlaceholder")),t(3),s(e.t("settings.overtime.policyNotesDescription")),t(2),M("title",e.t("settings.overtime.effectivePeriod")),t(4),g(" ",e.t("settings.overtime.effectiveFrom")," "),t(3),_(e.getFieldClasses("effectiveFromDate")),v("ngModel",e.configForm.effectiveFromDate),t(),b(e.hasError("effectiveFromDate")?167:-1),t(2),s(e.t("settings.overtime.effectiveFromDescription")),t(3),g(" ",e.t("settings.overtime.effectiveTo")," "),t(),_(e.getFieldClasses("effectiveToDate")),v("ngModel",e.configForm.effectiveToDate),t(),b(e.hasError("effectiveToDate")?174:-1),t(2),s(e.t("settings.overtime.effectiveToDescription")),t(),M("title",e.t("settings.overtime.additionalSettings")),t(3),v("ngModel",e.configForm.requireApproval),t(2),g(" ",e.t("settings.overtime.requireApproval")," "),t(3),s(e.t("settings.overtime.requireApprovalDescription")),t(4),M("disabled",e.submitting()),t(),b(e.submitting()?190:191),t(2),g(" ",e.submitting()?e.t("common.saving"):e.t("settings.overtime.createPolicy")," "))},dependencies:[E,G,A,H,q,R,k,W,B,L,N,V,T,K,Y],styles:[".card[_ngcontent-%COMP%]{border:1px solid rgba(0,0,0,.125);border-radius:.5rem;box-shadow:0 .125rem .25rem #00000013;transition:all .15s ease-in-out}.card[_ngcontent-%COMP%]:hover{box-shadow:0 .5rem 1rem #00000026}.card-header[_ngcontent-%COMP%]{background-color:#f8f9fa;border-bottom:1px solid rgba(0,0,0,.125);padding:1rem 1.25rem}.card-header[_ngcontent-%COMP%]   h5[_ngcontent-%COMP%]{color:#495057;font-weight:600}.form-label[_ngcontent-%COMP%]{font-weight:500;color:#495057;margin-bottom:.5rem}.form-control[_ngcontent-%COMP%]{border-radius:.375rem;border:1px solid #dee2e6;transition:all .15s ease-in-out}.form-control[_ngcontent-%COMP%]:focus{border-color:#86b7fe;box-shadow:0 0 0 .25rem #0d6efd40}.form-control.is-invalid[_ngcontent-%COMP%]{border-color:#dc3545}.form-control.is-invalid[_ngcontent-%COMP%]:focus{border-color:#dc3545;box-shadow:0 0 0 .25rem #dc354540}.input-group[_ngcontent-%COMP%]{border-radius:.375rem;overflow:hidden}.input-group-text[_ngcontent-%COMP%]{background-color:#f8f9fa;border-color:#dee2e6;color:#6c757d}.form-check-input[_ngcontent-%COMP%]{margin-top:.25rem}.form-check-label[_ngcontent-%COMP%]{cursor:pointer}.form-text[_ngcontent-%COMP%]{font-size:.875rem;color:#6c757d;margin-top:.25rem}.invalid-feedback[_ngcontent-%COMP%]{font-size:.875rem;color:#dc3545;margin-top:.25rem}.btn[_ngcontent-%COMP%]{border-radius:.375rem;transition:all .15s ease-in-out;font-weight:500}.btn[_ngcontent-%COMP%]:hover{transform:translateY(-1px)}.btn[_ngcontent-%COMP%]:disabled{transform:none}.alert[_ngcontent-%COMP%]{border-radius:.5rem;border:none;margin-bottom:1.5rem}.alert-danger[_ngcontent-%COMP%]{background:linear-gradient(135deg,#f8d7da,#f1aeb5);color:#721c24}.text-danger[_ngcontent-%COMP%]{color:#dc3545!important}.text-muted[_ngcontent-%COMP%]{color:#6c757d!important}.fa-spinner[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_spin 1s linear infinite}@keyframes _ngcontent-%COMP%_spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}@media (max-width: 992px){.d-flex.justify-content-between[_ngcontent-%COMP%]{flex-direction:column;gap:1rem}.d-flex.justify-content-between[_ngcontent-%COMP%]   .btn[_ngcontent-%COMP%]{width:100%}}@media (max-width: 768px){.card[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .col-md-4[_ngcontent-%COMP%], .row[_ngcontent-%COMP%]   .col-md-6[_ngcontent-%COMP%]{margin-bottom:1rem}}.card-body[_ngcontent-%COMP%]{padding:1.25rem}.form-check[_ngcontent-%COMP%]{padding:.75rem;border:1px solid #e9ecef;border-radius:.375rem;background-color:#f8f9fa;transition:all .15s ease-in-out}.form-check[_ngcontent-%COMP%]:hover{background-color:#e9ecef}.form-check-input[_ngcontent-%COMP%]:checked + .form-check-label[_ngcontent-%COMP%]{color:#0d6efd}.form-control[_ngcontent-%COMP%]:focus, .form-select[_ngcontent-%COMP%]:focus{outline:none;border-color:#86b7fe;box-shadow:0 0 0 .25rem #0d6efd40}.btn-primary[_ngcontent-%COMP%]{background:linear-gradient(135deg,#0d6efd,#0b5ed7);border:none}.btn-primary[_ngcontent-%COMP%]:hover{background:linear-gradient(135deg,#0b5ed7,#0a58ca)}.btn-outline-secondary[_ngcontent-%COMP%]{border-color:#6c757d;color:#6c757d}.btn-outline-secondary[_ngcontent-%COMP%]:hover, .btn-secondary[_ngcontent-%COMP%]{background-color:#6c757d;border-color:#6c757d}.btn-secondary[_ngcontent-%COMP%]:hover{background-color:#5c636a;border-color:#565e64}.fa-solid[_ngcontent-%COMP%]{margin-right:.25rem}.text-danger[_ngcontent-%COMP%]{font-weight:600}"]})};export{U as CreateOvertimeConfigurationComponent};
