{
  "version": 3,
  "sources": ["src/app/pages/users/role-management/role-management.component.ts", "src/app/pages/users/role-management/role-management.component.html", "src/app/pages/users/user-table/user-table.component.ts", "src/app/pages/users/users.component.ts", "src/app/pages/users/users.component.html"],
  "sourcesContent": ["import { Component, OnInit, signal, computed, inject, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { I18nService } from '../../../core/i18n/i18n.service';\nimport { UsersService } from '../users.service';\nimport { UserDto, AssignRoleRequest } from '../../../shared/models/user.model';\nimport { PermissionService } from '../../../core/auth/permission.service';\nimport { PermissionResources, PermissionActions } from '../../../shared/utils/permission.utils';\nimport { HasPermissionDirective } from '../../../shared/directives/has-permission.directive';\nimport { ModalWrapperComponent } from '../../../shared/components/modal-wrapper/modal-wrapper.component';\n\ninterface Role {\n  id: number;\n  name: string;\n  description?: string;\n}\n\n@Component({\n  selector: 'app-role-management',\n  standalone: true,\n  imports: [CommonModule, HasPermissionDirective, ModalWrapperComponent],\n  templateUrl: './role-management.component.html',\n  styleUrls: ['./role-management.component.css']\n})\nexport class RoleManagementComponent implements OnInit {\n  @Input() user: UserDto | null = null;\n  @Input() show = false;\n  @Output() showChange = new EventEmitter<boolean>();\n  @Output() rolesUpdated = new EventEmitter<UserDto>();\n\n  private usersService = inject(UsersService);\n  public i18n = inject(I18nService);\n  public permissionService = inject(PermissionService);\n\n  // Permission constants for use in template\n  readonly PERMISSIONS = {\n    USER_ASSIGN_ROLE: `${PermissionResources.USER}.${PermissionActions.ASSIGN_ROLE}`,\n    USER_MANAGE: `${PermissionResources.USER}.${PermissionActions.MANAGE}`\n  };\n\n  loading = signal(false);\n  error = signal('');\n  \n  // Mock roles data - in real app this would come from a roles service\n  availableRoles = signal<Role[]>([\n    { \n      id: 1, \n      name: 'SystemAdmin', \n      description: 'Full system access with all permissions' \n    },\n    { \n      id: 2, \n      name: 'Admin', \n      description: 'Administrative access to employee and role management' \n    },\n    { \n      id: 3, \n      name: 'HROperation', \n      description: 'HR operations with employee management access' \n    },\n    { \n      id: 4, \n      name: 'User', \n      description: 'Basic user access with read-only permissions' \n    }\n  ]);\n\n  userRoleIds = computed(() => {\n    if (!this.user) return [];\n    return this.user.roles.map(roleName => {\n      const role = this.availableRoles().find(r => r.name === roleName);\n      return role?.id || 0;\n    }).filter(id => id > 0);\n  });\n\n  ngOnInit(): void {\n    // Component initialization\n  }\n\n  t(key: string): string {\n    return this.i18n.t(key);\n  }\n\n  isRoleAssigned(roleId: number): boolean {\n    return this.userRoleIds().includes(roleId);\n  }\n\n  onToggleRole(role: Role): void {\n    if (!this.user) return;\n\n    this.loading.set(true);\n    this.error.set('');\n\n    const isCurrentlyAssigned = this.isRoleAssigned(role.id);\n\n    if (isCurrentlyAssigned) {\n      this.removeRole(role.id);\n    } else {\n      this.assignRole(role.id);\n    }\n  }\n\n  assignRole(roleId: number): void {\n    if (!this.user) return;\n\n    const request: AssignRoleRequest = { roleId };\n\n    this.usersService.assignRole(this.user.id, request).subscribe({\n      next: () => {\n        this.refreshUserData();\n      },\n      error: (error) => {\n        this.loading.set(false);\n        this.error.set(this.getErrorMessage(error));\n      }\n    });\n  }\n\n  removeRole(roleId: number): void {\n    if (!this.user) return;\n\n    this.usersService.removeRole(this.user.id, roleId).subscribe({\n      next: () => {\n        this.refreshUserData();\n      },\n      error: (error) => {\n        this.loading.set(false);\n        this.error.set(this.getErrorMessage(error));\n      }\n    });\n  }\n\n  refreshUserData(): void {\n    if (!this.user) return;\n\n    this.usersService.getUserById(this.user.id).subscribe({\n      next: (updatedUser) => {\n        this.loading.set(false);\n        this.rolesUpdated.emit(updatedUser);\n      },\n      error: (error) => {\n        this.loading.set(false);\n        this.error.set(this.getErrorMessage(error));\n      }\n    });\n  }\n\n  closeModal(): void {\n    this.show = false;\n    this.showChange.emit(false);\n    this.error.set('');\n  }\n\n  getErrorMessage(error: any): string {\n    if (error?.error?.error) {\n      return error.error.error;\n    }\n    return this.t('errors.unknown');\n  }\n\n  getRoleDescription(role: Role): string {\n    return role.description || '';\n  }\n\n  getRoleBadgeClass(role: Role): string {\n    const roleClasses: { [key: string]: string } = {\n      'SystemAdmin': 'bg-danger',\n      'Admin': 'bg-warning',\n      'HROperation': 'bg-info',\n      'User': 'bg-secondary'\n    };\n    return roleClasses[role.name] || 'bg-primary';\n  }\n}", "<app-modal-wrapper\n  [show]=\"show && !!user\"\n  [title]=\"t('users.manage_roles')\"\n  [size]=\"'md'\"\n  [centered]=\"true\"\n  [loading]=\"loading()\"\n  (close)=\"closeModal()\">\n\n  <div class=\"modal-body\">\n          @if (error()) {\n            <div class=\"alert alert-danger\" role=\"alert\">\n              <i class=\"fa-solid fa-exclamation-triangle me-2\"></i>\n              {{ error() }}\n            </div>\n          }\n\n          <!-- User Info -->\n          @if (user) {\n            <div class=\"user-info mb-4\">\n              <div class=\"d-flex align-items-center\">\n                <div class=\"avatar-md me-3\">\n                  <div class=\"avatar-title bg-primary-subtle text-primary rounded-circle\">\n                    {{ (user.username?.charAt(0) || '').toUpperCase() }}\n                  </div>\n                </div>\n                <div>\n                  <h6 class=\"mb-1\">{{ user?.username }}</h6>\n                  <p class=\"text-muted mb-0\">{{ user?.email }}</p>\n                </div>\n              </div>\n            </div>\n\n            <!-- Current Roles -->\n            <div class=\"current-roles mb-4\">\n              <h6 class=\"mb-2\">{{ t('users.current_roles') }}</h6>\n              @if (user?.roles && user.roles.length > 0) {\n                <div class=\"d-flex flex-wrap gap-2\">\n                  @for (roleName of user?.roles; track roleName) {\n                    <span class=\"badge bg-primary\">{{ roleName }}</span>\n                  }\n              </div>\n            } @else {\n              <p class=\"text-muted mb-0\">{{ t('users.no_roles') }}</p>\n            }\n          </div>\n\n          <!-- Available Roles -->\n          <div class=\"available-roles\" *appHasPermission=\"PERMISSIONS.USER_ASSIGN_ROLE\">\n            <h6 class=\"mb-3\">{{ t('users.available_roles') }}</h6>\n            \n            @if (loading()) {\n              <div class=\"text-center py-3\">\n                <div class=\"spinner-border spinner-border-sm text-primary\" role=\"status\">\n                  <span class=\"visually-hidden\">{{ t('common.loading') }}</span>\n                </div>\n                <p class=\"text-muted mt-2 mb-0\">{{ t('users.updating_roles') }}</p>\n              </div>\n            } @else {\n              <div class=\"roles-list\">\n                @for (role of availableRoles(); track role.id) {\n                  <div class=\"role-item\" [class.loading]=\"loading()\">\n                    <div class=\"form-check d-flex align-items-start\">\n                      <input\n                        *appHasPermission=\"PERMISSIONS.USER_ASSIGN_ROLE\"\n                        class=\"form-check-input mt-1\"\n                        type=\"checkbox\"\n                        [id]=\"'role-' + role.id\"\n                        [checked]=\"isRoleAssigned(role.id)\"\n                        [disabled]=\"loading()\"\n                        (change)=\"onToggleRole(role)\"\n                      />\n                      <div class=\"form-check-content ms-2 flex-grow-1\">\n                        <label class=\"form-check-label fw-medium\" [for]=\"'role-' + role.id\">\n                          <span class=\"badge me-2\" [class]=\"getRoleBadgeClass(role)\">\n                            {{ role.name }}\n                          </span>\n                        </label>\n                        @if (getRoleDescription(role)) {\n                          <p class=\"text-muted small mb-0\">\n                            {{ getRoleDescription(role) }}\n                          </p>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                }\n              </div>\n            }\n          </div>\n\n          <!-- Help Text -->\n          <div class=\"alert alert-info mt-3\" role=\"alert\" *appHasPermission=\"PERMISSIONS.USER_ASSIGN_ROLE\">\n            <i class=\"fa-solid fa-info-circle me-2\"></i>\n            <small>{{ t('users.role_management_help') }}</small>\n          </div>\n\n          <!-- No Permission Message -->\n          @if (!permissionService.has(PERMISSIONS.USER_ASSIGN_ROLE)) {\n            <div class=\"alert alert-warning mt-3\" role=\"alert\">\n              <i class=\"fa-solid fa-lock me-2\"></i>\n              <small>{{ t('users.no_role_assignment_permission') }}</small>\n            </div>\n          }\n        }\n  </div>\n\n  <div modal-footer class=\"d-flex gap-2 justify-content-end\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"closeModal()\">\n      {{ t('common.close') }}\n    </button>\n  </div>\n\n</app-modal-wrapper>", "import { Component, Input, Output, EventEmitter, signal, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DataTableComponent, TableColumn, TableAction } from '../../../shared/components/data-table/data-table.component';\nimport { UserDto } from '../../../shared/models/user.model';\nimport { I18nService } from '../../../core/i18n/i18n.service';\nimport { PermissionService } from '../../../core/auth/permission.service';\nimport { PermissionResources, PermissionActions } from '../../../shared/utils/permission.utils';\nimport { StatusBadgeComponent } from '../../../shared/components/status-badge/status-badge.component';\nimport { BadgeListComponent } from '../../../shared/components/badge-list/badge-list.component';\n\n@Component({\n  selector: 'app-user-table',\n  standalone: true,\n  imports: [CommonModule, DataTableComponent, StatusBadgeComponent, BadgeListComponent],\n  template: `\n    <app-data-table\n      [data]=\"users\"\n      [columns]=\"columns\"\n      [actions]=\"actions\"\n      [loading]=\"loading\"\n      [currentPage]=\"currentPage\"\n      [totalPages]=\"totalPages\"\n      [totalItems]=\"totalItems\"\n      [pageSize]=\"pageSize\"\n      [allowSelection]=\"true\"\n      [emptyMessage]=\"'No users found'\"\n      [emptyTitle]=\"'No Users'\"\n      (actionClick)=\"onActionClick($event)\"\n      (pageChange)=\"onPageChange($event)\"\n      (pageSizeChange)=\"onPageSizeChange($event)\"\n      (selectionChange)=\"onSelectionChange($event)\"\n      (sortChange)=\"onSortChange($event)\">\n\n      <ng-template #cellTemplate let-user let-column=\"column\">\n        <ng-container [ngSwitch]=\"column.key\">\n          <!-- User info with avatar -->\n          <div *ngSwitchCase=\"'user'\" class=\"d-flex align-items-center\">\n            <div class=\"avatar-sm me-2\">\n              <div class=\"avatar-initial bg-primary text-white rounded-circle\">\n                {{ getInitials(user.firstName, user.lastName) }}\n              </div>\n            </div>\n            <div>\n              <div class=\"fw-medium\">{{ user.firstName }} {{ user.lastName }}</div>\n              <small class=\"text-muted\">{{ user.email }}</small>\n            </div>\n          </div>\n\n          <!-- Username -->\n          <span *ngSwitchCase=\"'username'\" class=\"fw-medium\">\n            {{ user.username }}\n            <span *ngIf=\"isSystemAdmin(user)\" class=\"badge bg-warning text-dark ms-1\" title=\"System Administrator\">\n              <i class=\"fas fa-crown\"></i>\n            </span>\n          </span>\n\n          <!-- Roles -->\n          <div *ngSwitchCase=\"'roles'\">\n            <app-badge-list\n              [items]=\"getRoleBadges(user.roles)\"\n              [emptyMessage]=\"'No roles assigned'\">\n            </app-badge-list>\n          </div>\n\n          <!-- Status -->\n          <span *ngSwitchCase=\"'status'\">\n            <app-status-badge\n              [status]=\"user.isActive ? 'active' : 'inactive'\"\n              [label]=\"user.isActive ? 'Active' : 'Inactive'\"\n              [showIcon]=\"true\">\n            </app-status-badge>\n          </span>\n\n          <!-- Lock status -->\n          <span *ngSwitchCase=\"'lockStatus'\">\n            <app-status-badge\n              [status]=\"isUserLocked(user.lockoutEndUtc) ? 'warning' : 'success'\"\n              [label]=\"isUserLocked(user.lockoutEndUtc) ? 'Locked' : 'Unlocked'\"\n              [icon]=\"isUserLocked(user.lockoutEndUtc) ? 'fa-lock' : 'fa-unlock'\"\n              [showIcon]=\"true\">\n            </app-status-badge>\n          </span>\n\n          <!-- Created date -->\n          <span *ngSwitchCase=\"'created'\">\n            {{ formatDate(user.createdAt) }}\n          </span>\n\n          <!-- Last login -->\n          <span *ngSwitchCase=\"'lastLogin'\">\n            <span *ngIf=\"user.lastLoginAt\">{{ formatDate(user.lastLoginAt) }}</span>\n            <span *ngIf=\"!user.lastLoginAt\" class=\"text-muted\">Never</span>\n          </span>\n        </ng-container>\n      </ng-template>\n    </app-data-table>\n  `,\n  styles: [`\n    .avatar-sm {\n      width: 2rem;\n      height: 2rem;\n    }\n\n    .avatar-initial {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      width: 100%;\n      height: 100%;\n      font-size: 0.875rem;\n      font-weight: 600;\n    }\n  `]\n})\nexport class UserTableComponent {\n  private i18n = inject(I18nService);\n  private permissionService = inject(PermissionService);\n\n  @Input() users: UserDto[] = [];\n  @Input() loading = signal(false);\n  @Input() currentPage = signal(1);\n  @Input() totalPages = signal(1);\n  @Input() totalItems = signal(0);\n  @Input() pageSize = signal(10);\n\n  @Output() viewUser = new EventEmitter<UserDto>();\n  @Output() editUser = new EventEmitter<UserDto>();\n  @Output() deleteUser = new EventEmitter<UserDto>();\n  @Output() manageRoles = new EventEmitter<UserDto>();\n  @Output() pageChange = new EventEmitter<number>();\n  @Output() pageSizeChange = new EventEmitter<number>();\n  @Output() selectionChange = new EventEmitter<UserDto[]>();\n  @Output() sortChange = new EventEmitter<{column: string, direction: 'asc' | 'desc'}>();\n\n  columns: TableColumn[] = [\n    { key: 'user', label: 'User', width: '250px', sortable: true },\n    { key: 'username', label: 'Username', width: '150px', sortable: true },\n    { key: 'roles', label: 'Roles', width: '200px' },\n    { key: 'status', label: 'Status', width: '100px', align: 'center', sortable: true },\n    { key: 'lockStatus', label: 'Access', width: '100px', align: 'center' },\n    { key: 'created', label: 'Created', width: '120px', sortable: true },\n    { key: 'lastLogin', label: 'Last Login', width: '120px', sortable: true }\n  ];\n\n  get actions(): TableAction[] {\n    const actions: TableAction[] = [];\n\n    if (this.permissionService.has(`${PermissionResources.USER}.${PermissionActions.READ}`)) {\n      actions.push({\n        key: 'view',\n        label: 'View',\n        icon: 'fa-eye',\n        color: 'info'\n      });\n    }\n\n    if (this.permissionService.has(`${PermissionResources.USER}.${PermissionActions.UPDATE}`)) {\n      actions.push({\n        key: 'edit',\n        label: 'Edit',\n        icon: 'fa-edit',\n        color: 'primary',\n        condition: (user: UserDto) => this.canEditUser(user)\n      });\n\n      actions.push({\n        key: 'manageRoles',\n        label: 'Manage Roles',\n        icon: 'fa-user-tag',\n        color: 'warning',\n        condition: (user: UserDto) => this.canEditUser(user)\n      });\n    }\n\n    if (this.permissionService.has(`${PermissionResources.USER}.${PermissionActions.DELETE}`)) {\n      actions.push({\n        key: 'delete',\n        label: 'Delete',\n        icon: 'fa-trash',\n        color: 'danger',\n        condition: (user: UserDto) => this.canDeleteUser(user)\n      });\n    }\n\n    return actions;\n  }\n\n  onActionClick(event: {action: string, item: UserDto}) {\n    const { action, item } = event;\n\n    switch (action) {\n      case 'view':\n        this.viewUser.emit(item);\n        break;\n      case 'edit':\n        this.editUser.emit(item);\n        break;\n      case 'delete':\n        this.deleteUser.emit(item);\n        break;\n      case 'manageRoles':\n        this.manageRoles.emit(item);\n        break;\n    }\n  }\n\n  onPageChange(page: number) {\n    this.pageChange.emit(page);\n  }\n\n  onPageSizeChange(size: number) {\n    this.pageSizeChange.emit(size);\n  }\n\n  onSelectionChange(selectedUsers: UserDto[]) {\n    this.selectionChange.emit(selectedUsers);\n  }\n\n  onSortChange(sortEvent: {column: string, direction: 'asc' | 'desc'}) {\n    this.sortChange.emit(sortEvent);\n  }\n\n  getInitials(firstName: string, lastName: string): string {\n    const first = firstName ? firstName.charAt(0).toUpperCase() : '';\n    const last = lastName ? lastName.charAt(0).toUpperCase() : '';\n    return first + last;\n  }\n\n  isSystemAdmin(user: UserDto): boolean {\n    return user.username.toLowerCase() === 'systemadmin';\n  }\n\n  getRoleBadges(roles: string[]): Array<{label: string, variant: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info'}> {\n    return roles.map(role => ({\n      label: role,\n      variant: 'secondary' as const\n    }));\n  }\n\n  canEditUser(user: UserDto): boolean {\n    return !this.isSystemAdmin(user);\n  }\n\n  canDeleteUser(user: UserDto): boolean {\n    return !this.isSystemAdmin(user);\n  }\n\n  isUserLocked(lockoutEndUtc: string): boolean {\n    if (!lockoutEndUtc) return false;\n    return new Date(lockoutEndUtc) > new Date();\n  }\n\n  formatDate(dateString: string): string {\n    const date = new Date(dateString);\n    return date.toLocaleDateString(this.i18n.getCurrentLocale(), {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  }\n}", "import { Component, OnInit, signal, computed, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { I18nService } from '../../core/i18n/i18n.service';\nimport { UsersService } from './users.service';\nimport { UserDto, PagedResult } from '../../shared/models/user.model';\nimport { RoleManagementComponent } from './role-management/role-management.component';\nimport { NotificationService } from '../../core/notifications/notification.service';\nimport { ConfirmationService } from '../../core/confirmation/confirmation.service';\nimport { PermissionService } from '../../core/auth/permission.service';\nimport { PermissionResources, PermissionActions } from '../../shared/utils/permission.utils';\nimport { UnifiedFilterComponent } from '../../shared/components/unified-filter/unified-filter.component';\nimport { UserTableComponent } from './user-table/user-table.component';\nimport { PageHeaderComponent } from '../../shared/components/page-header/page-header.component';\n\ninterface Role {\n  id: number;\n  name: string;\n}\n\n@Component({\n  selector: 'app-users',\n  standalone: true,\n  imports: [CommonModule, RoleManagementComponent, UnifiedFilterComponent, UserTableComponent, PageHeaderComponent],\n  templateUrl: './users.component.html',\n  styleUrls: ['./users.component.css']\n})\nexport class UsersComponent implements OnInit {\n  private usersService = inject(UsersService);\n  private notificationService = inject(NotificationService);\n  private confirmationService = inject(ConfirmationService);\n  private router = inject(Router);\n  public i18n = inject(I18nService);\n  public permissionService = inject(PermissionService);\n\n  // Signals for state management\n  loading = signal(false);\n  users = signal<UserDto[]>([]);\n  pagedResult = signal<PagedResult<UserDto> | null>(null);\n  currentPage = signal(1);\n  pageSize = signal(10);\n\n  // Filter state\n  currentFilter: any = {};\n\n  // Modal state\n  showRoleManagement = signal(false);\n  selectedUser = signal<UserDto | null>(null);\n\n  // Mock data for roles - in real app this would come from a roles service\n  availableRoles = signal<Role[]>([\n    { id: 1, name: 'SystemAdmin' },\n    { id: 2, name: 'Admin' },\n    { id: 3, name: 'HROperation' },\n    { id: 4, name: 'User' }\n  ]);\n\n  // Computed signals for pagination\n  totalPages = computed(() => this.pagedResult()?.totalPages || 1);\n  totalItems = computed(() => this.pagedResult()?.totalItems || 0);\n\n  // Writable signals for template binding\n  totalPagesSignal = signal(1);\n  totalItemsSignal = signal(0);\n\n  // Permission constants for use in template\n  readonly PERMISSIONS = {\n    USER_CREATE: `${PermissionResources.USER}.${PermissionActions.CREATE}`,\n    USER_READ: `${PermissionResources.USER}.${PermissionActions.READ}`,\n    USER_UPDATE: `${PermissionResources.USER}.${PermissionActions.UPDATE}`,\n    USER_DELETE: `${PermissionResources.USER}.${PermissionActions.DELETE}`,\n    USER_ASSIGN_ROLE: `${PermissionResources.USER}.${PermissionActions.ASSIGN_ROLE}`,\n    USER_REMOVE_ROLE: `${PermissionResources.USER}.${PermissionActions.REMOVE_ROLE}`,\n    USER_MANAGE: `${PermissionResources.USER}.${PermissionActions.MANAGE}`\n  };\n\n\n  ngOnInit(): void {\n    this.loadUsers();\n  }\n\n  loadUsers(): void {\n    this.loading.set(true);\n\n    const filter = {\n      page: this.currentPage(),\n      pageSize: this.pageSize(),\n      ...this.currentFilter\n    };\n\n    this.usersService.getUsers(filter).subscribe({\n      next: (result) => {\n        this.pagedResult.set(result);\n        this.users.set(result.items);\n        this.totalPagesSignal.set(result.totalPages);\n        this.totalItemsSignal.set(result.totalItems);\n        this.loading.set(false);\n      },\n      error: (error) => {\n        console.error('Failed to load users:', error);\n        this.loading.set(false);\n        this.notificationService.error(\n          this.i18n.t('errors.server'),\n          this.i18n.t('errors.network')\n        );\n      }\n    });\n  }\n\n  // Filter event handlers\n  onSearchChange(searchTerm: string): void {\n    this.currentFilter = { ...this.currentFilter, search: searchTerm };\n    this.currentPage.set(1);\n    this.loadUsers();\n  }\n\n  onFiltersChange(filters: any): void {\n    this.currentFilter = { ...filters };\n    this.currentPage.set(1);\n    this.loadUsers();\n  }\n\n  onAddUser(): void {\n    this.router.navigate(['/users/create']);\n  }\n\n  onRefreshData(): void {\n    // Reset filters and pagination\n    this.currentFilter = {};\n    this.currentPage.set(1);\n\n    // Reload data\n    this.loadUsers();\n  }\n\n  // Table event handlers\n  onViewUser(user: UserDto): void {\n    this.router.navigate(['/users', user.id, 'view']);\n  }\n\n  onEditUser(user: UserDto): void {\n    this.router.navigate(['/users', user.id, 'edit']);\n  }\n\n  async onDeleteUser(user: UserDto): Promise<void> {\n    const confirmMessage = this.i18n.t('users.confirm_delete_user').replace('{{username}}', user.username);\n    const result = await this.confirmationService.confirm({\n      title: this.i18n.t('users.delete_user'),\n      message: confirmMessage,\n      confirmText: this.i18n.t('common.delete'),\n      cancelText: this.i18n.t('common.cancel'),\n      confirmButtonClass: 'btn-danger',\n      icon: 'fa-trash',\n      iconClass: 'text-danger'\n    });\n\n    if (result.confirmed) {\n      this.usersService.deleteUser(user.id).subscribe({\n        next: () => {\n          this.loadUsers();\n          this.notificationService.success(\n            this.i18n.t('app.success'),\n            this.i18n.t('users.user_deleted')\n          );\n        },\n        error: (error) => {\n          let errorMessage = this.i18n.t('errors.server');\n          if (error.error && error.error.error) {\n            errorMessage = error.error.error;\n          }\n\n          this.notificationService.error(\n            this.i18n.t('app.error'),\n            errorMessage\n          );\n        }\n      });\n    }\n  }\n\n  onManageRoles(user: UserDto): void {\n    this.selectedUser.set(user);\n    this.showRoleManagement.set(true);\n  }\n\n  onPageChange(page: number): void {\n    this.currentPage.set(page);\n    this.loadUsers();\n  }\n\n  onPageSizeChange(size: number): void {\n    this.pageSize.set(size);\n    this.currentPage.set(1);\n    this.loadUsers();\n  }\n\n  onSelectionChange(selectedUsers: UserDto[]): void {\n    // Handle bulk selection for future bulk operations\n    console.log('Selected users:', selectedUsers);\n  }\n\n  onSortChange(sortEvent: {column: string, direction: 'asc' | 'desc'}): void {\n    this.currentFilter = {\n      ...this.currentFilter,\n      sortBy: sortEvent.column,\n      sortDirection: sortEvent.direction\n    };\n    this.currentPage.set(1);\n    this.loadUsers();\n  }\n\n  // Modal event handlers\n  onRolesUpdated(user: UserDto): void {\n    this.loadUsers();\n    this.notificationService.success(\n      this.i18n.t('app.success'),\n      'User roles updated successfully'\n    );\n  }\n\n  onCloseRoleManagement(): void {\n    this.showRoleManagement.set(false);\n    this.selectedUser.set(null);\n  }\n}", "<div class=\"app-list-page\">\n  <!-- Page Header -->\n  <app-page-header\n    [title]=\"i18n.t('users.title')\">\n  </app-page-header>\n\n  <!-- Filters Component -->\n  <app-unified-filter\n    moduleName=\"users\"\n    [refreshing]=\"loading()\"\n    (searchChange)=\"onSearchChange($event)\"\n    (filtersChange)=\"onFiltersChange($event)\"\n    (add)=\"onAddUser()\"\n    (refresh)=\"onRefreshData()\">\n  </app-unified-filter>\n\n  <!-- Users Table Component -->\n  <app-user-table\n    [users]=\"users()\"\n    [loading]=\"loading\"\n    [currentPage]=\"currentPage\"\n    [totalPages]=\"totalPagesSignal\"\n    [totalItems]=\"totalItemsSignal\"\n    [pageSize]=\"pageSize\"\n    (viewUser)=\"onViewUser($event)\"\n    (editUser)=\"onEditUser($event)\"\n    (deleteUser)=\"onDeleteUser($event)\"\n    (manageRoles)=\"onManageRoles($event)\"\n    (pageChange)=\"onPageChange($event)\"\n    (pageSizeChange)=\"onPageSizeChange($event)\"\n    (selectionChange)=\"onSelectionChange($event)\"\n    (sortChange)=\"onSortChange($event)\">\n  </app-user-table>\n\n  <!-- Role Management Modal Component -->\n  <app-role-management\n    [user]=\"selectedUser()\"\n    [show]=\"showRoleManagement()\"\n    (showChange)=\"onCloseRoleManagement()\"\n    (rolesUpdated)=\"onRolesUpdated($event)\">\n  </app-role-management>\n</div>"],
  "mappings": "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",
  "names": []
}
