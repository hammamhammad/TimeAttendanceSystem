{
  "version": 3,
  "sources": ["src/app/shared/components/badge-list/badge-list.component.ts", "src/app/shared/components/badge-list/badge-list.component.html"],
  "sourcesContent": ["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nexport interface BadgeItem {\r\n  id?: string | number;\r\n  label: string;\r\n  variant?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark';\r\n  icon?: string;\r\n  removable?: boolean;\r\n  clickable?: boolean;\r\n  tooltip?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-badge-list',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './badge-list.component.html',\r\n  styleUrls: ['./badge-list.component.css']\r\n})\r\nexport class BadgeListComponent {\r\n  @Input() items: BadgeItem[] = [];\r\n  @Input() variant: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark' = 'primary';\r\n  @Input() size: 'sm' | 'md' | 'lg' = 'md';\r\n  @Input() gap: 'sm' | 'md' | 'lg' = 'md';\r\n  @Input() wrap = true;\r\n  @Input() emptyMessage = 'No items';\r\n  @Input() showEmptyMessage = true;\r\n  @Input() maxItems?: number; // Show only first N items\r\n  @Input() showMoreText = '+ {count} more';\r\n\r\n  @Output() badgeClick = new EventEmitter<BadgeItem>();\r\n  @Output() badgeRemove = new EventEmitter<BadgeItem>();\r\n\r\n  onBadgeClick(item: BadgeItem): void {\r\n    if (item.clickable) {\r\n      this.badgeClick.emit(item);\r\n    }\r\n  }\r\n\r\n  onRemoveClick(item: BadgeItem, event: Event): void {\r\n    event.stopPropagation();\r\n    this.badgeRemove.emit(item);\r\n  }\r\n\r\n  getContainerClasses(): string {\r\n    const classes = ['badge-list', 'd-flex'];\r\n\r\n    if (this.wrap) {\r\n      classes.push('flex-wrap');\r\n    }\r\n\r\n    switch (this.gap) {\r\n      case 'sm':\r\n        classes.push('gap-1');\r\n        break;\r\n      case 'lg':\r\n        classes.push('gap-3');\r\n        break;\r\n      default:\r\n        classes.push('gap-2');\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n\r\n  getBadgeClasses(item: BadgeItem): string {\r\n    const classes = ['badge'];\r\n\r\n    const badgeVariant = item.variant || this.variant;\r\n    classes.push(`bg-${badgeVariant}`);\r\n\r\n    if (item.clickable) {\r\n      classes.push('badge-clickable');\r\n    }\r\n\r\n    if (item.removable) {\r\n      classes.push('badge-removable');\r\n    }\r\n\r\n    switch (this.size) {\r\n      case 'sm':\r\n        classes.push('badge-sm');\r\n        break;\r\n      case 'lg':\r\n        classes.push('badge-lg');\r\n        break;\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n\r\n  getVisibleItems(): BadgeItem[] {\r\n    if (this.maxItems && this.items.length > this.maxItems) {\r\n      return this.items.slice(0, this.maxItems);\r\n    }\r\n    return this.items;\r\n  }\r\n\r\n  getHiddenCount(): number {\r\n    if (this.maxItems && this.items.length > this.maxItems) {\r\n      return this.items.length - this.maxItems;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  getShowMoreText(): string {\r\n    return this.showMoreText.replace('{count}', this.getHiddenCount().toString());\r\n  }\r\n}", "@if (items.length > 0) {\r\n  <div [class]=\"getContainerClasses()\">\r\n    @for (item of getVisibleItems(); track item.id || item.label) {\r\n      <span\r\n        [class]=\"getBadgeClasses(item)\"\r\n        [title]=\"item.tooltip\"\r\n        (click)=\"onBadgeClick(item)\">\r\n        @if (item.icon) {\r\n          <i [class]=\"item.icon + ' me-1'\"></i>\r\n        }\r\n        {{ item.label }}\r\n        @if (item.removable) {\r\n          <button\r\n            type=\"button\"\r\n            class=\"badge-remove-btn\"\r\n            (click)=\"onRemoveClick(item, $event)\"\r\n            aria-label=\"Remove\">\r\n            <i class=\"fa-solid fa-times\"></i>\r\n          </button>\r\n        }\r\n      </span>\r\n    }\r\n\r\n    <!-- Show more indicator -->\r\n    @if (getHiddenCount() > 0) {\r\n      <span class=\"badge bg-secondary badge-more\">\r\n        {{ getShowMoreText() }}\r\n      </span>\r\n    }\r\n  </div>\r\n} @else if (showEmptyMessage) {\r\n  <p class=\"text-muted mb-0\">{{ emptyMessage }}</p>\r\n}\r\n\r\n<!-- Custom content slot -->\r\n<ng-content></ng-content>"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQU,IAAA,uBAAA,GAAA,GAAA;;;;AAAG,IAAA,qBAAA,QAAA,OAAA,OAAA;;;;;;;AAIH,IAAA,4BAAA,GAAA,UAAA,CAAA;AAGE,IAAA,wBAAA,SAAA,gCAAA,sFAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,YAAA,UAAA,wBAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,cAAA,SAAA,MAAA,CAA2B;IAAA,GAApC,wFAAoC;AAEpC,IAAA,uBAAA,GAAA,KAAA,CAAA;AACF,IAAA,0BAAA;;;;;;;AAfJ,IAAA,4BAAA,GAAA,QAAA,CAAA;AAGE,IAAA,wBAAA,SAAA,gCAAA,wEAAA;AAAA,YAAA,UAAA,wBAAA,GAAA,EAAA;AAAA,YAAA,SAAA,wBAAA,CAAA;AAAA,aAAA,sBAAS,OAAA,aAAA,OAAA,CAAkB;IAAA,GAA3B,wEAA2B;AAC3B,IAAA,8BAAA,GAAA,+DAAA,GAAA,GAAA,KAAA,CAAA;AAGA,IAAA,iBAAA,CAAA;AACA,IAAA,8BAAA,GAAA,+DAAA,GAAA,GAAA,UAAA,CAAA;AASF,IAAA,0BAAA;;;;;AAhBE,IAAA,qBAAA,OAAA,gBAAA,OAAA,CAAA;AACA,IAAA,wBAAA,SAAA,QAAA,OAAA;AAEA,IAAA,oBAAA;AAAA,IAAA,wBAAA,QAAA,OAAA,IAAA,EAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,OAAA,GAAA;AACA,IAAA,oBAAA;AAAA,IAAA,wBAAA,QAAA,YAAA,IAAA,EAAA;;;;;;AAcF,IAAA,4BAAA,GAAA,QAAA,CAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,0BAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,gBAAA,GAAA,GAAA;;;;;;AAzBN,IAAA,4BAAA,GAAA,KAAA;AACE,IAAA,2BAAA,GAAA,iDAAA,GAAA,GAAA,QAAA,GAAA,UAAA;AAsBA,IAAA,8BAAA,GAAA,yDAAA,GAAA,GAAA,QAAA,CAAA;AAKF,IAAA,0BAAA;;;;AA5BK,IAAA,qBAAA,OAAA,oBAAA,CAAA;AACH,IAAA,oBAAA;AAAA,IAAA,qBAAA,OAAA,gBAAA,CAAiB;AAsBjB,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,OAAA,eAAA,IAAA,IAAA,IAAA,EAAA;;;;;;AAOF,IAAA,4BAAA,GAAA,KAAA,CAAA;AAA2B,IAAA,iBAAA,CAAA;AAAkB,IAAA,0BAAA;;;;AAAlB,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,YAAA;;;;ADXvB,IAAO,sBAAP,MAAO,oBAAkB;EACpB,QAAqB,CAAA;EACrB,UAAkG;EAClG,OAA2B;EAC3B,MAA0B;EAC1B,OAAO;EACP,eAAe;EACf,mBAAmB;EACnB;;EACA,eAAe;EAEd,aAAa,IAAI,aAAY;EAC7B,cAAc,IAAI,aAAY;EAExC,aAAa,MAAe;AAC1B,QAAI,KAAK,WAAW;AAClB,WAAK,WAAW,KAAK,IAAI;IAC3B;EACF;EAEA,cAAc,MAAiB,OAAY;AACzC,UAAM,gBAAe;AACrB,SAAK,YAAY,KAAK,IAAI;EAC5B;EAEA,sBAAmB;AACjB,UAAM,UAAU,CAAC,cAAc,QAAQ;AAEvC,QAAI,KAAK,MAAM;AACb,cAAQ,KAAK,WAAW;IAC1B;AAEA,YAAQ,KAAK,KAAK;MAChB,KAAK;AACH,gBAAQ,KAAK,OAAO;AACpB;MACF,KAAK;AACH,gBAAQ,KAAK,OAAO;AACpB;MACF;AACE,gBAAQ,KAAK,OAAO;IACxB;AAEA,WAAO,QAAQ,KAAK,GAAG;EACzB;EAEA,gBAAgB,MAAe;AAC7B,UAAM,UAAU,CAAC,OAAO;AAExB,UAAM,eAAe,KAAK,WAAW,KAAK;AAC1C,YAAQ,KAAK,MAAM,YAAY,EAAE;AAEjC,QAAI,KAAK,WAAW;AAClB,cAAQ,KAAK,iBAAiB;IAChC;AAEA,QAAI,KAAK,WAAW;AAClB,cAAQ,KAAK,iBAAiB;IAChC;AAEA,YAAQ,KAAK,MAAM;MACjB,KAAK;AACH,gBAAQ,KAAK,UAAU;AACvB;MACF,KAAK;AACH,gBAAQ,KAAK,UAAU;AACvB;IACJ;AAEA,WAAO,QAAQ,KAAK,GAAG;EACzB;EAEA,kBAAe;AACb,QAAI,KAAK,YAAY,KAAK,MAAM,SAAS,KAAK,UAAU;AACtD,aAAO,KAAK,MAAM,MAAM,GAAG,KAAK,QAAQ;IAC1C;AACA,WAAO,KAAK;EACd;EAEA,iBAAc;AACZ,QAAI,KAAK,YAAY,KAAK,MAAM,SAAS,KAAK,UAAU;AACtD,aAAO,KAAK,MAAM,SAAS,KAAK;IAClC;AACA,WAAO;EACT;EAEA,kBAAe;AACb,WAAO,KAAK,aAAa,QAAQ,WAAW,KAAK,eAAc,EAAG,SAAQ,CAAE;EAC9E;;AAxF6B;cAAlB;mCAAA,qBAAkB;AAAA;cAAlB,sFAAA,qBAAkB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,QAAA,EAAA,OAAA,SAAA,SAAA,WAAA,MAAA,QAAA,KAAA,OAAA,MAAA,QAAA,cAAA,gBAAA,kBAAA,oBAAA,UAAA,YAAA,cAAA,eAAA,GAAA,SAAA,EAAA,YAAA,cAAA,aAAA,cAAA,GAAA,oBAAA,KAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,cAAA,MAAA,GAAA,CAAA,GAAA,SAAA,OAAA,GAAA,CAAA,GAAA,SAAA,gBAAA,YAAA,GAAA,CAAA,GAAA,SAAA,OAAA,GAAA,CAAA,QAAA,UAAA,cAAA,UAAA,GAAA,kBAAA,GAAA,CAAA,QAAA,UAAA,cAAA,UAAA,GAAA,oBAAA,GAAA,OAAA,GAAA,CAAA,GAAA,YAAA,UAAA,CAAA,GAAA,UAAA,gCAAA,4BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;;ACpB/B,IAAA,8BAAA,GAAA,2CAAA,GAAA,GAAA,OAAA,CAAA,EAAwB,GAAA,2CAAA,GAAA,GAAA,KAAA,CAAA;AAmCxB,IAAA,uBAAA,CAAA;;;AAnCA,IAAA,wBAAA,IAAA,MAAA,SAAA,IAAA,IAAA,IAAA,mBAAA,IAAA,EAAA;;GDoB+B,+CAJnB,YAAY,GAAA,QAAA,CAAA,qrCAAA,EAAA,CAAA;AAIlB,IAAO,qBAAP;;sEAAO,oBAAkB,CAAA;UAP9B;uBACW,kBAAgB,YACd,MAAI,SACP,CAAC,YAAY,GAAC,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4BAAA,QAAA,CAAA,ohCAAA,EAAA,CAAA;cAKd,OAAK,CAAA;UAAb;MACQ,SAAO,CAAA;UAAf;MACQ,MAAI,CAAA;UAAZ;MACQ,KAAG,CAAA;UAAX;MACQ,MAAI,CAAA;UAAZ;MACQ,cAAY,CAAA;UAApB;MACQ,kBAAgB,CAAA;UAAxB;MACQ,UAAQ,CAAA;UAAhB;MACQ,cAAY,CAAA;UAApB;MAES,YAAU,CAAA;UAAnB;MACS,aAAW,CAAA;UAApB;;;;6EAZU,oBAAkB,EAAA,WAAA,sBAAA,UAAA,gEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
