{
  "version": 3,
  "sources": ["src/app/pages/shifts/shifts.service.ts"],
  "sourcesContent": ["import { Injectable, inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {\n  Shift,\n  ShiftsResponse,\n  CreateShiftRequest,\n  UpdateShiftRequest\n} from '../../shared/models/shift.model';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ShiftsService {\n  private http = inject(HttpClient);\n  private baseUrl = `${environment.apiUrl}/api/v1/shifts`;\n\n  getShifts(\n    page: number = 1,\n    pageSize: number = 10,\n    search?: string\n  ): Observable<ShiftsResponse> {\n    let httpParams = new HttpParams()\n      .set('page', page.toString())\n      .set('pageSize', pageSize.toString());\n\n    if (search) {\n      httpParams = httpParams.set('search', search);\n    }\n\n    return this.http.get<ShiftsResponse>(this.baseUrl, { params: httpParams });\n  }\n\n  getShiftById(id: number): Observable<Shift> {\n    return this.http.get<Shift>(`${this.baseUrl}/${id}`);\n  }\n\n  createShift(shift: CreateShiftRequest): Observable<{ id: number }> {\n    return this.http.post<{ id: number }>(this.baseUrl, shift);\n  }\n\n  updateShift(id: number, shift: UpdateShiftRequest): Observable<void> {\n    return this.http.put<void>(`${this.baseUrl}/${id}`, shift);\n  }\n\n  deleteShift(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.baseUrl}/${id}`);\n  }\n\n  getDefaultShift(): Observable<Shift | null> {\n    return this.http.get<Shift | null>(`${this.baseUrl}/default`);\n  }\n\n  setDefaultShift(id: number, forceReplace: boolean = false): Observable<void> {\n    const params = new HttpParams().set('forceReplace', forceReplace.toString());\n    return this.http.post<void>(`${this.baseUrl}/${id}/set-default`, {}, { params });\n  }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;AAcM,IAAO,iBAAP,MAAO,eAAa;EAChB,OAAO,OAAO,UAAU;EACxB,UAAU,GAAG,YAAY,MAAM;EAEvC,UACE,OAAe,GACf,WAAmB,IACnB,QAAe;AAEf,QAAI,aAAa,IAAI,WAAU,EAC5B,IAAI,QAAQ,KAAK,SAAQ,CAAE,EAC3B,IAAI,YAAY,SAAS,SAAQ,CAAE;AAEtC,QAAI,QAAQ;AACV,mBAAa,WAAW,IAAI,UAAU,MAAM;IAC9C;AAEA,WAAO,KAAK,KAAK,IAAoB,KAAK,SAAS,EAAE,QAAQ,WAAU,CAAE;EAC3E;EAEA,aAAa,IAAU;AACrB,WAAO,KAAK,KAAK,IAAW,GAAG,KAAK,OAAO,IAAI,EAAE,EAAE;EACrD;EAEA,YAAY,OAAyB;AACnC,WAAO,KAAK,KAAK,KAAqB,KAAK,SAAS,KAAK;EAC3D;EAEA,YAAY,IAAY,OAAyB;AAC/C,WAAO,KAAK,KAAK,IAAU,GAAG,KAAK,OAAO,IAAI,EAAE,IAAI,KAAK;EAC3D;EAEA,YAAY,IAAU;AACpB,WAAO,KAAK,KAAK,OAAa,GAAG,KAAK,OAAO,IAAI,EAAE,EAAE;EACvD;EAEA,kBAAe;AACb,WAAO,KAAK,KAAK,IAAkB,GAAG,KAAK,OAAO,UAAU;EAC9D;EAEA,gBAAgB,IAAY,eAAwB,OAAK;AACvD,UAAM,SAAS,IAAI,WAAU,EAAG,IAAI,gBAAgB,aAAa,SAAQ,CAAE;AAC3E,WAAO,KAAK,KAAK,KAAW,GAAG,KAAK,OAAO,IAAI,EAAE,gBAAgB,CAAA,GAAI,EAAE,OAAM,CAAE;EACjF;;AA3CwB;cAAb;mCAAA,gBAAa;AAAA;cAAb,oFAAA,gBAAa,SAAb,eAAa,WAAA,YAFZ,OAAM,CAAA;AAEd,IAAO,gBAAP;;sEAAO,eAAa,CAAA;UAHzB;WAAW;MACV,YAAY;KACb;;;",
  "names": []
}
