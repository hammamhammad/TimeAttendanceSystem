{
  "version": 3,
  "sources": ["src/app/pages/attendance/daily/daily-attendance.component.ts", "src/app/pages/attendance/daily/daily-attendance.component.html"],
  "sourcesContent": ["import { Component, OnInit, signal, computed, OnDestroy, effect, ViewChild } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router, RouterModule, ActivatedRoute } from '@angular/router';\r\nimport { AttendanceService } from '../../../core/services/attendance.service';\r\nimport { EmployeesService } from '../../employees/employees.service';\r\nimport { I18nService } from '../../../core/i18n/i18n.service';\r\nimport { NotificationService } from '../../../core/notifications/notification.service';\r\nimport { ConfirmationService } from '../../../core/confirmation/confirmation.service';\r\nimport { DepartmentsService } from '../../departments/departments.service';\r\nimport { BranchesService } from '../../branches/branches.service';\r\nimport { ShiftAssignmentService } from '../../../core/services/shift-assignment.service';\r\nimport { SearchableSelectComponent, SearchableSelectOption } from '../../../shared/components/searchable-select/searchable-select.component';\r\nimport { DataTableComponent, TableColumn, TableAction, SortEvent } from '../../../shared/components/data-table/data-table.component';\r\nimport { PageHeaderComponent } from '../../../shared/components/page-header/page-header.component';\r\nimport { LoadingSpinnerComponent } from '../../../shared/components/loading-spinner/loading-spinner.component';\r\nimport {\r\n  AttendanceRecord,\r\n  AttendanceTransaction,\r\n  AttendanceStatus,\r\n  TransactionType\r\n} from '../../../shared/models/attendance.model';\r\nimport { EmployeeSelectOption, DepartmentDto, EmployeeDto } from '../../../shared/models/employee.model';\r\nimport { Branch } from '../../../shared/models/branch.model';\r\n\r\n@Component({\r\n  selector: 'app-daily-attendance',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, RouterModule, SearchableSelectComponent, DataTableComponent, PageHeaderComponent, LoadingSpinnerComponent],\r\n  templateUrl: './daily-attendance.component.html',\r\n  styleUrls: ['./daily-attendance.component.css']\r\n})\r\nexport class DailyAttendanceComponent implements OnInit, OnDestroy {\r\n  // Signals for reactive state management\r\n  attendanceRecords = signal<AttendanceRecord[]>([]);\r\n  selectedDate = signal(new Date().toISOString().split('T')[0]);\r\n  loading = signal(true);\r\n  error = signal<string | null>(null);\r\n\r\n  // Filter signals\r\n  searchTerm = signal('');\r\n  selectedStatus = signal<AttendanceStatus | null>(null);\r\n  selectedEmployeeId = signal<number | null>(null);\r\n  selectedDepartmentId = signal<number | null>(null);\r\n  selectedBranchId = signal<number | null>(null);\r\n\r\n  // Manual calculation signals\r\n  calculating = signal(false);\r\n  calculatingBulk = signal(false);\r\n  manualCalculationDate = signal(new Date().toISOString().split('T')[0]);\r\n\r\n  // Pagination and sorting signals\r\n  currentPage = signal(1);\r\n  pageSize = signal(10);\r\n  sortColumn = signal('');\r\n  sortDirection = signal<'asc' | 'desc'>('asc');\r\n\r\n  // Signals for data table component\r\n  tableTotalPages = signal(1);\r\n  tableTotalItems = signal(0);\r\n\r\n  // Options for filters\r\n  availableEmployees = signal<EmployeeSelectOption[]>([]);\r\n  availableDepartments = signal<DepartmentDto[]>([]);\r\n  availableBranches = signal<Branch[]>([]);\r\n  loadingEmployees = signal(false);\r\n  loadingDepartments = signal(false);\r\n  loadingBranches = signal(false);\r\n\r\n\r\n  // Computed values\r\n  filteredRecords = computed(() => {\r\n    const records = this.attendanceRecords();\r\n    const search = this.searchTerm().toLowerCase();\r\n    const status = this.selectedStatus();\r\n\r\n    // Backend already filters by department, branch, and employee\r\n    // Client-side filtering only handles search and status filters\r\n    return records.filter(record => {\r\n      const matchesSearch = !search ||\r\n        record.employeeName.toLowerCase().includes(search) ||\r\n        record.employeeNumber.toLowerCase().includes(search);\r\n\r\n      const matchesStatus = status === null || record.status === status;\r\n\r\n      return matchesSearch && matchesStatus;\r\n    });\r\n  });\r\n\r\n  // Sorted records\r\n  sortedRecords = computed(() => {\r\n    const records = [...this.filteredRecords()];\r\n    const column = this.sortColumn();\r\n    const direction = this.sortDirection();\r\n\r\n    if (!column) return records;\r\n\r\n    return records.sort((a, b) => {\r\n      let aValue = this.getValueForSorting(a, column);\r\n      let bValue = this.getValueForSorting(b, column);\r\n\r\n      // Handle null/undefined values\r\n      if (aValue == null && bValue == null) return 0;\r\n      if (aValue == null) return direction === 'asc' ? 1 : -1;\r\n      if (bValue == null) return direction === 'asc' ? -1 : 1;\r\n\r\n      // Convert to comparable types\r\n      if (typeof aValue === 'string') aValue = aValue.toLowerCase();\r\n      if (typeof bValue === 'string') bValue = bValue.toLowerCase();\r\n\r\n      if (aValue < bValue) return direction === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return direction === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  });\r\n\r\n  // Pagination computed values\r\n  totalItems = computed(() => this.sortedRecords().length);\r\n  totalPages = computed(() => Math.ceil(this.totalItems() / this.pageSize()));\r\n\r\n  // Paginated records\r\n  paginatedRecords = computed(() => {\r\n    const records = this.sortedRecords();\r\n    const page = this.currentPage();\r\n    const size = this.pageSize();\r\n    const startIndex = (page - 1) * size;\r\n    const endIndex = startIndex + size;\r\n    return records.slice(startIndex, endIndex);\r\n  });\r\n\r\n  // Statistics computed from filtered records\r\n  totalEmployees = computed(() => this.filteredRecords().length);\r\n  presentEmployees = computed(() =>\r\n    this.filteredRecords().filter(r => r.status === AttendanceStatus.Present).length\r\n  );\r\n  absentEmployees = computed(() =>\r\n    this.filteredRecords().filter(r => r.status === AttendanceStatus.Absent).length\r\n  );\r\n  lateEmployees = computed(() =>\r\n    this.filteredRecords().filter(r => this.calculateTotalLateMinutes(r) > 0).length\r\n  );\r\n\r\n\r\n  // Computed select options\r\n  employeeSelectOptions = computed<SearchableSelectOption[]>(() => {\r\n    const options: SearchableSelectOption[] = [\r\n      { value: null, label: this.i18n.t('attendance.filters.all_employees') }\r\n    ];\r\n\r\n    this.availableEmployees().forEach(employee => {\r\n      options.push({\r\n        value: employee.id,\r\n        label: employee.name,\r\n        subLabel: employee.employeeNumber\r\n      });\r\n    });\r\n\r\n    return options;\r\n  });\r\n\r\n  departmentSelectOptions = computed<SearchableSelectOption[]>(() => {\r\n    const options: SearchableSelectOption[] = [\r\n      { value: null, label: this.i18n.t('attendance.filters.all_departments') }\r\n    ];\r\n\r\n    this.availableDepartments().forEach(department => {\r\n      options.push({\r\n        value: department.id,\r\n        label: department.name,\r\n        subLabel: department.nameAr || ''\r\n      });\r\n    });\r\n\r\n    return options;\r\n  });\r\n\r\n  branchSelectOptions = computed<SearchableSelectOption[]>(() => {\r\n    const options: SearchableSelectOption[] = [\r\n      { value: null, label: this.i18n.t('attendance.filters.all_branches') }\r\n    ];\r\n\r\n    this.availableBranches().forEach(branch => {\r\n      options.push({\r\n        value: branch.id,\r\n        label: branch.name,\r\n        subLabel: branch.code\r\n      });\r\n    });\r\n\r\n    return options;\r\n  });\r\n\r\n  // Constants for template\r\n  AttendanceStatus = AttendanceStatus;\r\n  availableStatuses = [\r\n    { value: null, label: 'attendance.filters.all_statuses' },\r\n    { value: AttendanceStatus.Present, label: 'attendance.status.present' },\r\n    { value: AttendanceStatus.Absent, label: 'attendance.status.absent' },\r\n    { value: AttendanceStatus.Late, label: 'attendance.status.late' },\r\n    { value: AttendanceStatus.EarlyLeave, label: 'attendance.status.early_leave' },\r\n    { value: AttendanceStatus.OnLeave, label: 'attendance.status.on_leave' },\r\n    { value: AttendanceStatus.Overtime, label: 'attendance.status.overtime' }\r\n  ];\r\n\r\n  // Data table configuration - using computed to avoid change detection issues\r\n  tableColumns = computed<TableColumn[]>(() => [\r\n    {\r\n      key: 'employeeNumber',\r\n      label: this.i18n.t('attendance.fields.employee_number'),\r\n      sortable: true,\r\n      width: '120px',\r\n      priority: 'high',\r\n      mobileLabel: this.i18n.t('attendance.fields.emp_no')\r\n    },\r\n    {\r\n      key: 'employeeName',\r\n      label: this.i18n.t('attendance.fields.employee_name'),\r\n      sortable: true,\r\n      width: '200px',\r\n      priority: 'high',\r\n      mobileLabel: this.i18n.t('attendance.fields.name')\r\n    },\r\n    {\r\n      key: 'status',\r\n      label: this.i18n.t('attendance.fields.status'),\r\n      sortable: true,\r\n      width: '120px',\r\n      align: 'center',\r\n      priority: 'high',\r\n      mobileLabel: this.i18n.t('attendance.fields.status'),\r\n      renderHtml: true\r\n    },\r\n    {\r\n      key: 'checkIn',\r\n      label: this.i18n.t('attendance.fields.check_in'),\r\n      sortable: false,\r\n      width: '100px',\r\n      align: 'center',\r\n      priority: 'medium',\r\n      mobileLabel: this.i18n.t('attendance.fields.in')\r\n    },\r\n    {\r\n      key: 'checkOut',\r\n      label: this.i18n.t('attendance.fields.check_out'),\r\n      sortable: false,\r\n      width: '100px',\r\n      align: 'center',\r\n      priority: 'medium',\r\n      mobileLabel: this.i18n.t('attendance.fields.out')\r\n    },\r\n    {\r\n      key: 'workingHours',\r\n      label: this.i18n.t('attendance.fields.working_hours'),\r\n      sortable: true,\r\n      width: '120px',\r\n      align: 'center',\r\n      priority: 'medium',\r\n      hideOnMobile: false,\r\n      mobileLabel: this.i18n.t('attendance.fields.work_hrs')\r\n    },\r\n    {\r\n      key: 'scheduledHours',\r\n      label: this.i18n.t('attendance.fields.scheduled_hours'),\r\n      sortable: true,\r\n      width: '120px',\r\n      align: 'center',\r\n      priority: 'low',\r\n      hideOnMobile: true,\r\n      mobileLabel: this.i18n.t('attendance.fields.sched_hrs')\r\n    },\r\n    {\r\n      key: 'overtimeHours',\r\n      label: this.i18n.t('attendance.fields.overtime_hours'),\r\n      sortable: true,\r\n      width: '120px',\r\n      align: 'center',\r\n      priority: 'low',\r\n      hideOnMobile: true,\r\n      mobileLabel: this.i18n.t('attendance.fields.overtime')\r\n    },\r\n    {\r\n      key: 'lateMinutes',\r\n      label: this.i18n.t('attendance.fields.late_minutes'),\r\n      sortable: true,\r\n      width: '90px',\r\n      align: 'center',\r\n      priority: 'low',\r\n      hideOnMobile: true,\r\n      mobileLabel: this.i18n.t('attendance.fields.late')\r\n    },\r\n    {\r\n      key: 'earlyLeaveMinutes',\r\n      label: this.i18n.t('attendance.fields.early_leave_minutes'),\r\n      sortable: true,\r\n      width: '90px',\r\n      align: 'center',\r\n      priority: 'low',\r\n      hideOnMobile: true,\r\n      mobileLabel: this.i18n.t('attendance.fields.early')\r\n    },\r\n    {\r\n      key: 'totalLateMinutes',\r\n      label: this.i18n.t('attendance.fields.total_late'),\r\n      sortable: true,\r\n      width: '90px',\r\n      align: 'center',\r\n      priority: 'medium',\r\n      hideOnMobile: false,\r\n      mobileLabel: this.i18n.t('attendance.fields.total_late')\r\n    }\r\n  ]);\r\n\r\n  tableActions = computed<TableAction[]>(() => [\r\n    {\r\n      key: 'view',\r\n      label: this.i18n.t('attendance.actions.view_details'),\r\n      icon: 'fa-eye',\r\n      color: 'primary',\r\n      condition: () => true\r\n    },\r\n    {\r\n      key: 'edit',\r\n      label: this.i18n.t('attendance.actions.edit_record'),\r\n      icon: 'fa-edit',\r\n      color: 'secondary',\r\n      condition: () => true\r\n    },\r\n    {\r\n      key: 'change-shift',\r\n      label: this.i18n.t('attendance.actions.change_shift'),\r\n      icon: 'fa-clock',\r\n      color: 'warning',\r\n      condition: () => true\r\n    },\r\n    {\r\n      key: 'recalculate',\r\n      label: this.i18n.t('attendance.actions.recalculate'),\r\n      icon: 'fa-calculator',\r\n      color: 'info',\r\n      condition: () => true\r\n    }\r\n  ]);\r\n\r\n\r\n  constructor(\r\n    private attendanceService: AttendanceService,\r\n    private employeesService: EmployeesService,\r\n    private departmentsService: DepartmentsService,\r\n    private branchesService: BranchesService,\r\n    private shiftAssignmentService: ShiftAssignmentService,\r\n    public i18n: I18nService,\r\n    private notificationService: NotificationService,\r\n    private confirmationService: ConfirmationService,\r\n    private router: Router,\r\n    private route: ActivatedRoute\r\n  ) {\r\n    // Update table signals when computed values change\r\n    effect(() => {\r\n      this.tableTotalPages.set(this.totalPages());\r\n      this.tableTotalItems.set(this.totalItems());\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Calculate attendance rate percentage for current records\r\n   */\r\n  getAttendanceRatePercentage(): number {\r\n    const records = this.filteredRecords();\r\n    const totalRecords = records.length;\r\n\r\n    if (totalRecords === 0) {\r\n      return 0;\r\n    }\r\n\r\n    const presentRecords = records.filter(r =>\r\n      r.status === AttendanceStatus.Present ||\r\n      r.status === AttendanceStatus.Late ||\r\n      r.status === AttendanceStatus.Overtime\r\n    ).length;\r\n\r\n    return Math.round((presentRecords / totalRecords) * 100);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Check if there's a date parameter in the query string\r\n    this.route.queryParams.subscribe(params => {\r\n      const dateParam = params['date'];\r\n      if (dateParam) {\r\n        // Restore the previously selected date\r\n        this.selectedDate.set(dateParam);\r\n        this.manualCalculationDate.set(dateParam);\r\n      }\r\n    });\r\n\r\n    this.loadFilterOptions();\r\n    // Don't auto-load data immediately, wait for user to select filters or load with no filters as warning\r\n    this.checkInitialLoad();\r\n  }\r\n\r\n  /**\r\n   * Check if we should load data initially or show filter warning\r\n   */\r\n  private checkInitialLoad(): void {\r\n    // Try to load data without filters first, but handle the expected error gracefully\r\n    this.loading.set(true);\r\n    this.error.set(null);\r\n\r\n    const date = this.selectedDate();\r\n    console.log('=== DEBUG: Initial load attempt ===');\r\n    console.log('Date:', date);\r\n\r\n    this.attendanceService.getDailyAttendance(date).subscribe({\r\n      next: (records) => {\r\n        console.log('=== DEBUG: Initial load successful ===');\r\n        console.log('Records count:', records.length);\r\n        this.attendanceRecords.set(records);\r\n        this.loading.set(false);\r\n      },\r\n      error: (error: any) => {\r\n        console.log('=== DEBUG: Initial load failed (expected if filters required) ===');\r\n        console.log('Error:', error);\r\n\r\n        // If the error is about filters being required, show a helpful message instead of error\r\n        if (error?.status === 400 && (error?.error?.includes?.('filter') || error?.error?.includes?.('must be specified'))) {\r\n          this.loading.set(false);\r\n          this.error.set(null); // Don't show as error, this is expected\r\n          this.attendanceRecords.set([]); // Show empty state\r\n        } else {\r\n          // For other errors, show the error message\r\n          let errorMessage = this.getDetailedErrorMessage(error);\r\n          this.error.set(errorMessage);\r\n          this.loading.set(false);\r\n          this.notificationService.error(errorMessage);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  /**\r\n   * Load daily attendance records for selected date\r\n   */\r\n  loadDailyAttendance(): void {\r\n    this.loading.set(true);\r\n    this.error.set(null);\r\n\r\n    const date = this.selectedDate();\r\n    const branchId = this.selectedBranchId();\r\n    const departmentId = this.selectedDepartmentId();\r\n    const employeeId = this.selectedEmployeeId();\r\n\r\n    console.log('=== DEBUG: Loading daily attendance ===');\r\n    console.log('Date:', date);\r\n    console.log('Branch ID:', branchId);\r\n    console.log('Department ID:', departmentId);\r\n    console.log('Employee ID:', employeeId);\r\n    console.log('Current records before loading:', this.attendanceRecords().length);\r\n\r\n    this.attendanceService.getDailyAttendance(date, branchId || undefined, departmentId || undefined, employeeId || undefined).subscribe({\r\n      next: (records) => {\r\n        console.log('=== DEBUG: Received attendance records ===');\r\n        console.log('Records count:', records.length);\r\n        console.log('Records data:', records);\r\n\r\n        // Debug time data specifically\r\n        if (records.length > 0) {\r\n          const firstRecord = records[0];\r\n          console.log('=== DEBUG: First record time fields ===');\r\n          console.log('checkInTime:', firstRecord.checkInTime);\r\n          console.log('checkOutTime:', firstRecord.checkOutTime);\r\n          console.log('actualCheckInTime:', firstRecord.actualCheckInTime);\r\n          console.log('actualCheckOutTime:', firstRecord.actualCheckOutTime);\r\n          console.log('scheduledStartTime:', firstRecord.scheduledStartTime);\r\n          console.log('scheduledEndTime:', firstRecord.scheduledEndTime);\r\n        }\r\n\r\n        this.attendanceRecords.set(records);\r\n        this.loading.set(false);\r\n        console.log('Records after setting:', this.attendanceRecords().length);\r\n        console.log('Filtered records count:', this.filteredRecords().length);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('=== DEBUG: Error loading daily attendance ===');\r\n        console.error('Error object:', error);\r\n        console.error('Error status:', error?.status);\r\n        console.error('Error message:', error?.message);\r\n        console.error('Error error:', error?.error);\r\n\r\n        let errorMessage = this.getDetailedErrorMessage(error);\r\n\r\n        this.error.set(errorMessage);\r\n        this.loading.set(false);\r\n        this.notificationService.error(errorMessage);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * Handle date change\r\n   */\r\n  onDateChange(event: Event): void {\r\n    const target = event.target as HTMLInputElement;\r\n    this.selectedDate.set(target.value);\r\n    this.loadDailyAttendance();\r\n  }\r\n\r\n  /**\r\n   * Handle search input change\r\n   */\r\n  onSearchChange(event: Event): void {\r\n    const target = event.target as HTMLInputElement;\r\n    this.searchTerm.set(target.value);\r\n  }\r\n\r\n  /**\r\n   * Handle status filter change\r\n   */\r\n  onStatusChange(event: Event): void {\r\n    const target = event.target as HTMLSelectElement;\r\n    const value = target.value === '' ? null : parseInt(target.value);\r\n    this.selectedStatus.set(value as AttendanceStatus | null);\r\n  }\r\n\r\n  /**\r\n   * Handle employee filter change from searchable select\r\n   */\r\n  onEmployeeSelectionChange(employeeId: number | null): void {\r\n    this.selectedEmployeeId.set(employeeId);\r\n    this.loadDailyAttendance(); // Reload data when employee filter changes\r\n\r\n    // If branch is selected and employee filter has value, load employees for that branch\r\n    if (employeeId === null && this.selectedBranchId()) {\r\n      this.loadEmployeesForBranch(this.selectedBranchId()!);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle department filter change from searchable select\r\n   */\r\n  onDepartmentSelectionChange(departmentId: number | null): void {\r\n    this.selectedDepartmentId.set(departmentId);\r\n    this.loadDailyAttendance(); // Reload data when department filter changes\r\n  }\r\n\r\n  /**\r\n   * Handle branch filter change from searchable select\r\n   */\r\n  onBranchSelectionChange(branchId: number | null): void {\r\n    this.selectedBranchId.set(branchId);\r\n    this.loadDailyAttendance(); // Reload data when branch filter changes\r\n\r\n    // Clear employee selection and load employees for the selected branch\r\n    this.selectedEmployeeId.set(null);\r\n    if (branchId) {\r\n      this.loadEmployeesForBranch(branchId);\r\n    } else {\r\n      // Load all employees if no branch is selected\r\n      this.loadEmployeesForBranch();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Load employees for a specific branch (permission-based)\r\n   */\r\n  private loadEmployeesForBranch(branchId?: number): void {\r\n    this.loadingEmployees.set(true);\r\n    this.employeesService.getEmployeesForSelection(branchId).subscribe({\r\n      next: (employees: EmployeeSelectOption[]) => {\r\n        this.availableEmployees.set(employees);\r\n        this.loadingEmployees.set(false);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading employees for branch:', error);\r\n        this.loadingEmployees.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load filter options from API with permission-based access\r\n   */\r\n  private loadFilterOptions(): void {\r\n    // Load employees that user has access to\r\n    this.loadingEmployees.set(true);\r\n    this.employeesService.getEmployeesForSelection().subscribe({\r\n      next: (employees: EmployeeSelectOption[]) => {\r\n        this.availableEmployees.set(employees);\r\n        this.loadingEmployees.set(false);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading employees:', error);\r\n        this.loadingEmployees.set(false);\r\n      }\r\n    });\r\n\r\n    // Load departments\r\n    this.loadingDepartments.set(true);\r\n    this.departmentsService.getDepartments({}).subscribe({\r\n      next: (departments: DepartmentDto[]) => {\r\n        this.availableDepartments.set(departments);\r\n        this.loadingDepartments.set(false);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading departments:', error);\r\n        this.loadingDepartments.set(false);\r\n      }\r\n    });\r\n\r\n    // Load branches\r\n    this.loadingBranches.set(true);\r\n    this.branchesService.getBranches(1, 1000).subscribe({\r\n      next: (result) => {\r\n        this.availableBranches.set(result.items);\r\n        this.loadingBranches.set(false);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading branches:', error);\r\n        this.loadingBranches.set(false);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get status badge class for attendance status\r\n   */\r\n  getStatusBadgeClass(status: AttendanceStatus): string {\r\n    switch (status) {\r\n      case AttendanceStatus.Present:\r\n        return 'badge bg-success';\r\n      case AttendanceStatus.Absent:\r\n        return 'badge bg-danger';\r\n      case AttendanceStatus.Late:\r\n        return 'badge bg-warning';\r\n      case AttendanceStatus.EarlyLeave:\r\n        return 'badge bg-warning';\r\n      case AttendanceStatus.OnLeave:\r\n        return 'badge bg-info';\r\n      case AttendanceStatus.DayOff:\r\n        return 'badge bg-secondary';\r\n      case AttendanceStatus.Overtime:\r\n        return 'badge bg-primary';\r\n      case AttendanceStatus.Incomplete:\r\n        return 'badge bg-danger';\r\n      case AttendanceStatus.Holiday:\r\n        return 'badge bg-secondary';\r\n      case AttendanceStatus.SickLeave:\r\n        return 'badge bg-warning';\r\n      default:\r\n        return 'badge bg-secondary';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get status text translation key\r\n   */\r\n  getStatusText(status: AttendanceStatus): string {\r\n    switch (status) {\r\n      case AttendanceStatus.Present:\r\n        return 'attendance.status.present';\r\n      case AttendanceStatus.Absent:\r\n        return 'attendance.status.absent';\r\n      case AttendanceStatus.Late:\r\n        return 'attendance.status.late';\r\n      case AttendanceStatus.EarlyLeave:\r\n        return 'attendance.status.early_leave';\r\n      case AttendanceStatus.OnLeave:\r\n        return 'attendance.status.on_leave';\r\n      case AttendanceStatus.DayOff:\r\n        return 'attendance.status.day_off';\r\n      case AttendanceStatus.Overtime:\r\n        return 'attendance.status.overtime';\r\n      case AttendanceStatus.Incomplete:\r\n        return 'attendance.status.incomplete';\r\n      case AttendanceStatus.Holiday:\r\n        return 'attendance.status.holiday';\r\n      case AttendanceStatus.SickLeave:\r\n        return 'attendance.status.sick_leave';\r\n      case AttendanceStatus.Pending:\r\n        return 'attendance.status.pending';\r\n      default:\r\n        return 'attendance.status.pending';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Format time for display\r\n   */\r\n  formatTime(time: string | null): string {\r\n    if (!time) return '--:--';\r\n\r\n    try {\r\n      // Handle different time formats\r\n      let timeToFormat = time;\r\n\r\n      // If it's a full datetime, extract just the time part\r\n      if (time.includes('T')) {\r\n        const timePart = time.split('T')[1];\r\n        timeToFormat = timePart.split('Z')[0]; // Remove Z if present\r\n      }\r\n\r\n      // If it already includes date, use it directly\r\n      if (timeToFormat.includes(':')) {\r\n        const date = new Date(`1970-01-01T${timeToFormat}`);\r\n        if (!isNaN(date.getTime())) {\r\n          return date.toLocaleTimeString('en-US', {\r\n            hour: '2-digit',\r\n            minute: '2-digit',\r\n            hour12: false\r\n          });\r\n        }\r\n      }\r\n\r\n      return timeToFormat;\r\n    } catch {\r\n      return time || '--:--';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get check-in time with fallback to actual check-in time\r\n   */\r\n  getCheckInTime(record: AttendanceRecord): string | null {\r\n    return record.checkInTime || record.actualCheckInTime || null;\r\n  }\r\n\r\n  /**\r\n   * Get check-out time with fallback to actual check-out time\r\n   */\r\n  getCheckOutTime(record: AttendanceRecord): string | null {\r\n    return record.checkOutTime || record.actualCheckOutTime || null;\r\n  }\r\n\r\n\r\n\r\n  /**\r\n   * Format hours (convert decimal hours to hours and minutes)\r\n   */\r\n  formatHours(hours: number): string {\r\n    if (!hours || hours === 0) return '0h 0m';\r\n\r\n    const wholeHours = Math.floor(hours);\r\n    const minutes = Math.round((hours - wholeHours) * 60);\r\n\r\n    if (wholeHours === 0) {\r\n      return `${minutes}m`;\r\n    } else if (minutes === 0) {\r\n      return `${wholeHours}h`;\r\n    } else {\r\n      return `${wholeHours}h ${minutes}m`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Format late time from minutes\r\n   */\r\n  formatLateTime(lateMinutes: number): string {\r\n    if (!lateMinutes || lateMinutes === 0) return '--';\r\n\r\n    const hours = Math.floor(lateMinutes / 60);\r\n    const minutes = lateMinutes % 60;\r\n\r\n    if (hours === 0) {\r\n      return `${minutes}m`;\r\n    } else if (minutes === 0) {\r\n      return `${hours}h`;\r\n    } else {\r\n      return `${hours}h ${minutes}m`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculate total late minutes (late arrival + early departure)\r\n   */\r\n  calculateTotalLateMinutes(record: AttendanceRecord): number {\r\n    const lateMinutes = record.lateMinutes || 0;\r\n    const earlyLeaveMinutes = record.earlyLeaveMinutes || 0;\r\n    return lateMinutes + earlyLeaveMinutes;\r\n  }\r\n\r\n  /**\r\n   * Format status for table display with badge styling\r\n   */\r\n  formatStatusForTable(status: AttendanceStatus): string {\r\n    const statusText = this.i18n.t(this.getStatusText(status));\r\n    const badgeClass = this.getStatusBadgeClass(status);\r\n    return `<span class=\"${badgeClass}\">${statusText}</span>`;\r\n  }\r\n\r\n  /**\r\n   * Get CSS class for working hours based on comparison with scheduled hours\r\n   */\r\n  getWorkingHoursClass(workingHours: number, scheduledHours: number): string {\r\n    if (!workingHours || !scheduledHours) return 'text-muted';\r\n\r\n    if (workingHours >= scheduledHours) {\r\n      return 'text-success'; // Met or exceeded scheduled hours\r\n    } else if (workingHours >= scheduledHours * 0.8) {\r\n      return 'text-warning'; // Close to scheduled hours (80%+)\r\n    } else {\r\n      return 'text-danger'; // Significantly below scheduled hours\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get CSS class for late time display\r\n   */\r\n  getLateTimeClass(lateMinutes: number): string {\r\n    if (!lateMinutes || lateMinutes === 0) return 'text-muted';\r\n\r\n    if (lateMinutes <= 15) {\r\n      return 'text-warning'; // Minor lateness (15 minutes or less)\r\n    } else {\r\n      return 'text-danger'; // Significant lateness (more than 15 minutes)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Navigate to daily attendance detail page for specific employee and date\r\n   */\r\n  viewDailyAttendanceDetail(employeeId: number): void {\r\n    this.router.navigate(['/attendance/daily-detail', employeeId, this.selectedDate()]);\r\n  }\r\n\r\n  /**\r\n   * Navigate to employee attendance detail page\r\n   */\r\n  viewEmployeeDetail(employeeId: number): void {\r\n    this.router.navigate(['/attendance/employee', employeeId]);\r\n  }\r\n\r\n  /**\r\n   * Navigate to edit attendance record page\r\n   */\r\n  editAttendanceRecord(record: AttendanceRecord): void {\r\n    // Navigate to edit page using the attendance record ID, passing the current date as a query parameter\r\n    this.router.navigate(['/attendance/edit', record.id], {\r\n      queryParams: { returnDate: this.selectedDate() }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle table sort event\r\n   */\r\n  onSort(event: SortEvent): void {\r\n    this.sortColumn.set(event.column);\r\n    this.sortDirection.set(event.direction);\r\n    this.currentPage.set(1); // Reset to first page when sorting\r\n  }\r\n\r\n  /**\r\n   * Handle page change event\r\n   */\r\n  onPageChange(page: number): void {\r\n    this.currentPage.set(page);\r\n  }\r\n\r\n  /**\r\n   * Handle page size change event\r\n   */\r\n  onPageSizeChange(size: number): void {\r\n    this.pageSize.set(size);\r\n    this.currentPage.set(1); // Reset to first page when page size changes\r\n  }\r\n\r\n  /**\r\n   * Get value for sorting\r\n   */\r\n  private getValueForSorting(record: AttendanceRecord, column: string): any {\r\n    switch (column) {\r\n      case 'employeeNumber':\r\n        return record.employeeNumber;\r\n      case 'employeeName':\r\n        return record.employeeName;\r\n      case 'status':\r\n        return record.status || 0;\r\n      case 'workingHours':\r\n        return record.workingHours || 0;\r\n      case 'scheduledHours':\r\n        return record.scheduledHours || 0;\r\n      case 'lateMinutes':\r\n        return record.lateMinutes || 0;\r\n      default:\r\n        return record[column as keyof AttendanceRecord];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle table action clicks\r\n   */\r\n  onActionClick(event: {action: string, item: any}): void {\r\n    const { action, item } = event;\r\n\r\n    switch (action) {\r\n      case 'view':\r\n        this.viewDailyAttendanceDetail(item.employeeId);\r\n        break;\r\n      case 'edit':\r\n        this.editAttendanceRecord(item);\r\n        break;\r\n      case 'change-shift':\r\n        this.router.navigate(['/attendance', item.id, 'change-shift']);\r\n        break;\r\n      case 'recalculate':\r\n        this.recalculateEmployeeAttendance(item.employeeId);\r\n        break;\r\n      default:\r\n        console.warn('Unknown action:', action);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transform attendance records for data table - using computed to avoid refresh issues\r\n   */\r\n  tableData = computed(() => {\r\n    return this.paginatedRecords().map(record => ({\r\n      ...record,\r\n      status: this.formatStatusForTable(record.status),\r\n      checkIn: this.formatTime(this.getCheckInTime(record)),\r\n      checkOut: this.formatTime(this.getCheckOutTime(record)),\r\n      workingHours: this.formatHours(record.workingHours),\r\n      scheduledHours: this.formatHours(record.scheduledHours),\r\n      overtimeHours: this.formatHours(record.overtimeHours),\r\n      lateMinutes: this.formatLateTime(record.lateMinutes),\r\n      earlyLeaveMinutes: this.formatLateTime(record.earlyLeaveMinutes),\r\n      totalLateMinutes: this.formatLateTime(this.calculateTotalLateMinutes(record))\r\n    }));\r\n  });\r\n\r\n  /**\r\n   * Export daily attendance data\r\n   */\r\n  exportData(): void {\r\n    const records = this.filteredRecords();\r\n    if (records.length === 0) {\r\n      this.notificationService.warning('No data to export');\r\n      return;\r\n    }\r\n\r\n    // Implement CSV export\r\n    const csvContent = this.generateCSV(records);\r\n    this.downloadCSV(csvContent, `daily-attendance-${this.selectedDate()}.csv`);\r\n    this.notificationService.success('Data exported successfully');\r\n  }\r\n\r\n  /**\r\n   * Generate CSV content from records\r\n   */\r\n  private generateCSV(records: AttendanceRecord[]): string {\r\n    const headers = [\r\n      'Employee Number',\r\n      'Employee Name',\r\n      'Status',\r\n      'Check In',\r\n      'Check Out',\r\n      'Working Hours',\r\n      'Scheduled Hours',\r\n      'Overtime Hours',\r\n      'Late Minutes',\r\n      'Early Leave Minutes',\r\n      'Total Late'\r\n    ];\r\n\r\n    const rows = records.map(record => [\r\n      record.employeeNumber,\r\n      record.employeeName,\r\n      this.i18n.t(this.getStatusText(record.status)),\r\n      this.formatTime(this.getCheckInTime(record)),\r\n      this.formatTime(this.getCheckOutTime(record)),\r\n      this.formatHours(record.workingHours),\r\n      this.formatHours(record.scheduledHours),\r\n      this.formatHours(record.overtimeHours),\r\n      this.formatLateTime(record.lateMinutes),\r\n      this.formatLateTime(record.earlyLeaveMinutes),\r\n      this.formatLateTime(this.calculateTotalLateMinutes(record))\r\n    ]);\r\n\r\n    return [headers, ...rows]\r\n      .map(row => row.map(cell => `\"${cell}\"`).join(','))\r\n      .join('\\n');\r\n  }\r\n\r\n  /**\r\n   * Download CSV file\r\n   */\r\n  private downloadCSV(content: string, filename: string): void {\r\n    const blob = new Blob([content], { type: 'text/csv;charset=utf-8;' });\r\n    const link = document.createElement('a');\r\n\r\n    if (link.download !== undefined) {\r\n      const url = URL.createObjectURL(blob);\r\n      link.setAttribute('href', url);\r\n      link.setAttribute('download', filename);\r\n      link.style.visibility = 'hidden';\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      document.body.removeChild(link);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Manual refresh button\r\n   */\r\n  onRefresh(): void {\r\n    this.loadDailyAttendance();\r\n  }\r\n\r\n  /**\r\n   * Track by function for ngFor\r\n   */\r\n  trackByEmployeeId(index: number, record: AttendanceRecord): number {\r\n    return record.employeeId;\r\n  }\r\n\r\n  /**\r\n   * Get detailed error message based on error response\r\n   */\r\n  private getDetailedErrorMessage(error: any): string {\r\n    if (error?.status === 400) {\r\n      if (error?.error && typeof error.error === 'string') {\r\n        if (error.error.includes('At least one filter') || error.error.includes('must be specified')) {\r\n          return 'To view attendance records, please select at least one filter: Employee, Department, or Branch. You can also contact your administrator if you need access to view all records.';\r\n        }\r\n        return error.error;\r\n      }\r\n      return 'Please select at least one filter (Employee, Department, or Branch) to view attendance records.';\r\n    }\r\n\r\n    if (error?.status === 403) {\r\n      return 'You do not have permission to view attendance records. Please contact your administrator.';\r\n    }\r\n\r\n    if (error?.status === 404) {\r\n      return 'No attendance records found for the selected criteria.';\r\n    }\r\n\r\n    if (error?.status === 500) {\r\n      return 'Server error occurred while loading attendance records. Please try again or contact support.';\r\n    }\r\n\r\n    if (error?.error && typeof error.error === 'string') {\r\n      return error.error;\r\n    }\r\n\r\n    if (error?.message) {\r\n      return error.message;\r\n    }\r\n\r\n    return 'Failed to load daily attendance records. Please try again.';\r\n  }\r\n\r\n  /**\r\n   * Check if any filter is applied\r\n   */\r\n  hasActiveFilters(): boolean {\r\n    return !!(this.selectedEmployeeId() || this.selectedDepartmentId() || this.selectedBranchId());\r\n  }\r\n\r\n  /**\r\n   * Clear all filters\r\n   */\r\n  clearFilters(): void {\r\n    this.selectedEmployeeId.set(null);\r\n    this.selectedDepartmentId.set(null);\r\n    this.selectedBranchId.set(null);\r\n    this.selectedStatus.set(null);\r\n    this.searchTerm.set('');\r\n\r\n    // Reset form elements\r\n    const selects = document.querySelectorAll('select');\r\n    selects.forEach(select => (select as HTMLSelectElement).value = '');\r\n\r\n    const searchInput = document.querySelector('input[type=\"text\"]') as HTMLInputElement;\r\n    if (searchInput) searchInput.value = '';\r\n\r\n    // Reload all employees when filters are cleared\r\n    this.loadEmployeesForBranch();\r\n\r\n    this.loadDailyAttendance();\r\n  }\r\n\r\n  // ====================================================================\r\n  // ENHANCED MANUAL CALCULATION METHODS\r\n  // ====================================================================\r\n\r\n  /**\r\n   * Manually calculate attendance for a specific employee on the selected date\r\n   */\r\n  async recalculateEmployeeAttendance(employeeId: number): Promise<void> {\r\n    const date = this.selectedDate();\r\n\r\n    const result = await this.confirmationService.confirm({\r\n      title: this.i18n.t('attendance.actions.recalculate'),\r\n      message: this.i18n.t('attendance.confirmations.recalculate_employee'),\r\n      confirmText: this.i18n.t('app.confirm'),\r\n      cancelText: this.i18n.t('app.cancel'),\r\n      confirmButtonClass: 'btn-info',\r\n      icon: 'fa-calculator',\r\n      iconClass: 'text-info'\r\n    });\r\n\r\n    if (!result.confirmed) {\r\n      return;\r\n    }\r\n\r\n    this.calculating.set(true);\r\n\r\n    this.attendanceService.calculateAttendanceForEmployeeDate(employeeId, date).subscribe({\r\n      next: (updatedRecord) => {\r\n        // Update the record in the current list\r\n        const records = this.attendanceRecords();\r\n        const index = records.findIndex(r => r.employeeId === employeeId);\r\n        if (index !== -1) {\r\n          const updatedRecords = [...records];\r\n          updatedRecords[index] = updatedRecord;\r\n          this.attendanceRecords.set(updatedRecords);\r\n        }\r\n\r\n        this.calculating.set(false);\r\n        this.notificationService.success(this.i18n.t('attendance.messages.recalculation_success'));\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error recalculating attendance:', error);\r\n        this.calculating.set(false);\r\n\r\n        let errorMessage = 'Failed to recalculate attendance';\r\n        if (error?.error && typeof error.error === 'string') {\r\n          errorMessage = error.error;\r\n        }\r\n\r\n        this.notificationService.error(errorMessage);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Manually calculate attendance for all employees on the selected date\r\n   */\r\n  calculateAllEmployees(forceRecalculate: boolean = false): void {\r\n    this.calculateAllEmployeesForDate(this.selectedDate(), forceRecalculate);\r\n  }\r\n\r\n  /**\r\n   * Manually calculate attendance for all employees on a specific date\r\n   */\r\n  async calculateAllEmployeesForDate(date: string, forceRecalculate: boolean = false): Promise<void> {\r\n    const actionTitle = forceRecalculate\r\n      ? this.i18n.t('attendance.actions.recalculate_all')\r\n      : this.i18n.t('attendance.actions.generate_missing');\r\n\r\n    const confirmMessage = forceRecalculate\r\n      ? this.i18n.t('attendance.confirmations.recalculate_all').replace('{{date}}', date)\r\n      : this.i18n.t('attendance.confirmations.generate_missing').replace('{{date}}', date);\r\n\r\n    const result = await this.confirmationService.confirm({\r\n      title: actionTitle,\r\n      message: confirmMessage,\r\n      confirmText: this.i18n.t('app.confirm'),\r\n      cancelText: this.i18n.t('app.cancel'),\r\n      confirmButtonClass: forceRecalculate ? 'btn-warning' : 'btn-info',\r\n      icon: forceRecalculate ? 'fa-calculator' : 'fa-plus',\r\n      iconClass: forceRecalculate ? 'text-warning' : 'text-info'\r\n    });\r\n\r\n    if (!result.confirmed) {\r\n      return;\r\n    }\r\n\r\n    this.calculatingBulk.set(true);\r\n\r\n    this.attendanceService.calculateAttendanceForDate(date, forceRecalculate).subscribe({\r\n      next: (result) => {\r\n        this.calculatingBulk.set(false);\r\n\r\n        const successMessage = this.i18n.t('attendance.messages.bulk_calculation_success')\r\n          .replace('{{generated}}', result.recordsGenerated.toString())\r\n          .replace('{{updated}}', result.recordsUpdated.toString())\r\n          .replace('{{date}}', date);\r\n\r\n        this.notificationService.success(successMessage);\r\n\r\n        // Reload the data if calculating for the currently selected date\r\n        if (date === this.selectedDate()) {\r\n          this.loadDailyAttendance();\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error calculating attendance for all employees:', error);\r\n        this.calculatingBulk.set(false);\r\n\r\n        let errorMessage = this.i18n.t('attendance.messages.calculation_failed');\r\n        if (error?.error && typeof error.error === 'string') {\r\n          errorMessage = error.error;\r\n        }\r\n\r\n        this.notificationService.error(errorMessage);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Force recalculate all employees (with existing records)\r\n   */\r\n  forceRecalculateAll(): void {\r\n    this.calculateAllEmployees(true);\r\n  }\r\n\r\n  /**\r\n   * Generate attendance for employees without records\r\n   */\r\n  generateMissingAttendance(): void {\r\n    this.calculateAllEmployees(false);\r\n  }\r\n\r\n  /**\r\n   * Manual calculation for specific date (generate missing records)\r\n   */\r\n  generateMissingAttendanceForDate(): void {\r\n    this.calculateAllEmployeesForDate(this.manualCalculationDate(), false);\r\n  }\r\n\r\n  /**\r\n   * Manual calculation for specific date (force recalculate all)\r\n   */\r\n  forceRecalculateAllForDate(): void {\r\n    this.calculateAllEmployeesForDate(this.manualCalculationDate(), true);\r\n  }\r\n\r\n  /**\r\n   * Update manual calculation date\r\n   */\r\n  onManualCalculationDateChange(event: Event): void {\r\n    const input = event.target as HTMLInputElement;\r\n    this.manualCalculationDate.set(input.value);\r\n  }\r\n\r\n  /**\r\n   * Check if manual calculation features should be enabled (admin/manager permissions)\r\n   */\r\n  canManuallyCalculate(): boolean {\r\n    // This should check user permissions - for now returning true\r\n    // In real implementation, check if user has admin or attendance management permissions\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Check if any employee has incomplete status that might benefit from recalculation\r\n   */\r\n  hasIncompleteRecords(): boolean {\r\n    return this.filteredRecords().some(record =>\r\n      record.status === AttendanceStatus.Incomplete ||\r\n      record.status === AttendanceStatus.Pending\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get count of employees without attendance records (for information)\r\n   */\r\n  getMissingRecordsInfo(): string {\r\n    const totalExpected = this.availableEmployees().length;\r\n    const currentRecords = this.attendanceRecords().length;\r\n    const missing = Math.max(0, totalExpected - currentRecords);\r\n\r\n    if (missing > 0) {\r\n      return this.i18n.t('attendance.info.missing_records').replace('{{count}}', missing.toString());\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n\r\n}", "<div class=\"container-fluid p-4\">\n  <!-- Page Header -->\n  <app-page-header\n    [title]=\"i18n.t('attendance.daily_view')\">\n  </app-page-header>\n\n  <div class=\"row mb-4\">\n    <div class=\"col-12\">\n      <div class=\"d-flex justify-content-end align-items-center\">\n        <div>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-secondary me-2\"\n            (click)=\"clearFilters()\"\n            [disabled]=\"loading() || !hasActiveFilters()\"\n            [title]=\"i18n.t('attendance.actions.clear_filters')\">\n            <i class=\"fa-solid fa-filter-circle-xmark me-2\"></i>{{ i18n.t('attendance.actions.clear_filters') }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-primary me-2\"\n            (click)=\"onRefresh()\"\n            [disabled]=\"loading()\">\n            <i class=\"fa-solid fa-refresh me-2\"></i>{{ i18n.t('app.refresh') }}\n          </button>\n          <button\n            type=\"button\"\n            class=\"btn btn-success\"\n            (click)=\"exportData()\"\n            [disabled]=\"loading() || filteredRecords().length === 0\">\n            <i class=\"fa-solid fa-download me-2\"></i>{{ i18n.t('attendance.actions.export_data') }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Manual Calculation Section (Admin only) -->\n  @if (canManuallyCalculate()) {\n    <div class=\"card mb-4 border-info\">\n      <div class=\"card-header bg-light\">\n        <div>\n          <h5 class=\"mb-1\">\n            <i class=\"fa-solid fa-calculator me-2 text-info\"></i>\n            {{ i18n.t('attendance.manual_calculation.title') }}\n          </h5>\n          <small class=\"text-muted\">{{ i18n.t('attendance.manual_calculation.subtitle') }}</small>\n        </div>\n      </div>\n      <div class=\"card-body\">\n        <div class=\"row align-items-end\">\n          <div class=\"col-md-3\">\n            <label class=\"form-label\">{{ i18n.t('attendance.manual_calculation.select_date') }}</label>\n            <input\n              type=\"date\"\n              class=\"form-control\"\n              [value]=\"manualCalculationDate()\"\n              (change)=\"onManualCalculationDateChange($event)\"\n              [disabled]=\"calculatingBulk()\">\n          </div>\n          <div class=\"col-md-9\">\n            <div class=\"d-flex gap-2\">\n              <button\n                type=\"button\"\n                class=\"btn btn-info\"\n                (click)=\"generateMissingAttendanceForDate()\"\n                [disabled]=\"calculatingBulk()\"\n                [title]=\"i18n.t('attendance.manual_calculation.generate_missing_help')\">\n                <i class=\"fa-solid me-2\" [class.fa-plus]=\"!calculatingBulk()\" [class.fa-spinner]=\"calculatingBulk()\" [class.fa-spin]=\"calculatingBulk()\"></i>{{ i18n.t('attendance.manual_calculation.generate_missing') }}\n              </button>\n              <button\n                type=\"button\"\n                class=\"btn btn-warning\"\n                (click)=\"forceRecalculateAllForDate()\"\n                [disabled]=\"calculatingBulk()\"\n                [title]=\"i18n.t('attendance.manual_calculation.recalculate_all_help')\">\n                <i class=\"fa-solid me-2\" [class.fa-calculator]=\"!calculatingBulk()\" [class.fa-spinner]=\"calculatingBulk()\" [class.fa-spin]=\"calculatingBulk()\"></i>{{ i18n.t('attendance.manual_calculation.recalculate_all') }}\n              </button>\n            </div>\n            <small class=\"text-muted mt-1 d-block\">\n              {{ i18n.t('attendance.manual_calculation.date_info').replace('{{date}}', manualCalculationDate()) }}\n            </small>\n          </div>\n        </div>\n      </div>\n    </div>\n  }\n\n  <!-- Date Selection and Filters -->\n  <div class=\"card mb-4\">\n    <div class=\"card-body\">\n      <div class=\"row g-3\">\n        <div class=\"col-md-2\">\n          <label class=\"form-label\">{{ i18n.t('attendance.filters.date') }}</label>\n          <input\n            type=\"date\"\n            class=\"form-control\"\n            [value]=\"selectedDate()\"\n            (change)=\"onDateChange($event)\"\n            [disabled]=\"loading()\">\n        </div>\n        <div class=\"col-md-2\">\n          <label class=\"form-label\">{{ i18n.t('attendance.filters.branch') }}</label>\n          <app-searchable-select\n            [options]=\"branchSelectOptions()\"\n            [loading]=\"loadingBranches()\"\n            [disabled]=\"loading()\"\n            [placeholder]=\"i18n.t('attendance.filters.all_branches')\"\n            [clearable]=\"true\"\n            [value]=\"selectedBranchId()\"\n            (selectionChange)=\"onBranchSelectionChange($event)\">\n          </app-searchable-select>\n        </div>\n        <div class=\"col-md-2\">\n          <label class=\"form-label\">{{ i18n.t('attendance.filters.department') }}</label>\n          <app-searchable-select\n            [options]=\"departmentSelectOptions()\"\n            [loading]=\"loadingDepartments()\"\n            [disabled]=\"loading()\"\n            [placeholder]=\"i18n.t('attendance.filters.all_departments')\"\n            [clearable]=\"true\"\n            [value]=\"selectedDepartmentId()\"\n            (selectionChange)=\"onDepartmentSelectionChange($event)\">\n          </app-searchable-select>\n        </div>\n        <div class=\"col-md-2\">\n          <label class=\"form-label\">{{ i18n.t('attendance.filters.employee') }}</label>\n          <app-searchable-select\n            [options]=\"employeeSelectOptions()\"\n            [loading]=\"loadingEmployees()\"\n            [disabled]=\"loading()\"\n            [placeholder]=\"i18n.t('attendance.filters.all_employees')\"\n            [clearable]=\"true\"\n            [searchable]=\"true\"\n            [value]=\"selectedEmployeeId()\"\n            (selectionChange)=\"onEmployeeSelectionChange($event)\">\n          </app-searchable-select>\n        </div>\n        <div class=\"col-md-2\">\n          <label class=\"form-label\">{{ i18n.t('attendance.filters.status') }}</label>\n          <select\n            class=\"form-select\"\n            (change)=\"onStatusChange($event)\"\n            [disabled]=\"loading()\">\n            @for (status of availableStatuses; track status.value) {\n              <option\n                [value]=\"status.value === null ? '' : status.value\">\n                {{ i18n.t(status.label) }}\n              </option>\n            }\n          </select>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <!-- Quick Statistics Cards -->\n  <div class=\"row mb-4\">\n    <div class=\"col-md-3 mb-3\">\n      <div class=\"card stats-card border-start border-primary border-4\">\n        <div class=\"card-body\">\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <div>\n              <h6 class=\"card-title text-muted small\">{{ i18n.t('attendance.statistics.total_employees') }}</h6>\n              <h3 class=\"text-primary mb-0\">{{ totalEmployees() }}</h3>\n            </div>\n            <div class=\"icon-circle bg-primary bg-opacity-10\">\n              <i class=\"fa-solid fa-users text-primary\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-3 mb-3\">\n      <div class=\"card stats-card border-start border-success border-4\">\n        <div class=\"card-body\">\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <div>\n              <h6 class=\"card-title text-muted small\">{{ i18n.t('attendance.statistics.present_employees') }}</h6>\n              <h3 class=\"text-success mb-0\">{{ presentEmployees() }}</h3>\n            </div>\n            <div class=\"icon-circle bg-success bg-opacity-10\">\n              <i class=\"fa-solid fa-user-check text-success\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-3 mb-3\">\n      <div class=\"card stats-card border-start border-danger border-4\">\n        <div class=\"card-body\">\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <div>\n              <h6 class=\"card-title text-muted small\">{{ i18n.t('attendance.statistics.absent_employees') }}</h6>\n              <h3 class=\"text-danger mb-0\">{{ absentEmployees() }}</h3>\n            </div>\n            <div class=\"icon-circle bg-danger bg-opacity-10\">\n              <i class=\"fa-solid fa-user-times text-danger\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"col-md-3 mb-3\">\n      <div class=\"card stats-card border-start border-warning border-4\">\n        <div class=\"card-body\">\n          <div class=\"d-flex justify-content-between align-items-center\">\n            <div>\n              <h6 class=\"card-title text-muted small\">{{ i18n.t('attendance.statistics.late_employees') }}</h6>\n              <h3 class=\"text-warning mb-0\">{{ lateEmployees() }}</h3>\n            </div>\n            <div class=\"icon-circle bg-warning bg-opacity-10\">\n              <i class=\"fa-solid fa-clock text-warning\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n\n  <!-- Loading State -->\n  @if (loading()) {\n    <div class=\"text-center py-5\">\n      <app-loading-spinner\n        [message]=\"i18n.t('attendance.messages.loading_data')\"\n        [variant]=\"'primary'\"\n        [centered]=\"true\">\n      </app-loading-spinner>\n    </div>\n  }\n\n  <!-- Error State -->\n  @if (error()) {\n    <div class=\"alert alert-danger\">\n      <div class=\"d-flex justify-content-between align-items-start\">\n        <div>\n          <i class=\"fa-solid fa-exclamation-triangle me-2\"></i>\n          {{ error() }}\n        </div>\n        @if (!hasActiveFilters()) {\n          <button\n            type=\"button\"\n            class=\"btn btn-outline-danger btn-sm ms-2\"\n            (click)=\"clearFilters()\"\n            [title]=\"i18n.t('attendance.actions.try_with_filter')\">\n            <i class=\"fa-solid fa-filter me-1\"></i>\n            {{ i18n.t('attendance.actions.add_filter') }}\n          </button>\n        }\n      </div>\n    </div>\n  }\n\n  <!-- Filter Hint -->\n  @if (!loading() && !error() && filteredRecords().length === 0 && !hasActiveFilters()) {\n    <div class=\"alert alert-info\">\n      <i class=\"fa-solid fa-info-circle me-2\"></i>\n      {{ i18n.t('attendance.hints.better_performance') }}\n      <strong class=\"ms-1\">{{ i18n.t('attendance.hints.use_filters') }}</strong>\n      <div class=\"mt-2\">\n        <small class=\"text-muted\">\n          {{ i18n.t('attendance.hints.filter_help') || 'Please select a Branch, Department, or Employee to view attendance records for today.' }}\n        </small>\n      </div>\n    </div>\n  }\n\n  <!-- Search Box -->\n  @if (!loading() && !error()) {\n    <div class=\"row mb-3\">\n      <div class=\"col-md-6\">\n        <label class=\"form-label\">{{ i18n.t('attendance.filters.search') }}</label>\n        <input\n          type=\"text\"\n          class=\"form-control\"\n          [placeholder]=\"i18n.t('attendance.filters.search_placeholder')\"\n          (input)=\"onSearchChange($event)\"\n          [disabled]=\"loading()\">\n      </div>\n    </div>\n  }\n\n  <!-- Attendance Records Table -->\n  @if (!loading() && !error()) {\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <div class=\"d-flex justify-content-between align-items-center\">\n          <h5 class=\"mb-0\">\n            <i class=\"fa-solid fa-calendar-check me-2\"></i>\n            {{ i18n.t('attendance.daily_records') }}\n          </h5>\n          <span class=\"badge bg-primary\">{{ filteredRecords().length }} {{ i18n.t('attendance.records') }}</span>\n        </div>\n      </div>\n      <div class=\"card-body p-0\">\n\n        <!-- No Records -->\n        @if (filteredRecords().length === 0) {\n          <div class=\"text-center py-5\">\n            <i class=\"fa-solid fa-calendar-xmark fa-3x text-muted mb-3\"></i>\n            <h5 class=\"text-muted\">{{ i18n.t('attendance.no_records') }}</h5>\n            <p class=\"text-muted\">{{ i18n.t('attendance.no_records_description') }}</p>\n          </div>\n        }\n\n        <!-- Data Table -->\n        @if (filteredRecords().length > 0) {\n          <div>\n            <app-data-table\n              [data]=\"tableData()\"\n              [columns]=\"tableColumns()\"\n              [actions]=\"tableActions()\"\n              [loading]=\"loading\"\n              [showPagination]=\"true\"\n              [currentPage]=\"currentPage\"\n              [totalPages]=\"tableTotalPages\"\n              [totalItems]=\"tableTotalItems\"\n              [pageSize]=\"pageSize\"\n              [sortColumn]=\"sortColumn\"\n              [sortDirection]=\"sortDirection\"\n              [responsiveMode]=\"'horizontal-scroll'\"\n              [emptyMessage]=\"i18n.t('attendance.daily.no_records')\"\n              (sortChange)=\"onSort($event)\"\n              (actionClick)=\"onActionClick($event)\"\n              (pageChange)=\"onPageChange($event)\"\n              (pageSizeChange)=\"onPageSizeChange($event)\"\n              class=\"table-hover\">\n            </app-data-table>\n          </div>\n        }\n      </div>\n    </div>\n  }\n\n\n</div>"],
  "mappings": "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",
  "names": ["result"]
}
