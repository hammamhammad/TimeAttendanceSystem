{
  "version": 3,
  "sources": ["src/app/pages/settings/overtime/overtime-configurations.component.ts", "src/app/pages/settings/overtime/overtime-configurations.component.html"],
  "sourcesContent": ["import { Component, OnInit, signal, inject, computed } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { I18nService } from '../../../core/i18n/i18n.service';\r\nimport { OvertimeConfigurationsService, OvertimeConfiguration } from './overtime-configurations.service';\r\nimport { NotificationService } from '../../../core/notifications/notification.service';\r\nimport { ConfirmationService } from '../../../core/confirmation/confirmation.service';\r\nimport { PermissionService } from '../../../core/auth/permission.service';\r\nimport { HasPermissionDirective } from '../../../shared/directives/has-permission.directive';\r\nimport { DataTableComponent, TableColumn, TableAction } from '../../../shared/components/data-table/data-table.component';\r\nimport { PageHeaderComponent } from '../../../shared/components/page-header/page-header.component';\r\nimport { UnifiedFilterComponent } from '../../../shared/components/unified-filter/unified-filter.component';\r\n\r\n@Component({\r\n  selector: 'app-overtime-configurations',\r\n  standalone: true,\r\n  imports: [CommonModule, FormsModule, DataTableComponent, PageHeaderComponent, UnifiedFilterComponent],\r\n  templateUrl: './overtime-configurations.component.html',\r\n  styleUrls: ['./overtime-configurations.component.css']\r\n})\r\nexport class OvertimeConfigurationsComponent implements OnInit {\r\n  private overtimeService = inject(OvertimeConfigurationsService);\r\n  private router = inject(Router);\r\n  private notificationService = inject(NotificationService);\r\n  private confirmationService = inject(ConfirmationService);\r\n  public i18n = inject(I18nService);\r\n  public permissionService = inject(PermissionService);\r\n\r\n  // Permission constants for use in template\r\n  readonly PERMISSIONS = {\r\n    OVERTIME_CREATE: 'settings.create',\r\n    OVERTIME_READ: 'settings.read',\r\n    OVERTIME_UPDATE: 'settings.update',\r\n    OVERTIME_DELETE: 'settings.delete',\r\n    OVERTIME_ACTIVATE: 'settings.configure'\r\n  };\r\n\r\n  // Signals for state management\r\n  loading = signal(false);\r\n  configurations = signal<OvertimeConfiguration[]>([]);\r\n\r\n  // Filter signals\r\n  searchTerm = '';\r\n\r\n  // Sorting state\r\n  sortColumn = signal<keyof OvertimeConfiguration>('effectiveFromDate');\r\n  sortDirection = signal<'asc' | 'desc'>('desc');\r\n\r\n  // Data table configuration\r\n  tableColumns = computed<TableColumn[]>(() => [\r\n    {\r\n      key: 'status',\r\n      label: this.t('settings.overtime.status'),\r\n      sortable: false,\r\n      width: '120px',\r\n      align: 'center',\r\n      priority: 'high',\r\n      mobileLabel: this.t('settings.overtime.status'),\r\n      renderHtml: true\r\n    },\r\n    {\r\n      key: 'effectiveFromDate',\r\n      label: this.t('settings.overtime.effectiveFrom'),\r\n      sortable: true,\r\n      width: '150px',\r\n      priority: 'high',\r\n      mobileLabel: this.t('settings.overtime.effectiveFrom')\r\n    },\r\n    {\r\n      key: 'effectiveToDate',\r\n      label: this.t('settings.overtime.effectiveTo'),\r\n      sortable: true,\r\n      width: '150px',\r\n      priority: 'medium',\r\n      hideOnMobile: false,\r\n      mobileLabel: this.t('settings.overtime.effectiveTo')\r\n    },\r\n    {\r\n      key: 'rates',\r\n      label: this.t('settings.overtime.rates'),\r\n      sortable: false,\r\n      width: '200px',\r\n      priority: 'medium',\r\n      hideOnMobile: false,\r\n      mobileLabel: this.t('settings.overtime.rates'),\r\n      renderHtml: true\r\n    },\r\n    {\r\n      key: 'settings',\r\n      label: this.t('settings.overtime.configuration'),\r\n      sortable: false,\r\n      width: '180px',\r\n      priority: 'low',\r\n      hideOnMobile: true,\r\n      mobileLabel: this.t('settings.overtime.configuration'),\r\n      renderHtml: true\r\n    },\r\n    {\r\n      key: 'createdAtUtc',\r\n      label: this.t('common.created'),\r\n      sortable: true,\r\n      width: '150px',\r\n      priority: 'low',\r\n      hideOnMobile: true,\r\n      mobileLabel: this.t('common.created')\r\n    }\r\n  ]);\r\n\r\n  tableActions = computed<TableAction[]>(() => [\r\n    {\r\n      key: 'view',\r\n      label: this.t('common.view'),\r\n      icon: 'fa-eye',\r\n      color: 'primary',\r\n      condition: () => this.permissionService.has(this.PERMISSIONS.OVERTIME_READ)\r\n    },\r\n    {\r\n      key: 'activate',\r\n      label: this.t('settings.overtime.activate'),\r\n      icon: 'fa-play',\r\n      color: 'success',\r\n      condition: (config: OvertimeConfiguration) => !config.isActive && this.permissionService.has(this.PERMISSIONS.OVERTIME_ACTIVATE)\r\n    },\r\n    {\r\n      key: 'deactivate',\r\n      label: this.t('settings.overtime.deactivate'),\r\n      icon: 'fa-pause',\r\n      color: 'warning',\r\n      condition: (config: OvertimeConfiguration) => config.isActive && this.permissionService.has(this.PERMISSIONS.OVERTIME_ACTIVATE)\r\n    },\r\n    {\r\n      key: 'edit',\r\n      label: this.t('common.edit'),\r\n      icon: 'fa-edit',\r\n      color: 'secondary',\r\n      condition: () => this.permissionService.has(this.PERMISSIONS.OVERTIME_UPDATE)\r\n    },\r\n    {\r\n      key: 'delete',\r\n      label: this.t('common.delete'),\r\n      icon: 'fa-trash',\r\n      color: 'danger',\r\n      condition: (config: OvertimeConfiguration) => !config.isActive && this.permissionService.has(this.PERMISSIONS.OVERTIME_DELETE)\r\n    }\r\n  ]);\r\n\r\n  // Transform configurations data for data table\r\n  tableData = computed(() => {\r\n    return this.filteredConfigurations().map(config => ({\r\n      ...config,\r\n      status: this.formatStatus(config),\r\n      effectiveFromDate: this.formatDate(config.effectiveFromDate),\r\n      effectiveToDate: config.effectiveToDate ? this.formatDate(config.effectiveToDate) : this.t('settings.overtime.indefinite'),\r\n      rates: this.formatRates(config),\r\n      settings: this.formatSettings(config),\r\n      createdAtUtc: this.formatDate(config.createdAtUtc)\r\n    }));\r\n  });\r\n\r\n  ngOnInit(): void {\r\n    this.loadConfigurations();\r\n  }\r\n\r\n  t(key: string): string {\r\n    return this.i18n.t(key);\r\n  }\r\n\r\n  loadConfigurations(): void {\r\n    this.loading.set(true);\r\n    this.overtimeService.getOvertimeConfigurations().subscribe({\r\n      next: (configurations) => {\r\n        this.configurations.set(configurations);\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load overtime configurations:', error);\r\n        this.loading.set(false);\r\n        this.notificationService.error(\r\n          this.t('app.error'),\r\n          this.t('errors.server')\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  formatDate(dateString: string): string {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(this.i18n.getCurrentLocale(), {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  }\r\n\r\n  formatStatus(config: OvertimeConfiguration): string {\r\n    if (config.isActive) {\r\n      return `<span class=\"badge bg-success\">${this.t('settings.overtime.active')}</span>`;\r\n    } else {\r\n      return `<span class=\"badge bg-light text-dark border\">${this.t('settings.overtime.inactive')}</span>`;\r\n    }\r\n  }\r\n\r\n  formatRates(config: OvertimeConfiguration): string {\r\n    return `<div class=\"small\">\r\n      <div><strong>${this.t('settings.overtime.normalDay')}:</strong> ${config.normalDayRate}x</div>\r\n      <div><strong>${this.t('settings.overtime.holiday')}:</strong> ${config.publicHolidayRate}x</div>\r\n      <div><strong>${this.t('settings.overtime.offDay')}:</strong> ${config.offDayRate}x</div>\r\n    </div>`;\r\n  }\r\n\r\n  formatSettings(config: OvertimeConfiguration): string {\r\n    const settings = [];\r\n    if (config.enablePreShiftOvertime) settings.push(this.t('settings.overtime.preShift'));\r\n    if (config.enablePostShiftOvertime) settings.push(this.t('settings.overtime.postShift'));\r\n    if (config.considerFlexibleTime) settings.push(this.t('settings.overtime.flexibleTime'));\r\n    if (config.requireApproval) settings.push(this.t('settings.overtime.requiresApproval'));\r\n\r\n    return `<div class=\"small\">${settings.join(', ')}</div>`;\r\n  }\r\n\r\n  // Filtered configurations computed signal\r\n  filteredConfigurations = computed(() => {\r\n    let filtered = this.configurations();\r\n\r\n    if (this.searchTerm?.trim()) {\r\n      const searchLower = this.searchTerm.toLowerCase();\r\n      filtered = filtered.filter(config =>\r\n        config.policyNotes?.toLowerCase().includes(searchLower) ||\r\n        config.createdBy?.toLowerCase().includes(searchLower)\r\n      );\r\n    }\r\n\r\n    // Apply sorting\r\n    const sortCol = this.sortColumn();\r\n    const sortDir = this.sortDirection();\r\n\r\n    return filtered.sort((a, b) => {\r\n      let aVal = a[sortCol] as any;\r\n      let bVal = b[sortCol] as any;\r\n\r\n      // Handle date sorting\r\n      if (sortCol === 'effectiveFromDate' || sortCol === 'effectiveToDate' || sortCol === 'createdAtUtc') {\r\n        aVal = new Date(aVal).getTime();\r\n        bVal = new Date(bVal).getTime();\r\n      } else if (typeof aVal === 'string') {\r\n        aVal = aVal.toLowerCase();\r\n        bVal = bVal.toLowerCase();\r\n      }\r\n\r\n      if (aVal < bVal) return sortDir === 'asc' ? -1 : 1;\r\n      if (aVal > bVal) return sortDir === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  });\r\n\r\n  // Data table action handler\r\n  onActionClick(event: {action: string, item: OvertimeConfiguration}): void {\r\n    const { action, item } = event;\r\n\r\n    switch (action) {\r\n      case 'view':\r\n        this.onViewConfiguration(item);\r\n        break;\r\n      case 'activate':\r\n        this.onActivateConfiguration(item);\r\n        break;\r\n      case 'deactivate':\r\n        this.onDeactivateConfiguration(item);\r\n        break;\r\n      case 'edit':\r\n        this.onEditConfiguration(item);\r\n        break;\r\n      case 'delete':\r\n        this.onDeleteConfiguration(item);\r\n        break;\r\n      default:\r\n        console.warn('Unknown action:', action);\r\n    }\r\n  }\r\n\r\n  onSearchChange(): void {\r\n    // Debounce search\r\n    setTimeout(() => {\r\n      // Search is handled by filteredConfigurations() computed\r\n    }, 300);\r\n  }\r\n\r\n  onClearFilters(): void {\r\n    this.searchTerm = '';\r\n  }\r\n\r\n  hasActiveFilters(): boolean {\r\n    return !!this.searchTerm;\r\n  }\r\n\r\n  // Unified filter handlers\r\n  onSearchTermChange(searchTerm: string): void {\r\n    this.searchTerm = searchTerm;\r\n  }\r\n\r\n  onFiltersChange(filters: any): void {\r\n    if (filters.branchId !== undefined) {\r\n      // Handle branch filter if needed\r\n    }\r\n    if (filters.isActive !== undefined) {\r\n      // Handle active status filter if needed\r\n    }\r\n  }\r\n\r\n  onRefreshData(): void {\r\n    this.onClearFilters();\r\n    this.loadConfigurations();\r\n  }\r\n\r\n  // Configuration CRUD operations\r\n  onCreateConfiguration(): void {\r\n    this.router.navigate(['/settings/overtime/create']);\r\n  }\r\n\r\n  onViewConfiguration(config: OvertimeConfiguration): void {\r\n    this.router.navigate(['/settings/overtime', config.id, 'view']);\r\n  }\r\n\r\n  onEditConfiguration(config: OvertimeConfiguration): void {\r\n    this.router.navigate(['/settings/overtime/edit', config.id]);\r\n  }\r\n\r\n  async onActivateConfiguration(config: OvertimeConfiguration): Promise<void> {\r\n    const result = await this.confirmationService.confirm({\r\n      title: this.t('settings.overtime.activatePolicy'),\r\n      message: this.t('settings.overtime.activatePolicyConfirmation'),\r\n      confirmText: this.t('settings.overtime.activate'),\r\n      cancelText: this.t('common.cancel'),\r\n      confirmButtonClass: 'btn-success',\r\n      icon: 'fa-play',\r\n      iconClass: 'text-success'\r\n    });\r\n\r\n    if (result.confirmed) {\r\n      this.overtimeService.activateOvertimeConfiguration(config.id).subscribe({\r\n        next: () => {\r\n          this.loadConfigurations(); // Reload to get updated statuses\r\n          this.notificationService.success(\r\n            this.t('app.success'),\r\n            this.t('settings.overtime.policyActivatedSuccessfully')\r\n          );\r\n        },\r\n        error: (error) => {\r\n          console.error('Failed to activate configuration:', error);\r\n          this.notificationService.error(\r\n            this.t('app.error'),\r\n            this.t('errors.server')\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async onDeactivateConfiguration(config: OvertimeConfiguration): Promise<void> {\r\n    const result = await this.confirmationService.confirm({\r\n      title: this.t('settings.overtime.deactivatePolicy'),\r\n      message: this.t('settings.overtime.deactivatePolicyConfirmation'),\r\n      confirmText: this.t('settings.overtime.deactivate'),\r\n      cancelText: this.t('common.cancel'),\r\n      confirmButtonClass: 'btn-warning',\r\n      icon: 'fa-pause',\r\n      iconClass: 'text-warning'\r\n    });\r\n\r\n    if (result.confirmed) {\r\n      this.overtimeService.deactivateOvertimeConfiguration(config.id).subscribe({\r\n        next: () => {\r\n          this.loadConfigurations(); // Reload to get updated statuses\r\n          this.notificationService.success(\r\n            this.t('app.success'),\r\n            this.t('settings.overtime.policyDeactivatedSuccessfully')\r\n          );\r\n        },\r\n        error: (error) => {\r\n          console.error('Failed to deactivate configuration:', error);\r\n          this.notificationService.error(\r\n            this.t('app.error'),\r\n            this.t('errors.server')\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  async onDeleteConfiguration(config: OvertimeConfiguration): Promise<void> {\r\n    const result = await this.confirmationService.confirm({\r\n      title: this.t('settings.overtime.deletePolicy'),\r\n      message: this.t('settings.overtime.deletePolicyConfirmation'),\r\n      confirmText: this.t('common.delete'),\r\n      cancelText: this.t('common.cancel'),\r\n      confirmButtonClass: 'btn-danger',\r\n      icon: 'fa-trash',\r\n      iconClass: 'text-danger'\r\n    });\r\n\r\n    if (result.confirmed) {\r\n      this.overtimeService.deleteOvertimeConfiguration(config.id).subscribe({\r\n        next: () => {\r\n          this.configurations.set(this.configurations().filter(c => c.id !== config.id));\r\n          this.notificationService.success(\r\n            this.t('app.success'),\r\n            this.t('settings.overtime.policyDeletedSuccessfully')\r\n          );\r\n        },\r\n        error: (error) => {\r\n          console.error('Failed to delete configuration:', error);\r\n          this.notificationService.error(\r\n            this.t('app.error'),\r\n            this.t('errors.server')\r\n          );\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  canCreateConfigurations(): boolean {\r\n    return this.permissionService.has(this.PERMISSIONS.OVERTIME_CREATE);\r\n  }\r\n\r\n  // Sorting methods\r\n  onSort(column: keyof OvertimeConfiguration): void {\r\n    const currentColumn = this.sortColumn();\r\n    const currentDirection = this.sortDirection();\r\n\r\n    if (currentColumn === column) {\r\n      // Toggle direction if same column\r\n      this.sortDirection.set(currentDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      // Set new column and default to ascending\r\n      this.sortColumn.set(column);\r\n      this.sortDirection.set('asc');\r\n    }\r\n  }\r\n\r\n  getSortIcon(column: keyof OvertimeConfiguration): string {\r\n    const currentColumn = this.sortColumn();\r\n    const currentDirection = this.sortDirection();\r\n\r\n    if (currentColumn !== column) {\r\n      return 'fas fa-sort text-muted';\r\n    }\r\n\r\n    return currentDirection === 'asc' ? 'fas fa-sort-up text-primary' : 'fas fa-sort-down text-primary';\r\n  }\r\n\r\n  isSortable(column: keyof OvertimeConfiguration): boolean {\r\n    const sortableColumns: (keyof OvertimeConfiguration)[] = ['effectiveFromDate', 'effectiveToDate', 'createdAtUtc'];\r\n    return sortableColumns.includes(column);\r\n  }\r\n}", "<div class=\"container-fluid\">\r\n  <!-- Page Header -->\r\n  <app-page-header\r\n    [title]=\"t('settings.overtime.title')\">\r\n  </app-page-header>\r\n\r\n  <!-- Unified Filter Component -->\r\n  <app-unified-filter\r\n    moduleName=\"overtime-configurations\"\r\n    [refreshing]=\"loading()\"\r\n    (searchChange)=\"onSearchTermChange($event)\"\r\n    (filtersChange)=\"onFiltersChange($event)\"\r\n    (add)=\"onCreateConfiguration()\"\r\n    (refresh)=\"onRefreshData()\">\r\n  </app-unified-filter>\r\n\r\n  <!-- Active Policy Info -->\r\n  @if (configurations().length > 0) {\r\n    @for (config of configurations(); track config.id) {\r\n      @if (config.isActive) {\r\n        <div class=\"alert alert-info d-flex align-items-center mb-4\">\r\n          <i class=\"fa-solid fa-info-circle me-3 fs-4\"></i>\r\n          <div class=\"flex-grow-1\">\r\n            <h6 class=\"mb-1\">{{ t('settings.overtime.activePolicyInfo') }}</h6>\r\n            <p class=\"mb-0\">\r\n              {{ t('settings.overtime.currentlyActive') }}\r\n              <strong>{{ formatDate(config.effectiveFromDate) }}</strong>\r\n              @if (config.effectiveToDate) {\r\n                {{ t('settings.overtime.until') }} <strong>{{ formatDate(config.effectiveToDate) }}</strong>\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  <!-- Data Table -->\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <app-data-table\r\n        [data]=\"tableData()\"\r\n        [columns]=\"tableColumns()\"\r\n        [actions]=\"tableActions()\"\r\n        [loading]=\"loading\"\r\n        [paginated]=\"true\"\r\n        [emptyMessage]=\"t('settings.overtime.noConfigurations')\"\r\n        (actionClick)=\"onActionClick($event)\">\r\n      </app-data-table>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Empty State -->\r\n  @if (!loading() && configurations().length === 0) {\r\n    <div class=\"card\">\r\n      <div class=\"card-body text-center py-5\">\r\n        <div class=\"mb-4\">\r\n          <i class=\"fa-solid fa-clock display-1 text-muted\"></i>\r\n        </div>\r\n        <h4 class=\"text-muted mb-3\">{{ t('settings.overtime.noConfigurationsTitle') }}</h4>\r\n        <p class=\"text-muted mb-4\">{{ t('settings.overtime.noConfigurationsMessage') }}</p>\r\n        <button\r\n          class=\"btn btn-primary\"\r\n          (click)=\"onCreateConfiguration()\">\r\n          <i class=\"fa-solid fa-plus me-2\"></i>\r\n          {{ t('settings.overtime.createFirstPolicy') }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  }\r\n</div>"],
  "mappings": "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",
  "names": []
}
