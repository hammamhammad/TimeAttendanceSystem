{
  "version": 3,
  "sources": ["src/app/pages/roles/view-role/view-role.component.ts"],
  "sourcesContent": ["import { Component, OnInit, signal, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ActivatedRoute, Router, RouterModule } from '@angular/router';\nimport { RolesService } from '../roles.service';\nimport { Role } from '../../../shared/models/role.model';\nimport { I18nService } from '../../../core/i18n/i18n.service';\nimport { PermissionService } from '../../../core/auth/permission.service';\nimport { PermissionResources, PermissionActions } from '../../../shared/utils/permission.utils';\nimport { HasPermissionDirective } from '../../../shared/directives/has-permission.directive';\n\n@Component({\n  selector: 'app-view-role',\n  standalone: true,\n  imports: [CommonModule, RouterModule, HasPermissionDirective],\n  template: `\n    <div class=\"container-fluid\">\n      <!-- Header -->\n      <div class=\"d-flex justify-content-between align-items-center mb-4\">\n        <div>\n          <h2>{{ i18n.t('roles.view_details') }}</h2>\n          <nav aria-label=\"breadcrumb\">\n            <ol class=\"breadcrumb\">\n              <li class=\"breadcrumb-item\">\n                <a routerLink=\"/dashboard\">{{ i18n.t('dashboard.title') }}</a>\n              </li>\n              <li class=\"breadcrumb-item\">\n                <a routerLink=\"/roles\">{{ i18n.t('roles.title') }}</a>\n              </li>\n              <li class=\"breadcrumb-item active\">{{ i18n.t('roles.view_details') }}</li>\n            </ol>\n          </nav>\n        </div>\n        <div class=\"btn-group\">\n          @if (canEditRole()) {\n            <button\n              type=\"button\"\n              class=\"btn btn-primary\"\n              (click)=\"onEdit()\">\n              <i class=\"fa-solid fa-edit me-2\"></i>\n              {{ i18n.t('roles.edit') }}\n            </button>\n          }\n          <button \n            type=\"button\" \n            class=\"btn btn-outline-secondary\"\n            (click)=\"onBack()\">\n            <i class=\"fa-solid fa-arrow-left me-2\"></i>\n            {{ i18n.t('common.back') }}\n          </button>\n        </div>\n      </div>\n\n      @if (loading()) {\n        <div class=\"d-flex justify-content-center py-5\">\n          <div class=\"spinner-border\" role=\"status\">\n            <span class=\"visually-hidden\">{{ i18n.t('common.loading') }}</span>\n          </div>\n        </div>\n      } @else if (role()) {\n        <!-- Role Details -->\n        <div class=\"row\">\n          <!-- Main Information Card -->\n          <div class=\"col-lg-8\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                <h5 class=\"card-title mb-0\">\n                  <div class=\"d-flex align-items-center\">\n                    <div class=\"avatar-sm me-3\">\n                      <div class=\"avatar-title bg-info-subtle text-info rounded-circle\">\n                        <i class=\"fa-solid fa-user-shield\"></i>\n                      </div>\n                    </div>\n                    <div>\n                      <div class=\"fw-medium\">\n                        {{ role()?.name }}\n                        @if (role()?.isSystem) {\n                          <i class=\"fa-solid fa-shield-alt text-primary ms-2\" [title]=\"i18n.t('roles.system_role')\"></i>\n                        }\n                      </div>\n                      <small class=\"text-muted\">{{ role()?.permissions?.length || 0 }} {{ i18n.t('roles.permissions_assigned') }}</small>\n                    </div>\n                  </div>\n                </h5>\n              </div>\n              <div class=\"card-body\">\n                <div class=\"row\">\n                  <!-- Basic Information -->\n                  <div class=\"col-md-6\">\n                    <dl class=\"row\">\n                      <dt class=\"col-sm-5\">{{ i18n.t('roles.name') }}:</dt>\n                      <dd class=\"col-sm-7\">{{ role()?.name }}</dd>\n                      \n                      <dt class=\"col-sm-5\">{{ i18n.t('roles.type') }}:</dt>\n                      <dd class=\"col-sm-7\">\n                        @if (role()?.isSystem) {\n                          <span class=\"badge bg-warning-subtle text-warning\">{{ i18n.t('roles.system') }}</span>\n                        } @else {\n                          <span class=\"badge bg-success-subtle text-success\">{{ i18n.t('roles.custom') }}</span>\n                        }\n                      </dd>\n                      \n                      <dt class=\"col-sm-5\">{{ i18n.t('roles.user_count') }}:</dt>\n                      <dd class=\"col-sm-7\">\n                        <span class=\"badge bg-primary-subtle text-primary\">{{ role()?.userCount || 0 }}</span>\n                      </dd>\n                    </dl>\n                  </div>\n\n                  <!-- Status Information -->\n                  <div class=\"col-md-6\">\n                    <dl class=\"row\">\n                      <dt class=\"col-sm-5\">{{ i18n.t('roles.created_at') }}:</dt>\n                      <dd class=\"col-sm-7\">{{ formatDate(role()!.createdAtUtc) }}</dd>\n                      \n                      <dt class=\"col-sm-5\">{{ i18n.t('roles.permissions') }}:</dt>\n                      <dd class=\"col-sm-7\">{{ role()?.permissions?.length || 0 }}</dd>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Actions Card -->\n          <div class=\"col-lg-4\">\n            <div class=\"card\">\n              <div class=\"card-header\">\n                <h6 class=\"card-title mb-0\">{{ i18n.t('common.actions') }}</h6>\n              </div>\n              <div class=\"card-body\">\n                <div class=\"d-grid gap-2\">\n                  @if (canEditRole()) {\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-primary\"\n                      (click)=\"onEdit()\">\n                      <i class=\"fa-solid fa-edit me-2\"></i>\n                      {{ i18n.t('roles.edit') }}\n                    </button>\n                  }\n                  @if (canManagePermissions()) {\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-outline-info\"\n                      (click)=\"onManagePermissions()\">\n                      <i class=\"fa-solid fa-key me-2\"></i>\n                      {{ i18n.t('roles.manage_permissions') }}\n                    </button>\n                  }\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- Permissions Card -->\n        <div class=\"card mt-4\">\n          <div class=\"card-header\">\n            <h6 class=\"card-title mb-0\">\n              <i class=\"fa-solid fa-key me-2\"></i>\n              {{ i18n.t('roles.permissions') }}\n            </h6>\n          </div>\n          <div class=\"card-body\">\n            @if (role()?.permissions && role()!.permissions.length > 0) {\n              <div class=\"row g-2\">\n                @for (permission of role()?.permissions; track permission.key || permission.id) {\n                  <div class=\"col-md-6 col-lg-4\">\n                    <div class=\"permission-item border rounded p-2\">\n                      <div class=\"d-flex align-items-start\">\n                        <i class=\"fas me-2 text-muted mt-1\" [ngClass]=\"getPermissionIcon(permission.key)\"></i>\n                        <div class=\"flex-grow-1\">\n                          <div class=\"d-flex align-items-center mb-1\">\n                            <small class=\"fw-medium me-2\">{{ getPermissionResource(permission.key) }}</small>\n                            <span class=\"badge\" [ngClass]=\"getActionBadgeClass(permission.key)\">\n                              {{ getPermissionAction(permission.key) }}\n                            </span>\n                          </div>\n                          <p class=\"text-muted small mb-0\">\n                            {{ getPermissionDescription(permission) }}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                }\n              </div>\n            } @else {\n              <div class=\"text-center py-4\">\n                <i class=\"fa-solid fa-key fa-2x text-muted mb-2\"></i>\n                <p class=\"text-muted mb-0\">{{ i18n.t('roles.no_permissions') }}</p>\n              </div>\n            }\n          </div>\n        </div>\n      } @else {\n        <div class=\"alert alert-danger\">\n          <i class=\"fa-solid fa-exclamation-triangle me-2\"></i>\n          {{ error() || i18n.t('roles.role_not_found') }}\n        </div>\n      }\n    </div>\n  `\n})\nexport class ViewRoleComponent implements OnInit {\n  private route = inject(ActivatedRoute);\n  private router = inject(Router);\n  private rolesService = inject(RolesService);\n  public i18n = inject(I18nService);\n  public permissionService = inject(PermissionService);\n\n  // Permission constants for use in template\n  readonly PERMISSIONS = {\n    ROLE_UPDATE: `${PermissionResources.ROLE}.${PermissionActions.UPDATE}`,\n    ROLE_ASSIGN_PERMISSIONS: `${PermissionResources.ROLE}.${PermissionActions.ASSIGN_PERMISSION}`\n  };\n\n  role = signal<Role | null>(null);\n  loading = signal(true);\n  error = signal('');\n\n  ngOnInit(): void {\n    const roleId = this.route.snapshot.paramMap.get('id');\n    if (roleId) {\n      this.loadRole(roleId);\n    } else {\n      this.error.set(this.i18n.t('roles.invalid_role_id'));\n      this.loading.set(false);\n    }\n  }\n\n  loadRole(roleId: string): void {\n    this.rolesService.getRoleById(+roleId).subscribe({\n      next: (role) => {\n        this.role.set(role);\n        this.loading.set(false);\n      },\n      error: (error) => {\n        this.error.set(this.getErrorMessage(error));\n        this.loading.set(false);\n      }\n    });\n  }\n\n  canEditRole(): boolean {\n    const role = this.role();\n    if (!role) return false;\n\n    // First check if user has permission to update roles\n    if (!this.permissionService.has(this.PERMISSIONS.ROLE_UPDATE)) {\n      return false;\n    }\n\n    // Check if role is editable\n    return role.isEditable;\n  }\n\n  canManagePermissions(): boolean {\n    const role = this.role();\n    if (!role) return false;\n\n    // First check if user has permission to assign permissions\n    if (!this.permissionService.has(this.PERMISSIONS.ROLE_ASSIGN_PERMISSIONS)) {\n      return false;\n    }\n\n    // Check if role is editable (same logic as edit)\n    return role.isEditable;\n  }\n\n  onEdit(): void {\n    if (this.canEditRole()) {\n      this.router.navigate(['/roles', this.role()!.id, 'edit']);\n    }\n  }\n\n  onManagePermissions(): void {\n    if (this.canManagePermissions()) {\n      this.router.navigate(['/roles', this.role()!.id, 'edit']);\n    }\n  }\n\n  onBack(): void {\n    this.router.navigate(['/roles']);\n  }\n\n  formatDate(dateString: string): string {\n    return new Date(dateString).toLocaleDateString();\n  }\n\n  getPermissionIcon(key: string): string {\n    if (key.includes('read')) return 'fa-eye';\n    if (key.includes('create')) return 'fa-plus';\n    if (key.includes('update')) return 'fa-edit';\n    if (key.includes('delete')) return 'fa-trash';\n    return 'fa-key';\n  }\n\n  getPermissionResource(key: string): string {\n    const parts = key.split('.');\n    return parts[0] || key;\n  }\n\n  getPermissionAction(key: string): string {\n    const parts = key.split('.');\n    return parts[1] || 'unknown';\n  }\n\n  getActionBadgeClass(key: string): string {\n    if (key.includes('read')) return 'bg-info-subtle text-info';\n    if (key.includes('create')) return 'bg-success-subtle text-success';\n    if (key.includes('update')) return 'bg-warning-subtle text-warning';\n    if (key.includes('delete')) return 'bg-danger-subtle text-danger';\n    return 'bg-secondary-subtle text-secondary';\n  }\n\n  getPermissionDescription(permission: any): string {\n    return permission.description || this.i18n.t('roles.no_description');\n  }\n\n  private getErrorMessage(error: any): string {\n    if (error?.error?.error) {\n      return error.error.error;\n    }\n    return this.i18n.t('errors.unknown');\n  }\n}"],
  "mappings": "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",
  "names": []
}
