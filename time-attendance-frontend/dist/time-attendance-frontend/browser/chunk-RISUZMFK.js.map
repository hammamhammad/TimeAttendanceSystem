{
  "version": 3,
  "sources": ["src/app/shared/components/definition-list/definition-list.component.ts", "src/app/shared/components/definition-list/definition-list.component.html"],
  "sourcesContent": ["import { Component, Input, TemplateRef } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nexport interface DefinitionItem {\r\n  label: string;\r\n  value: any;\r\n  type?: 'text' | 'badge' | 'date' | 'time' | 'datetime' | 'currency' | 'percentage' | 'link' | 'custom';\r\n  badgeVariant?: 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark';\r\n  customTemplate?: TemplateRef<any>;\r\n  visible?: boolean;\r\n  onClick?: () => void;\r\n  copyable?: boolean;\r\n  icon?: string;\r\n  href?: string; // For link type\r\n  valueClass?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-definition-list',\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n  templateUrl: './definition-list.component.html',\r\n  styleUrls: ['./definition-list.component.css']\r\n})\r\nexport class DefinitionListComponent {\r\n  @Input() items: DefinitionItem[] = [];\r\n  @Input() layout: 'single' | 'two-column' = 'single';\r\n  @Input() striped = false;\r\n  @Input() bordered = false;\r\n  @Input() compact = false;\r\n  @Input() labelWidth = '4'; // Bootstrap column width (1-12)\r\n  @Input() valueWidth = '8'; // Bootstrap column width (1-12)\r\n\r\n  getLeftColumnItems(): DefinitionItem[] {\r\n    return this.items.filter((_, index) => index % 2 === 0);\r\n  }\r\n\r\n  getRightColumnItems(): DefinitionItem[] {\r\n    return this.items.filter((_, index) => index % 2 === 1);\r\n  }\r\n\r\n  getVisibleItems(): DefinitionItem[] {\r\n    return this.items.filter(item => item.visible !== false);\r\n  }\r\n\r\n  getListClasses(): string {\r\n    const classes = ['definition-list'];\r\n\r\n    if (this.striped) {\r\n      classes.push('definition-list-striped');\r\n    }\r\n\r\n    if (this.bordered) {\r\n      classes.push('definition-list-bordered');\r\n    }\r\n\r\n    if (this.compact) {\r\n      classes.push('definition-list-compact');\r\n    }\r\n\r\n    return classes.join(' ');\r\n  }\r\n\r\n  formatDate(dateString: string | Date): string {\r\n    if (!dateString) return '-';\r\n    try {\r\n      return new Date(dateString).toLocaleDateString();\r\n    } catch {\r\n      return dateString.toString();\r\n    }\r\n  }\r\n\r\n  formatTime(timeString: string | Date): string {\r\n    if (!timeString) return '-';\r\n    try {\r\n      return new Date(timeString).toLocaleTimeString();\r\n    } catch {\r\n      return timeString.toString();\r\n    }\r\n  }\r\n\r\n  formatDateTime(dateTimeString: string | Date): string {\r\n    if (!dateTimeString) return '-';\r\n    try {\r\n      return new Date(dateTimeString).toLocaleString();\r\n    } catch {\r\n      return dateTimeString.toString();\r\n    }\r\n  }\r\n\r\n  formatCurrency(amount: number): string {\r\n    if (amount == null) return '-';\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: 'USD'\r\n    }).format(amount);\r\n  }\r\n\r\n  copyToClipboard(text: string, event: Event): void {\r\n    event.stopPropagation();\r\n    if (navigator.clipboard) {\r\n      navigator.clipboard.writeText(text).then(() => {\r\n        console.log('Copied to clipboard:', text);\r\n      });\r\n    }\r\n  }\r\n\r\n  onItemClick(item: DefinitionItem, event: Event): void {\r\n    if (item.onClick) {\r\n      event.preventDefault();\r\n      item.onClick();\r\n    }\r\n  }\r\n}", "<div [class]=\"getListClasses()\">\r\n  @if (layout === 'two-column') {\r\n    <!-- Two-column layout -->\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <dl class=\"row mb-0\">\r\n          @for (item of getLeftColumnItems(); track $index) {\r\n            @if (item.visible !== false) {\r\n              <dt [class]=\"'col-sm-' + labelWidth + ' definition-label'\">\r\n                @if (item.icon) {\r\n                  <i [class]=\"item.icon + ' me-1'\"></i>\r\n                }\r\n                {{ item.label }}:\r\n              </dt>\r\n              <dd [class]=\"'col-sm-' + valueWidth + ' definition-value'\">\r\n                <ng-container [ngTemplateOutlet]=\"valueTemplate\" [ngTemplateOutletContext]=\"{ item: item }\"></ng-container>\r\n              </dd>\r\n            }\r\n          }\r\n        </dl>\r\n      </div>\r\n\r\n      <div class=\"col-md-6\">\r\n        <dl class=\"row mb-0\">\r\n          @for (item of getRightColumnItems(); track $index) {\r\n            @if (item.visible !== false) {\r\n              <dt [class]=\"'col-sm-' + labelWidth + ' definition-label'\">\r\n                @if (item.icon) {\r\n                  <i [class]=\"item.icon + ' me-1'\"></i>\r\n                }\r\n                {{ item.label }}:\r\n              </dt>\r\n              <dd [class]=\"'col-sm-' + valueWidth + ' definition-value'\">\r\n                <ng-container [ngTemplateOutlet]=\"valueTemplate\" [ngTemplateOutletContext]=\"{ item: item }\"></ng-container>\r\n              </dd>\r\n            }\r\n          }\r\n        </dl>\r\n      </div>\r\n    </div>\r\n  } @else {\r\n    <!-- Single column layout -->\r\n    <dl class=\"row mb-0\">\r\n      @for (item of getVisibleItems(); track $index) {\r\n        <dt [class]=\"'col-sm-' + labelWidth + ' definition-label'\">\r\n          @if (item.icon) {\r\n            <i [class]=\"item.icon + ' me-1'\"></i>\r\n          }\r\n          {{ item.label }}:\r\n        </dt>\r\n        <dd [class]=\"'col-sm-' + valueWidth + ' definition-value'\">\r\n          <ng-container [ngTemplateOutlet]=\"valueTemplate\" [ngTemplateOutletContext]=\"{ item: item }\"></ng-container>\r\n        </dd>\r\n      }\r\n    </dl>\r\n  }\r\n</div>\r\n\r\n<!-- Value Template -->\r\n<ng-template #valueTemplate let-item=\"item\">\r\n  <div [class]=\"item.valueClass\" (click)=\"onItemClick(item, $event)\">\r\n    <ng-container [ngSwitch]=\"item.type || 'text'\">\r\n      <!-- Badge type -->\r\n      <span *ngSwitchCase=\"'badge'\"\r\n            [class]=\"'badge bg-' + (item.badgeVariant || 'primary')\">\r\n        {{ item.value }}\r\n      </span>\r\n\r\n      <!-- Date type -->\r\n      <span *ngSwitchCase=\"'date'\">\r\n        {{ formatDate(item.value) }}\r\n      </span>\r\n\r\n      <!-- Time type -->\r\n      <span *ngSwitchCase=\"'time'\">\r\n        {{ formatTime(item.value) }}\r\n      </span>\r\n\r\n      <!-- DateTime type -->\r\n      <span *ngSwitchCase=\"'datetime'\">\r\n        {{ formatDateTime(item.value) }}\r\n      </span>\r\n\r\n      <!-- Currency type -->\r\n      <span *ngSwitchCase=\"'currency'\">\r\n        {{ formatCurrency(item.value) }}\r\n      </span>\r\n\r\n      <!-- Percentage type -->\r\n      <span *ngSwitchCase=\"'percentage'\">\r\n        {{ item.value }}%\r\n      </span>\r\n\r\n      <!-- Link type -->\r\n      <a *ngSwitchCase=\"'link'\"\r\n         [href]=\"item.href || '#'\"\r\n         [target]=\"item.href ? '_blank' : '_self'\"\r\n         class=\"definition-link\">\r\n        {{ item.value }}\r\n        @if (item.href) {\r\n          <i class=\"fa-solid fa-external-link-alt ms-1 small\"></i>\r\n        }\r\n      </a>\r\n\r\n      <!-- Custom template -->\r\n      <ng-container *ngSwitchCase=\"'custom'\">\r\n        @if (item.customTemplate) {\r\n          <ng-container [ngTemplateOutlet]=\"item.customTemplate\"\r\n                      [ngTemplateOutletContext]=\"{ $implicit: item.value, item: item }\"></ng-container>\r\n        }\r\n      </ng-container>\r\n\r\n      <!-- Default text -->\r\n      <span *ngSwitchDefault\r\n            [class.text-muted]=\"!item.value || item.value === '-'\"\r\n            [class.definition-clickable]=\"item.onClick\">\r\n        {{ item.value || '-' }}\r\n        @if (item.copyable && item.value) {\r\n          <i class=\"fa-solid fa-copy ms-2 text-muted definition-copy-icon\"\r\n             (click)=\"copyToClipboard(item.value, $event)\"\r\n             title=\"Copy to clipboard\"></i>\r\n        }\r\n      </span>\r\n    </ng-container>\r\n  </div>\r\n</ng-template>"],
  "mappings": "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",
  "names": []
}
