{
  "version": 3,
  "sources": ["src/app/pages/employee-vacations/edit-employee-vacation/edit-employee-vacation.component.ts", "src/app/pages/employee-vacations/edit-employee-vacation/edit-employee-vacation.component.html"],
  "sourcesContent": ["import { Component, signal, inject, OnInit } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { I18nService } from '../../../core/i18n/i18n.service';\r\nimport { NotificationService } from '../../../core/notifications/notification.service';\r\nimport { EmployeeVacationsService } from '../employee-vacations.service';\r\nimport { EmployeeVacation, UpdateEmployeeVacationRequest } from '../../../shared/models/employee-vacation.model';\r\nimport { SearchableSelectComponent, SearchableSelectOption } from '../../../shared/components/searchable-select/searchable-select.component';\r\nimport { FormHeaderComponent } from '../../../shared/components/form-header/form-header.component';\r\nimport { LoadingSpinnerComponent } from '../../../shared/components/loading-spinner/loading-spinner.component';\r\nimport { StatusBadgeComponent } from '../../../shared/components/status-badge/status-badge.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-employee-vacation',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SearchableSelectComponent,\r\n    FormHeaderComponent,\r\n    LoadingSpinnerComponent,\r\n    StatusBadgeComponent\r\n  ],\r\n  templateUrl: './edit-employee-vacation.component.html',\r\n  styleUrls: ['./edit-employee-vacation.component.css']\r\n})\r\nexport class EditEmployeeVacationComponent implements OnInit {\r\n  private fb = inject(FormBuilder);\r\n  private router = inject(Router);\r\n  private route = inject(ActivatedRoute);\r\n  private notificationService = inject(NotificationService);\r\n  private employeeVacationsService = inject(EmployeeVacationsService);\r\n  public i18n = inject(I18nService);\r\n\r\n  // State\r\n  loading = signal(false);\r\n  saving = signal(false);\r\n  currentVacation = signal<EmployeeVacation | null>(null);\r\n  vacationId: number | null = null;\r\n\r\n  // Form\r\n  vacationForm: FormGroup;\r\n\r\n  // Available options\r\n  vacationTypes = signal<Array<{id: number, name: string}>>([]);\r\n\r\n  // Computed properties for searchable select options\r\n  get vacationTypeOptions(): SearchableSelectOption[] {\r\n    return this.vacationTypes().map(vacationType => ({\r\n      value: vacationType.id,\r\n      label: vacationType.name\r\n    }));\r\n  }\r\n\r\n  constructor() {\r\n    this.vacationForm = this.createForm();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadVacationTypes();\r\n    this.loadVacation();\r\n  }\r\n\r\n  /**\r\n   * Create reactive form\r\n   */\r\n  private createForm(): FormGroup {\r\n    return this.fb.group({\r\n      vacationTypeId: [null, [Validators.required]],\r\n      startDate: ['', [Validators.required]],\r\n      endDate: ['', [Validators.required]],\r\n      isApproved: [false],\r\n      notes: ['']\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load vacation types for dropdown\r\n   */\r\n  private loadVacationTypes(): void {\r\n    this.employeeVacationsService.getVacationTypes().subscribe({\r\n      next: (vacationTypes) => {\r\n        this.vacationTypes.set(vacationTypes);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load vacation types:', error);\r\n        this.notificationService.error(this.i18n.t('employee_vacations.errors.load_vacation_types_failed'));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load vacation for editing\r\n   */\r\n  private loadVacation(): void {\r\n    const vacationIdParam = this.route.snapshot.paramMap.get('id');\r\n    if (!vacationIdParam) {\r\n      this.router.navigate(['/employee-vacations']);\r\n      return;\r\n    }\r\n\r\n    this.vacationId = +vacationIdParam;\r\n    this.loading.set(true);\r\n\r\n    this.employeeVacationsService.getVacationById(this.vacationId).subscribe({\r\n      next: (vacation) => {\r\n        this.currentVacation.set(vacation);\r\n        this.populateForm(vacation);\r\n        this.loading.set(false);\r\n      },\r\n      error: (error) => {\r\n        console.error('Failed to load vacation:', error);\r\n        this.notificationService.error(this.i18n.t('employee_vacations.errors.load_failed'));\r\n        this.loading.set(false);\r\n        this.router.navigate(['/employee-vacations']);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Populate form with vacation data\r\n   */\r\n  private populateForm(vacation: EmployeeVacation): void {\r\n    this.vacationForm.patchValue({\r\n      vacationTypeId: vacation.vacationTypeId,\r\n      startDate: this.formatDateForInput(vacation.startDate),\r\n      endDate: this.formatDateForInput(vacation.endDate),\r\n      isApproved: vacation.isApproved,\r\n      notes: vacation.notes || ''\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Format date for HTML input\r\n   */\r\n  private formatDateForInput(date: Date): string {\r\n    if (!date) return '';\r\n    const d = new Date(date);\r\n    return d.getFullYear() + '-' +\r\n           String(d.getMonth() + 1).padStart(2, '0') + '-' +\r\n           String(d.getDate()).padStart(2, '0');\r\n  }\r\n\r\n  /**\r\n   * Handle form submission\r\n   */\r\n  onSubmit(): void {\r\n    if (this.vacationForm.invalid) {\r\n      this.markFormGroupTouched();\r\n      return;\r\n    }\r\n\r\n    const vacation = this.currentVacation();\r\n    if (!vacation) return;\r\n\r\n    this.saving.set(true);\r\n    const formValue = this.vacationForm.value;\r\n\r\n    const request: UpdateEmployeeVacationRequest = {\r\n      vacationTypeId: formValue.vacationTypeId,\r\n      startDate: new Date(formValue.startDate),\r\n      endDate: new Date(formValue.endDate),\r\n      isApproved: formValue.isApproved,\r\n      notes: formValue.notes || undefined\r\n    };\r\n\r\n    this.employeeVacationsService.updateVacation(vacation.id, request).subscribe({\r\n      next: () => {\r\n        this.saving.set(false);\r\n        this.notificationService.success(this.i18n.t('employee_vacations.success.updated'));\r\n        this.router.navigate(['/employee-vacations', vacation.id, 'view']);\r\n      },\r\n      error: (error) => {\r\n        this.saving.set(false);\r\n        console.error('Failed to update vacation:', error);\r\n        this.notificationService.error(this.i18n.t('employee_vacations.errors.update_failed'));\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Cancel and navigate back\r\n   */\r\n  onCancel(): void {\r\n    const vacation = this.currentVacation();\r\n    if (vacation) {\r\n      this.router.navigate(['/employee-vacations', vacation.id, 'view']);\r\n    } else {\r\n      this.router.navigate(['/employee-vacations']);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset form to original values\r\n   */\r\n  onReset(): void {\r\n    const vacation = this.currentVacation();\r\n    if (vacation) {\r\n      this.populateForm(vacation);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Mark all form fields as touched\r\n   */\r\n  private markFormGroupTouched(): void {\r\n    Object.keys(this.vacationForm.controls).forEach(key => {\r\n      const control = this.vacationForm.get(key);\r\n      if (control) {\r\n        control.markAsTouched();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Check if form field has error\r\n   */\r\n  hasError(fieldName: string): boolean {\r\n    const field = this.vacationForm.get(fieldName);\r\n    return !!(field && field.invalid && (field.dirty || field.touched));\r\n  }\r\n\r\n  /**\r\n   * Get error message for field\r\n   */\r\n  getErrorMessage(fieldName: string): string {\r\n    const field = this.vacationForm.get(fieldName);\r\n    if (!field || !field.errors) return '';\r\n\r\n    if (field.errors['required']) {\r\n      return this.i18n.t('validation.required');\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  /**\r\n   * Check if field is invalid for styling\r\n   */\r\n  isFieldInvalid(fieldName: string): boolean {\r\n    return this.hasError(fieldName);\r\n  }\r\n\r\n  /**\r\n   * Get employee name for display\r\n   */\r\n  getEmployeeName(): string {\r\n    return this.currentVacation()?.employeeName || '';\r\n  }\r\n\r\n  /**\r\n   * Get form mode for FormHeaderComponent\r\n   */\r\n  getFormMode(): 'create' | 'edit' {\r\n    return 'edit';\r\n  }\r\n\r\n  /**\r\n   * Get vacation ID for FormHeaderComponent\r\n   */\r\n  getVacationId(): number | undefined {\r\n    return this.vacationId || undefined;\r\n  }\r\n}", "<div class=\"container-fluid\">\r\n  <!-- Header -->\r\n  <app-form-header\r\n    [mode]=\"getFormMode()\"\r\n    [title]=\"i18n.t('employee_vacations.edit_vacation')\"\r\n    moduleName=\"employee-vacations\"\r\n    moduleRoute=\"employee-vacations\"\r\n    [entityId]=\"getVacationId()\"\r\n    [loading]=\"loading()\">\r\n  </app-form-header>\r\n\r\n  <!-- Loading State -->\r\n  @if (loading()) {\r\n    <div class=\"text-center py-5\">\r\n      <app-loading-spinner\r\n        [message]=\"i18n.t('employee_vacations.loading_details')\"\r\n        [variant]=\"'primary'\"\r\n        [centered]=\"true\">\r\n      </app-loading-spinner>\r\n    </div>\r\n  }\r\n\r\n  <!-- Main Form Content -->\r\n  @if (!loading() && currentVacation()) {\r\n    <div class=\"row\">\r\n      <!-- Main Content -->\r\n      <div class=\"col-lg-8\">\r\n        <form [formGroup]=\"vacationForm\" (ngSubmit)=\"onSubmit()\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header\">\r\n              <h5 class=\"card-title mb-0\">\r\n                <div class=\"d-flex align-items-center justify-content-between\">\r\n                  <div class=\"d-flex align-items-center\">\r\n                    <div class=\"avatar-sm me-3\">\r\n                      <div class=\"avatar-title bg-primary-subtle text-primary rounded-circle\">\r\n                        <i class=\"fas fa-calendar-alt\"></i>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <div class=\"fw-medium\">{{ getEmployeeName() }}</div>\r\n                      <small class=\"text-muted\">{{ i18n.t('employee_vacations.vacation_id') }}: #{{ getVacationId() }}</small>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </h5>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <!-- Required Information Section -->\r\n              <div class=\"mb-4\">\r\n                <h6 class=\"text-primary mb-3\">\r\n                  <i class=\"fa-solid fa-asterisk me-2\"></i>\r\n                  {{ i18n.t('employee_vacations.required_information') }}\r\n                </h6>\r\n                <div class=\"row\">\r\n                  <!-- Vacation Type -->\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"vacationTypeId\" class=\"form-label\">\r\n                      {{ i18n.t('fields.vacationType') }} <span class=\"text-danger\">*</span>\r\n                    </label>\r\n                    <app-searchable-select\r\n                      id=\"vacationTypeId\"\r\n                      formControlName=\"vacationTypeId\"\r\n                      [options]=\"vacationTypeOptions\"\r\n                      [placeholder]=\"i18n.t('employee_vacations.placeholders.select_vacation_type')\"\r\n                      [isInvalid]=\"isFieldInvalid('vacationTypeId')\">\r\n                    </app-searchable-select>\r\n                    @if (hasError('vacationTypeId')) {\r\n                      <div class=\"invalid-feedback d-block\">\r\n                        {{ getErrorMessage('vacationTypeId') }}\r\n                      </div>\r\n                    }\r\n                  </div>\r\n\r\n                  <!-- Approval Status -->\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label class=\"form-label\">{{ i18n.t('employee_vacations.approval_status') }}</label>\r\n                    <div class=\"form-check\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"isApproved\"\r\n                        formControlName=\"isApproved\"\r\n                        class=\"form-check-input\">\r\n                      <label for=\"isApproved\" class=\"form-check-label\">\r\n                        {{ i18n.t('employee_vacations.is_approved') }}\r\n                      </label>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div class=\"row\">\r\n                  <!-- Start Date -->\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"startDate\" class=\"form-label\">\r\n                      {{ i18n.t('fields.startDate') }} <span class=\"text-danger\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"startDate\"\r\n                      formControlName=\"startDate\"\r\n                      class=\"form-control\"\r\n                      [class.is-invalid]=\"isFieldInvalid('startDate')\"\r\n                      [disabled]=\"saving()\"\r\n                      [placeholder]=\"i18n.t('employee_vacations.placeholders.select_start_date')\">\r\n                    @if (hasError('startDate')) {\r\n                      <div class=\"invalid-feedback\">\r\n                        {{ getErrorMessage('startDate') }}\r\n                      </div>\r\n                    }\r\n                  </div>\r\n\r\n                  <!-- End Date -->\r\n                  <div class=\"col-md-6 mb-3\">\r\n                    <label for=\"endDate\" class=\"form-label\">\r\n                      {{ i18n.t('fields.endDate') }} <span class=\"text-danger\">*</span>\r\n                    </label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"endDate\"\r\n                      formControlName=\"endDate\"\r\n                      class=\"form-control\"\r\n                      [class.is-invalid]=\"isFieldInvalid('endDate')\"\r\n                      [disabled]=\"saving()\"\r\n                      [placeholder]=\"i18n.t('employee_vacations.placeholders.select_end_date')\">\r\n                    @if (hasError('endDate')) {\r\n                      <div class=\"invalid-feedback\">\r\n                        {{ getErrorMessage('endDate') }}\r\n                      </div>\r\n                    }\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Additional Information Section -->\r\n              <div class=\"mb-4\">\r\n                <h6 class=\"text-secondary mb-3\">\r\n                  <i class=\"fa-solid fa-list me-2\"></i>\r\n                  {{ i18n.t('employee_vacations.additional_information') }}\r\n                </h6>\r\n                <!-- Notes -->\r\n                <div class=\"mb-3\">\r\n                  <label for=\"notes\" class=\"form-label\">\r\n                    {{ i18n.t('fields.notes') }}\r\n                  </label>\r\n                  <textarea\r\n                    id=\"notes\"\r\n                    formControlName=\"notes\"\r\n                    class=\"form-control\"\r\n                    rows=\"4\"\r\n                    [disabled]=\"saving()\"\r\n                    [placeholder]=\"i18n.t('employee_vacations.placeholders.enter_notes')\">\r\n                  </textarea>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Submit Section -->\r\n              <div class=\"d-flex justify-content-end gap-2\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-outline-danger\"\r\n                  (click)=\"onCancel()\"\r\n                  [disabled]=\"saving()\">\r\n                  <i class=\"fas fa-times me-2\"></i>\r\n                  {{ i18n.t('common.cancel') }}\r\n                </button>\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-outline-secondary\"\r\n                  (click)=\"onReset()\"\r\n                  [disabled]=\"saving()\">\r\n                  <i class=\"fas fa-undo me-2\"></i>\r\n                  {{ i18n.t('common.reset') }}\r\n                </button>\r\n\r\n                <button\r\n                  type=\"submit\"\r\n                  class=\"btn btn-primary\"\r\n                  [disabled]=\"vacationForm.invalid || saving()\">\r\n                  @if (saving()) {\r\n                    <span class=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\r\n                    {{ i18n.t('common.saving') }}\r\n                  } @else {\r\n                    <i class=\"fas fa-save me-2\"></i>\r\n                    {{ i18n.t('common.save') }}\r\n                  }\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <!-- Sidebar -->\r\n      <div class=\"col-lg-4\">\r\n        <!-- Help Card -->\r\n        <div class=\"card\">\r\n          <div class=\"card-header\">\r\n            <h6 class=\"card-title mb-0\">\r\n              <i class=\"fas fa-info-circle me-2\"></i>\r\n              {{ i18n.t('common.help') }}\r\n            </h6>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <p class=\"card-text small text-muted mb-2\">\r\n              {{ i18n.t('employee_vacations.help.edit_instructions') }}\r\n            </p>\r\n            <ul class=\"list-unstyled small text-muted mb-0\">\r\n              <li class=\"mb-1\">\r\n                <i class=\"fas fa-check-circle text-success me-1\"></i>\r\n                {{ i18n.t('employee_vacations.help.required_fields') }}\r\n              </li>\r\n              <li class=\"mb-1\">\r\n                <i class=\"fas fa-calendar text-info me-1\"></i>\r\n                {{ i18n.t('employee_vacations.help.date_validation') }}\r\n              </li>\r\n              <li>\r\n                <i class=\"fas fa-shield-alt text-warning me-1\"></i>\r\n                {{ i18n.t('employee_vacations.help.approval_info') }}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n</div>"],
  "mappings": "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",
  "names": []
}
