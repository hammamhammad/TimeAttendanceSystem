{
  "version": 3,
  "sources": ["src/app/pages/roles/create-role/create-role.component.ts", "src/app/pages/roles/create-role/create-role.component.html"],
  "sourcesContent": ["import { Component, OnInit, signal, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\nimport { I18nService } from '../../../core/i18n/i18n.service';\nimport { RolesService, CreateRoleRequest, PermissionGroupDto } from '../roles.service';\nimport { Permission } from '../../../shared/models/role.model';\nimport { PermissionUtils } from '../../../shared/utils/permission.utils';\nimport { NotificationService } from '../../../core/notifications/notification.service';\nimport { FormHeaderComponent } from '../../../shared/components/form-header/form-header.component';\n\n@Component({\n  selector: 'app-create-role',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterModule, FormHeaderComponent],\n  templateUrl: './create-role.component.html',\n  styleUrls: ['./create-role.component.css']\n})\nexport class CreateRoleComponent implements OnInit {\n  private rolesService = inject(RolesService);\n  private router = inject(Router);\n  private notificationService = inject(NotificationService);\n  public i18n = inject(I18nService);\n\n  // Signals for state management\n  loading = signal(false);\n  submitting = signal(false);\n  error = signal<string | null>(null);\n  allPermissions = signal<Permission[]>([]);\n  groupedPermissions = signal<PermissionGroupDto[]>([]);\n\n  // Form state\n  roleForm = {\n    name: '',\n    selectedPermissions: new Set<number>()\n  };\n\n  // Filter state\n  permissionSearchTerm = '';\n\n  ngOnInit(): void {\n    this.loadPermissions();\n  }\n\n  t(key: string): string {\n    return this.i18n.t(key);\n  }\n\n  loadPermissions(): void {\n    this.loading.set(true);\n    this.rolesService.getPermissions().subscribe({\n      next: (permissions) => {\n        this.allPermissions.set(permissions);\n        this.groupedPermissions.set(this.groupPermissionsByGroup(permissions));\n        this.loading.set(false);\n      },\n      error: (error) => {\n        console.error('Failed to load permissions:', error);\n        this.error.set(this.t('roles.failed_to_load_permissions'));\n        this.loading.set(false);\n        this.notificationService.error(\n          this.t('app.error'),\n          this.t('roles.failed_to_load_permissions')\n        );\n      }\n    });\n  }\n\n  groupPermissionsByGroup(permissions: Permission[]): PermissionGroupDto[] {\n    const grouped = permissions.reduce((acc, permission) => {\n      const group = permission.group || 'General';\n      if (!acc[group]) {\n        acc[group] = [];\n      }\n      acc[group].push(permission);\n      return acc;\n    }, {} as Record<string, Permission[]>);\n\n    return Object.entries(grouped).map(([group, permissions]) => ({\n      group,\n      permissions: permissions.sort((a, b) => a.key.localeCompare(b.key))\n    }));\n  }\n\n  onSubmit(): void {\n    if (!this.roleForm.name.trim()) {\n      this.error.set(this.t('roles.role_name_required'));\n      return;\n    }\n\n    this.submitting.set(true);\n    this.error.set(null);\n\n    const request: CreateRoleRequest = {\n      name: this.roleForm.name.trim(),\n      permissionIds: Array.from(this.roleForm.selectedPermissions)\n    };\n\n    this.rolesService.createRole(request).subscribe({\n      next: () => {\n        this.notificationService.success(\n          this.t('app.success'),\n          this.t('roles.role_created_successfully')\n        );\n        this.router.navigate(['/roles']);\n      },\n      error: (error) => {\n        console.error('Failed to create role:', error);\n        this.error.set(this.getErrorMessage(error));\n        this.submitting.set(false);\n        this.notificationService.error(\n          this.t('app.error'),\n          this.getErrorMessage(error)\n        );\n      }\n    });\n  }\n\n  onCancel(): void {\n    this.router.navigate(['/roles']);\n  }\n\n  onTogglePermissionForRole(permission: Permission): void {\n    if (this.roleForm.selectedPermissions.has(permission.id)) {\n      this.roleForm.selectedPermissions.delete(permission.id);\n    } else {\n      this.roleForm.selectedPermissions.add(permission.id);\n    }\n  }\n\n  isPermissionSelectedForRole(permissionId: number): boolean {\n    return this.roleForm.selectedPermissions.has(permissionId);\n  }\n\n  selectAllPermissions(): void {\n    this.allPermissions().forEach(permission => {\n      this.roleForm.selectedPermissions.add(permission.id);\n    });\n  }\n\n  clearAllPermissions(): void {\n    this.roleForm.selectedPermissions.clear();\n  }\n\n  getFilteredGroupedPermissions(): PermissionGroupDto[] {\n    if (!this.permissionSearchTerm.trim()) {\n      return this.groupedPermissions();\n    }\n\n    const searchTerm = this.permissionSearchTerm.toLowerCase();\n    return this.groupedPermissions()\n      .map(group => ({\n        ...group,\n        permissions: group.permissions.filter(permission =>\n          permission.key.toLowerCase().includes(searchTerm) ||\n          (permission.description && permission.description.toLowerCase().includes(searchTerm))\n        )\n      }))\n      .filter(group => group.permissions.length > 0);\n  }\n\n  // Permission utility methods (similar to those in roles.component.ts)\n  getPermissionIcon(key: string): string {\n    const { resource } = PermissionUtils.parsePermissionKey(key);\n    return PermissionUtils.getResourceIcon(resource);\n  }\n\n  getPermissionResource(key: string): string {\n    const { resource } = PermissionUtils.parsePermissionKey(key);\n    return PermissionUtils.getResourceName(resource);\n  }\n\n  getPermissionAction(key: string): string {\n    const { action } = PermissionUtils.parsePermissionKey(key);\n    return PermissionUtils.getActionName(action);\n  }\n\n  getActionBadgeClass(key: string): string {\n    const { action } = PermissionUtils.parsePermissionKey(key);\n    return PermissionUtils.getActionBadgeClass(action);\n  }\n\n  getPermissionDescription(permission: Permission): string {\n    return permission.description || this.t('roles.no_description');\n  }\n\n  private getErrorMessage(error: any): string {\n    if (error?.error?.error) {\n      return error.error.error;\n    }\n    if (error?.error?.message) {\n      return error.error.message;\n    }\n    return this.t('roles.failed_to_create_role');\n  }\n}", "<div class=\"container-fluid\">\n  <!-- Header -->\n  <app-form-header\n    mode=\"create\"\n    [title]=\"t('roles.create_role')\"\n    moduleName=\"roles\"\n    moduleRoute=\"roles\"\n    [loading]=\"submitting()\">\n  </app-form-header>\n\n  @if (loading()) {\n    <div class=\"d-flex justify-content-center py-5\">\n      <div class=\"spinner-border\" role=\"status\">\n        <span class=\"visually-hidden\">{{ t('common.loading') }}</span>\n      </div>\n    </div>\n  } @else {\n    <!-- Main Form -->\n    <div class=\"card\">\n      <div class=\"card-header\">\n        <h5 class=\"card-title mb-0\">\n          <i class=\"fa-solid fa-user-shield me-2\"></i>\n          {{ t('roles.role_information') }}\n        </h5>\n      </div>\n      <div class=\"card-body\">\n        @if (error()) {\n          <div class=\"alert alert-danger\" role=\"alert\">\n            <i class=\"fa-solid fa-exclamation-triangle me-2\"></i>\n            {{ error() }}\n          </div>\n        }\n\n        <form (ngSubmit)=\"onSubmit()\">\n          <!-- Basic Information Section -->\n          <div class=\"mb-4\">\n            <h6 class=\"text-primary mb-3\">\n              <i class=\"fa-solid fa-info-circle me-2\"></i>\n              {{ t('roles.basic_information') }}\n            </h6>\n            \n            <!-- Role Name -->\n            <div class=\"row g-3\">\n              <div class=\"col-md-6\">\n                <label class=\"form-label\">\n                  {{ t('roles.role_name') }}\n                  <span class=\"text-danger\">*</span>\n                </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  [(ngModel)]=\"roleForm.name\"\n                  name=\"roleName\"\n                  [placeholder]=\"t('roles.role_name_placeholder')\"\n                  [disabled]=\"submitting()\"\n                  required\n                />\n              </div>\n            </div>\n          </div>\n\n          <hr>\n\n          <!-- Permissions Section -->\n          <div class=\"mb-4\">\n            <div class=\"d-flex justify-content-between align-items-center mb-3\">\n              <h6 class=\"mb-0\">\n                <i class=\"fa-solid fa-key me-2 text-primary\"></i>\n                {{ t('roles.select_permissions') }}\n              </h6>\n              <div class=\"btn-group btn-group-sm\" role=\"group\">\n                <button \n                  type=\"button\" \n                  class=\"btn btn-outline-primary\"\n                  (click)=\"selectAllPermissions()\"\n                  [disabled]=\"submitting()\"\n                >\n                  <i class=\"fa-solid fa-check-double me-1\"></i>\n                  {{ t('roles.select_all') }}\n                </button>\n                <button \n                  type=\"button\" \n                  class=\"btn btn-outline-secondary\"\n                  (click)=\"clearAllPermissions()\"\n                  [disabled]=\"submitting()\"\n                >\n                  <i class=\"fa-solid fa-times me-1\"></i>\n                  {{ t('roles.clear_all') }}\n                </button>\n              </div>\n            </div>\n\n            <!-- Selected permissions summary -->\n            <div class=\"alert alert-info py-2 px-3 mb-3\">\n              <small>\n                <i class=\"fa-solid fa-info-circle me-2\"></i>\n                {{ roleForm.selectedPermissions.size }} {{ t('roles.permissions_selected') }} {{ t('common.of') }} {{ allPermissions().length }}\n              </small>\n            </div>\n            \n            <!-- Permissions search -->\n            <div class=\"mb-3\">\n              <div class=\"input-group\">\n                <span class=\"input-group-text\">\n                  <i class=\"fa-solid fa-search\"></i>\n                </span>\n                <input \n                  type=\"text\" \n                  class=\"form-control\" \n                  [(ngModel)]=\"permissionSearchTerm\"\n                  name=\"permissionSearch\"\n                  [placeholder]=\"t('roles.search_permissions_placeholder')\"\n                  [disabled]=\"submitting()\"\n                />\n              </div>\n            </div>\n            \n            <!-- Permissions List -->\n            <div class=\"permissions-list border rounded p-3\" style=\"max-height: 500px; overflow-y: auto;\">\n              @for (group of getFilteredGroupedPermissions(); track group.group) {\n                <div class=\"permission-group mb-4\">\n                  <h6 class=\"fw-bold text-primary mb-3 border-bottom pb-2\">\n                    <i class=\"fas fa-layer-group me-2\"></i>\n                    {{ group.group }}\n                    <small class=\"text-muted fw-normal\">({{ group.permissions.length }} permissions)</small>\n                  </h6>\n                  \n                  <div class=\"row g-3\">\n                    @for (permission of group.permissions; track permission.id) {\n                      <div class=\"col-md-6 col-lg-4\">\n                        <div class=\"permission-item border rounded p-3\" \n                             [class.bg-primary-subtle]=\"isPermissionSelectedForRole(permission.id)\"\n                             [class.border-primary]=\"isPermissionSelectedForRole(permission.id)\">\n                          <div class=\"form-check d-flex align-items-start\">\n                            <input\n                              class=\"form-check-input mt-1\"\n                              type=\"checkbox\"\n                              [id]=\"'permission-' + permission.id\"\n                              [checked]=\"isPermissionSelectedForRole(permission.id)\"\n                              [disabled]=\"submitting()\"\n                              (change)=\"onTogglePermissionForRole(permission)\"\n                            />\n                            <div class=\"form-check-content ms-2 flex-grow-1\">\n                              <div class=\"d-flex align-items-center mb-1\">\n                                <i class=\"fas me-2 text-muted\" [ngClass]=\"getPermissionIcon(permission.key)\" style=\"font-size: 0.8rem;\"></i>\n                                <label class=\"form-check-label fw-medium me-2\" [for]=\"'permission-' + permission.id\">\n                                  <small>{{ getPermissionResource(permission.key) }}</small>\n                                </label>\n                                <span class=\"badge\" [ngClass]=\"getActionBadgeClass(permission.key)\" style=\"font-size: 0.65rem;\">\n                                  {{ getPermissionAction(permission.key) }}\n                                </span>\n                              </div>\n                              <p class=\"text-muted small mb-0\" style=\"font-size: 0.75rem; margin-left: 1.5rem;\">\n                                {{ getPermissionDescription(permission) }}\n                              </p>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    }\n                  </div>\n                </div>\n              }\n              \n              @if (getFilteredGroupedPermissions().length === 0) {\n                <div class=\"text-center py-4\">\n                  <i class=\"fa-solid fa-key fa-2x text-muted mb-2\"></i>\n                  <p class=\"text-muted mb-0\">{{ t('roles.no_permissions_available') }}</p>\n                </div>\n              }\n            </div>\n          </div>\n\n          <!-- Form Actions -->\n          <div class=\"d-flex justify-content-end gap-2\">\n            <button \n              type=\"button\" \n              class=\"btn btn-outline-secondary\"\n              (click)=\"onCancel()\"\n              [disabled]=\"submitting()\">\n              <i class=\"fa-solid fa-times me-2\"></i>\n              {{ t('common.cancel') }}\n            </button>\n            <button \n              type=\"submit\" \n              class=\"btn btn-primary\"\n              [disabled]=\"!roleForm.name.trim() || submitting()\">\n              @if (submitting()) {\n                <div class=\"spinner-border spinner-border-sm me-2\"></div>\n              } @else {\n                <i class=\"fa-solid fa-save me-2\"></i>\n              }\n              {{ submitting() ? t('roles.creating_role') : t('roles.create_role') }}\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  }\n</div>"],
  "mappings": "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",
  "names": ["permissions"]
}
