{
  "version": 3,
  "sources": ["src/app/pages/employee-excuses/employee-excuses.component.ts", "src/app/pages/employee-excuses/employee-excuses.component.html"],
  "sourcesContent": ["import { Component, OnInit, signal, computed, inject, effect } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Router } from '@angular/router';\r\nimport { I18nService } from '../../core/i18n/i18n.service';\r\nimport { EmployeeExcusesService } from './employee-excuses.service';\r\nimport {\r\n  EmployeeExcuseDto,\r\n  EmployeeExcusesQueryParams,\r\n  EmployeeExcuseFilter,\r\n  ExcuseStatus\r\n} from '../../shared/models/employee-excuse.model';\r\nimport { NotificationService } from '../../core/notifications/notification.service';\r\nimport { ConfirmationService } from '../../core/confirmation/confirmation.service';\r\nimport { PermissionService } from '../../core/auth/permission.service';\r\nimport { PermissionActions } from '../../shared/utils/permission.utils';\r\nimport { DataTableComponent, TableColumn, TableAction } from '../../shared/components/data-table/data-table.component';\r\nimport { PageHeaderComponent } from '../../shared/components/page-header/page-header.component';\r\nimport { UnifiedFilterComponent } from '../../shared/components/unified-filter/unified-filter.component';\r\n\r\n@Component({\r\n  selector: 'app-employee-excuses',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    DataTableComponent,\r\n    PageHeaderComponent,\r\n    UnifiedFilterComponent\r\n  ],\r\n  templateUrl: './employee-excuses.component.html',\r\n  styleUrls: ['./employee-excuses.component.css']\r\n})\r\nexport class EmployeeExcusesComponent implements OnInit {\r\n  private employeeExcusesService = inject(EmployeeExcusesService);\r\n  private notificationService = inject(NotificationService);\r\n  private confirmationService = inject(ConfirmationService);\r\n  private router = inject(Router);\r\n  public i18n = inject(I18nService);\r\n  public permissionService = inject(PermissionService);\r\n\r\n  // Permission constants\r\n  readonly PERMISSIONS = {\r\n    EXCUSE_CREATE: `excuse.${PermissionActions.CREATE}`,\r\n    EXCUSE_READ: `excuse.${PermissionActions.READ}`,\r\n    EXCUSE_UPDATE: `excuse.${PermissionActions.UPDATE}`,\r\n    EXCUSE_DELETE: `excuse.${PermissionActions.DELETE}`\r\n  };\r\n\r\n\r\n  // Signals for state management\r\n  loading = signal(false);\r\n  currentPage = signal(1);\r\n  pageSize = signal(10);\r\n  selectedEmployeeId = signal<number | undefined>(undefined);\r\n  selectedDepartmentId = signal<number | undefined>(undefined);\r\n  selectedBranchId = signal<number | undefined>(undefined);\r\n  selectedStatus = signal<ExcuseStatus | undefined>(undefined);\r\n  fromDate = signal<string | undefined>(undefined);\r\n  toDate = signal<string | undefined>(undefined);\r\n  searchTerm = signal<string | undefined>(undefined);\r\n\r\n  // Service signals\r\n  employeeExcuses = this.employeeExcusesService.employeeExcuses;\r\n  pagedResult = this.employeeExcusesService.pagedResult;\r\n  statistics = this.employeeExcusesService.statistics;\r\n  error = this.employeeExcusesService.error;\r\n\r\n  // Table configuration\r\n  tableColumns: TableColumn[] = [\r\n    { key: 'employeeName', label: this.i18n.t('employee_excuses.employee'), sortable: true, width: '15%' },\r\n    { key: 'employeeNumber', label: this.i18n.t('employee_excuses.employee_number'), sortable: true, width: '10%' },\r\n    { key: 'departmentName', label: this.i18n.t('employee_excuses.department'), sortable: true, width: '12%' },\r\n    { key: 'excuseDate', label: this.i18n.t('employee_excuses.excuse_date'), sortable: true, width: '10%' },\r\n    { key: 'durationHours', label: this.i18n.t('employee_excuses.duration'), sortable: false, width: '8%' },\r\n    { key: 'reason', label: this.i18n.t('employee_excuses.reason'), sortable: false, width: '15%' },\r\n    { key: 'status', label: this.i18n.t('employee_excuses.status'), sortable: true, width: '10%' },\r\n    { key: 'submissionDate', label: this.i18n.t('employee_excuses.submitted_date'), sortable: true, width: '10%' }\r\n  ];\r\n\r\n  // Table actions\r\n  tableActions: TableAction[] = [\r\n    {\r\n      key: 'view',\r\n      label: this.i18n.t('common.view'),\r\n      icon: 'fa-eye',\r\n      color: 'primary',\r\n      condition: (item: EmployeeExcuseDto) => {\r\n        return this.permissionService.has(`excuse.${PermissionActions.READ}`) ||\r\n               this.permissionService.hasRole('SystemAdmin');\r\n      }\r\n    },\r\n    {\r\n      key: 'edit',\r\n      label: this.i18n.t('common.edit'),\r\n      icon: 'fa-edit',\r\n      color: 'secondary',\r\n      condition: (item: EmployeeExcuseDto) => {\r\n        // HR can edit excuses in any status\r\n        const hasPermission = this.permissionService.has(`excuse.${PermissionActions.UPDATE}`) ||\r\n                             this.permissionService.hasRole('SystemAdmin');\r\n        const canEditBusiness = this.canEditExcuse(item);\r\n\r\n        return hasPermission && canEditBusiness;\r\n      }\r\n    },\r\n    {\r\n      key: 'approve',\r\n      label: this.i18n.t('employee_excuses.approve'),\r\n      icon: 'fa-check',\r\n      color: 'success',\r\n      condition: (item: EmployeeExcuseDto) => {\r\n        // Only pending excuses can be approved\r\n        const canApproveStatus = item.status === ExcuseStatus.Pending;\r\n        const hasPermission = this.permissionService.has(`excuse.${PermissionActions.APPROVE}`) ||\r\n                             this.permissionService.hasRole('SystemAdmin');\r\n        const canReviewBusiness = this.canReviewExcuse(item);\r\n\r\n        return canApproveStatus && hasPermission && canReviewBusiness;\r\n      }\r\n    },\r\n    {\r\n      key: 'reject',\r\n      label: this.i18n.t('employee_excuses.reject'),\r\n      icon: 'fa-times',\r\n      color: 'danger',\r\n      condition: (item: EmployeeExcuseDto) => {\r\n        // Only pending excuses can be rejected\r\n        const canRejectStatus = item.status === ExcuseStatus.Pending;\r\n        const hasPermission = this.permissionService.has(`excuse.${PermissionActions.APPROVE}`) ||\r\n                             this.permissionService.hasRole('SystemAdmin');\r\n        const canReviewBusiness = this.canReviewExcuse(item);\r\n\r\n        return canRejectStatus && hasPermission && canReviewBusiness;\r\n      }\r\n    },\r\n    {\r\n      key: 'cancel',\r\n      label: this.i18n.t('employee_excuses.cancel'),\r\n      icon: 'fa-ban',\r\n      color: 'warning',\r\n      condition: (item: EmployeeExcuseDto) => {\r\n        // Only pending excuses can be cancelled\r\n        const canCancelStatus = item.status === ExcuseStatus.Pending;\r\n        const hasPermission = this.permissionService.has(`excuse.${PermissionActions.DELETE}`) ||\r\n                             this.permissionService.hasRole('SystemAdmin');\r\n        const canCancelBusiness = this.canCancelExcuse(item);\r\n\r\n        return canCancelStatus && hasPermission && canCancelBusiness;\r\n      }\r\n    },\r\n    {\r\n      key: 'reopen',\r\n      label: this.i18n.t('employee_excuses.reopen'),\r\n      icon: 'fa-undo',\r\n      color: 'warning',\r\n      condition: (item: EmployeeExcuseDto) => {\r\n        // SystemAdmin can reopen approved/rejected excuses for modification\r\n        const canReopenStatus = item.status === ExcuseStatus.Approved || item.status === ExcuseStatus.Rejected;\r\n        const isSystemAdmin = this.permissionService.hasRole('SystemAdmin');\r\n\r\n        return canReopenStatus && isSystemAdmin;\r\n      }\r\n    },\r\n    {\r\n      key: 'delete',\r\n      label: this.i18n.t('common.delete'),\r\n      icon: 'fa-trash',\r\n      color: 'danger',\r\n      condition: (item: EmployeeExcuseDto) => {\r\n        // SystemAdmin can delete any excuse, others can only delete their own pending excuses\r\n        const isSystemAdmin = this.permissionService.hasRole('SystemAdmin');\r\n        const hasPermission = this.permissionService.has(`excuse.${PermissionActions.DELETE}`);\r\n\r\n        if (isSystemAdmin) {\r\n          return true; // SystemAdmin can delete any excuse\r\n        }\r\n\r\n        // Others can only delete their own pending excuses\r\n        return item.status === ExcuseStatus.Pending &&\r\n               hasPermission &&\r\n               this.canCancelExcuse(item);\r\n      }\r\n    },\r\n    {\r\n      key: 'download',\r\n      label: this.i18n.t('employee_excuses.download_attachment'),\r\n      icon: 'fa-download',\r\n      color: 'info',\r\n      condition: (item: EmployeeExcuseDto) => {\r\n        const hasAttachment = !!item.attachmentUrl;\r\n        const hasPermission = this.permissionService.has(`excuse.${PermissionActions.READ}`) ||\r\n                             this.permissionService.hasRole('SystemAdmin');\r\n\r\n        return hasAttachment && hasPermission;\r\n      }\r\n    }\r\n  ];\r\n\r\n  // Computed values\r\n  currentFilter = computed(() => ({\r\n    employeeId: this.selectedEmployeeId(),\r\n    departmentId: this.selectedDepartmentId(),\r\n    branchId: this.selectedBranchId(),\r\n    status: this.selectedStatus(),\r\n    fromDate: this.fromDate(),\r\n    toDate: this.toDate(),\r\n    searchTerm: this.searchTerm()\r\n  }));\r\n\r\n\r\n  // Effects\r\n  constructor() {\r\n    // Auto-load data when filter changes\r\n    effect(() => {\r\n      const filter = this.currentFilter();\r\n      const page = this.currentPage();\r\n      const pageSize = this.pageSize();\r\n\r\n      this.loadEmployeeExcuses({\r\n        page,\r\n        pageSize,\r\n        ...filter\r\n      });\r\n    });\r\n\r\n    // Watch for service loading state\r\n    effect(() => {\r\n      this.loading.set(this.employeeExcusesService.loading());\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Load initial data first, then calculate statistics\r\n    this.loadEmployeeExcuses();\r\n  }\r\n\r\n  /**\r\n   * Load employee excuses with current filters\r\n   */\r\n  loadEmployeeExcuses(params: EmployeeExcusesQueryParams = {}): void {\r\n    const queryParams: EmployeeExcusesQueryParams = {\r\n      page: this.currentPage(),\r\n      pageSize: this.pageSize(),\r\n      ...this.currentFilter(),\r\n      ...params\r\n    };\r\n\r\n    this.employeeExcusesService.getEmployeeExcuses(queryParams).subscribe({\r\n      next: () => {\r\n        // Calculate statistics after data is loaded\r\n        this.calculateAggregateStatistics();\r\n      },\r\n      error: (error) => {\r\n        this.notificationService.error(\r\n          this.i18n.t('employee_excuses.load_error')\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Load statistics - Skip for management view as it requires specific employee\r\n   */\r\n  loadStatistics(): void {\r\n    // For management view, we'll calculate statistics from the loaded data\r\n    // instead of calling the API which requires specific employeeId and year parameters\r\n    this.calculateAggregateStatistics();\r\n  }\r\n\r\n  /**\r\n   * Calculate aggregate statistics from loaded data\r\n   */\r\n  private calculateAggregateStatistics(): void {\r\n    const allExcuses = this.employeeExcusesService.employeeExcuses() || [];\r\n\r\n    const stats = {\r\n      totalRequests: allExcuses.length,\r\n      pendingRequests: allExcuses.filter(excuse => excuse.status === 'Pending').length,\r\n      approvedRequests: allExcuses.filter(excuse => excuse.status === 'Approved').length,\r\n      rejectedRequests: allExcuses.filter(excuse => excuse.status === 'Rejected').length,\r\n      currentMonthHours: 0, // Not available from current data\r\n      remainingMonthlyHours: 0, // Not available from current data\r\n      monthlyLimit: 0 // Not available from current data\r\n    };\r\n\r\n    this.employeeExcusesService.statistics.set(stats);\r\n  }\r\n\r\n  /**\r\n   * Navigate to create excuse request page\r\n   */\r\n  navigateToCreate(): void {\r\n    this.router.navigate(['/employee-excuses/create']);\r\n  }\r\n\r\n  /**\r\n   * View excuse details\r\n   */\r\n  viewExcuse(excuse: EmployeeExcuseDto): void {\r\n    this.router.navigate(['/employee-excuses', excuse.id, 'view']);\r\n  }\r\n\r\n  /**\r\n   * Edit excuse request\r\n   */\r\n  editExcuse(excuse: EmployeeExcuseDto): void {\r\n    this.router.navigate(['/employee-excuses', excuse.id, 'edit']);\r\n  }\r\n\r\n  /**\r\n   * Approve excuse request\r\n   */\r\n  approveExcuse(excuse: EmployeeExcuseDto): void {\r\n    const message = this.i18n.t('employee_excuses.confirm_approve');\r\n\r\n    this.confirmationService.confirm({\r\n      title: this.i18n.t('employee_excuses.approve_title'),\r\n      message,\r\n      confirmText: this.i18n.t('employee_excuses.approve')\r\n    }).then(result => {\r\n      if (result.confirmed) {\r\n        this.employeeExcusesService.reviewEmployeeExcuse(excuse.id, {\r\n          status: ExcuseStatus.Approved,\r\n          reviewerComments: result.comments\r\n        }).subscribe({\r\n          next: () => {\r\n            this.notificationService.success(\r\n              this.i18n.t('employee_excuses.approve_success')\r\n            );\r\n          },\r\n          error: () => {\r\n            this.notificationService.error(\r\n              this.i18n.t('employee_excuses.approve_error')\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reject excuse request\r\n   */\r\n  rejectExcuse(excuse: EmployeeExcuseDto): void {\r\n    const message = this.i18n.t('employee_excuses.confirm_reject');\r\n\r\n    this.confirmationService.confirm({\r\n      title: this.i18n.t('employee_excuses.reject_title'),\r\n      message,\r\n      confirmText: this.i18n.t('employee_excuses.reject'),\r\n      requireComments: true\r\n    }).then(result => {\r\n      if (result.confirmed) {\r\n        this.employeeExcusesService.reviewEmployeeExcuse(excuse.id, {\r\n          status: ExcuseStatus.Rejected,\r\n          reviewerComments: result.comments\r\n        }).subscribe({\r\n          next: () => {\r\n            this.notificationService.success(\r\n              this.i18n.t('employee_excuses.reject_success')\r\n            );\r\n          },\r\n          error: () => {\r\n            this.notificationService.error(\r\n              this.i18n.t('employee_excuses.reject_error')\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Cancel excuse request\r\n   */\r\n  cancelExcuse(excuse: EmployeeExcuseDto): void {\r\n    const message = this.i18n.t('employee_excuses.confirm_cancel');\r\n\r\n    this.confirmationService.confirm({\r\n      title: this.i18n.t('employee_excuses.cancel_title'),\r\n      message,\r\n      confirmText: this.i18n.t('employee_excuses.cancel')\r\n    }).then(result => {\r\n      if (result.confirmed) {\r\n        this.employeeExcusesService.cancelEmployeeExcuse(excuse.id).subscribe({\r\n          next: () => {\r\n            this.notificationService.success(\r\n              this.i18n.t('employee_excuses.cancel_success')\r\n            );\r\n          },\r\n          error: () => {\r\n            this.notificationService.error(\r\n              this.i18n.t('employee_excuses.cancel_error')\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Download attachment\r\n   */\r\n  downloadAttachment(excuse: EmployeeExcuseDto): void {\r\n    this.employeeExcusesService.downloadAttachment(excuse.id).subscribe({\r\n      next: (blob) => {\r\n        const url = window.URL.createObjectURL(blob);\r\n        const link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = `excuse_${excuse.id}_attachment`;\r\n        link.click();\r\n        window.URL.revokeObjectURL(url);\r\n      },\r\n      error: () => {\r\n        this.notificationService.error(\r\n          this.i18n.t('employee_excuses.download_error')\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Reopen excuse for modification (SystemAdmin only)\r\n   */\r\n  reopenExcuse(excuse: EmployeeExcuseDto): void {\r\n    const message = this.i18n.t('employee_excuses.confirm_reopen');\r\n\r\n    this.confirmationService.confirm({\r\n      title: this.i18n.t('employee_excuses.reopen_title'),\r\n      message,\r\n      confirmText: this.i18n.t('employee_excuses.reopen')\r\n    }).then(result => {\r\n      if (result.confirmed) {\r\n        // For now, navigate to edit. In the future, this could call a specific API endpoint\r\n        this.editExcuse(excuse);\r\n        this.notificationService.info(\r\n          this.i18n.t('employee_excuses.reopen_info')\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Delete excuse (SystemAdmin can delete any, others only their own pending)\r\n   */\r\n  deleteExcuse(excuse: EmployeeExcuseDto): void {\r\n    const message = this.i18n.t('employee_excuses.confirm_delete');\r\n\r\n    this.confirmationService.confirm({\r\n      title: this.i18n.t('employee_excuses.delete_title'),\r\n      message,\r\n      confirmText: this.i18n.t('common.delete'),\r\n      requireComments: false\r\n    }).then(result => {\r\n      if (result.confirmed) {\r\n        this.employeeExcusesService.cancelEmployeeExcuse(excuse.id).subscribe({\r\n          next: () => {\r\n            this.notificationService.success(\r\n              this.i18n.t('employee_excuses.delete_success')\r\n            );\r\n          },\r\n          error: () => {\r\n            this.notificationService.error(\r\n              this.i18n.t('employee_excuses.delete_error')\r\n            );\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle filter changes\r\n   */\r\n  onFilterChange(filter: EmployeeExcuseFilter): void {\r\n    this.selectedEmployeeId.set(filter.employeeId);\r\n    this.selectedDepartmentId.set(filter.departmentId);\r\n    this.selectedBranchId.set(filter.branchId);\r\n    this.selectedStatus.set(filter.status);\r\n    this.fromDate.set(filter.fromDate);\r\n    this.toDate.set(filter.toDate);\r\n    this.searchTerm.set(filter.searchTerm);\r\n    this.currentPage.set(1); // Reset to first page\r\n  }\r\n\r\n  /**\r\n   * Clear all filters\r\n   */\r\n  clearFilters(): void {\r\n    this.selectedEmployeeId.set(undefined);\r\n    this.selectedDepartmentId.set(undefined);\r\n    this.selectedBranchId.set(undefined);\r\n    this.selectedStatus.set(undefined);\r\n    this.fromDate.set(undefined);\r\n    this.toDate.set(undefined);\r\n    this.searchTerm.set(undefined);\r\n    this.currentPage.set(1);\r\n  }\r\n\r\n  /**\r\n   * Handle page change\r\n   */\r\n  onPageChange(page: number): void {\r\n    this.currentPage.set(page);\r\n  }\r\n\r\n  /**\r\n   * Handle page size change\r\n   */\r\n  onPageSizeChange(pageSize: number): void {\r\n    this.pageSize.set(pageSize);\r\n    this.currentPage.set(1); // Reset to first page\r\n  }\r\n\r\n  /**\r\n   * Handle table action clicks\r\n   */\r\n  onTableAction(event: {action: string, item: EmployeeExcuseDto}): void {\r\n    const { action, item } = event;\r\n\r\n    switch (action) {\r\n      case 'view':\r\n        this.viewExcuse(item);\r\n        break;\r\n      case 'edit':\r\n        this.editExcuse(item);\r\n        break;\r\n      case 'approve':\r\n        this.approveExcuse(item);\r\n        break;\r\n      case 'reject':\r\n        this.rejectExcuse(item);\r\n        break;\r\n      case 'cancel':\r\n        this.cancelExcuse(item);\r\n        break;\r\n      case 'reopen':\r\n        this.reopenExcuse(item);\r\n        break;\r\n      case 'delete':\r\n        this.deleteExcuse(item);\r\n        break;\r\n      case 'download':\r\n        this.downloadAttachment(item);\r\n        break;\r\n      default:\r\n        console.warn('Unknown action:', action);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check if user can create excuse requests\r\n   */\r\n  canCreate(): boolean {\r\n    return this.permissionService.has(`excuse.${PermissionActions.CREATE}`);\r\n  }\r\n\r\n  /**\r\n   * Check if user can edit excuse\r\n   */\r\n  canEditExcuse(excuse: EmployeeExcuseDto): boolean {\r\n    const currentUser = this.permissionService.getCurrentUser();\r\n    return this.permissionService.hasRole('Admin') ||\r\n           this.permissionService.hasRole('SystemAdmin') ||\r\n           currentUser?.employeeId === excuse.employeeId;\r\n  }\r\n\r\n  /**\r\n   * Check if user can review excuse\r\n   */\r\n  canReviewExcuse(excuse: EmployeeExcuseDto): boolean {\r\n    const currentUser = this.permissionService.getCurrentUser();\r\n    return (this.permissionService.hasRole('Admin') ||\r\n           this.permissionService.hasRole('SystemAdmin') ||\r\n           this.permissionService.hasRole('Manager')) &&\r\n           currentUser?.employeeId !== excuse.employeeId;\r\n  }\r\n\r\n  /**\r\n   * Check if user can cancel excuse\r\n   */\r\n  canCancelExcuse(excuse: EmployeeExcuseDto): boolean {\r\n    const currentUser = this.permissionService.getCurrentUser();\r\n    return this.permissionService.hasRole('Admin') ||\r\n           this.permissionService.hasRole('SystemAdmin') ||\r\n           currentUser?.employeeId === excuse.employeeId;\r\n  }\r\n\r\n  /**\r\n   * Format duration for display\r\n   */\r\n  formatDuration(hours: number): string {\r\n    if (hours < 1) {\r\n      return `${Math.round(hours * 60)} ${this.i18n.t('common.minutes')}`;\r\n    }\r\n    return `${hours} ${this.i18n.t('common.hours')}`;\r\n  }\r\n\r\n  /**\r\n   * Format status for display\r\n   */\r\n  formatStatus(status: ExcuseStatus): string {\r\n    if (!status) {\r\n      return this.i18n.t('employee_excuses.status_pending');\r\n    }\r\n    return this.i18n.t(`employee_excuses.status_${status.toLowerCase()}`);\r\n  }\r\n\r\n  /**\r\n   * Get status CSS class\r\n   */\r\n  getStatusClass(status: ExcuseStatus): string {\r\n    switch (status) {\r\n      case ExcuseStatus.Pending:\r\n        return 'badge bg-warning';\r\n      case ExcuseStatus.Approved:\r\n        return 'badge bg-success';\r\n      case ExcuseStatus.Rejected:\r\n        return 'badge bg-danger';\r\n      case ExcuseStatus.Cancelled:\r\n        return 'badge bg-secondary';\r\n      default:\r\n        return 'badge bg-light';\r\n    }\r\n  }\r\n\r\n  // New standardized filter methods\r\n  onSearchChange(searchTerm: string): void {\r\n    this.searchTerm.set(searchTerm);\r\n    this.currentPage.set(1);\r\n  }\r\n\r\n  onFiltersChange(filters: any): void {\r\n    this.selectedEmployeeId.set(filters.employeeId ? +filters.employeeId : undefined);\r\n    this.selectedDepartmentId.set(filters.departmentId ? +filters.departmentId : undefined);\r\n    this.selectedBranchId.set(filters.branchId ? +filters.branchId : undefined);\r\n    this.selectedStatus.set(filters.status as ExcuseStatus || undefined);\r\n    this.currentPage.set(1);\r\n  }\r\n\r\n  onAddExcuse(): void {\r\n    this.router.navigate(['/employee-excuses/create']);\r\n  }\r\n\r\n  onRefreshData(): void {\r\n    this.clearFilters();\r\n    this.loadEmployeeExcuses();\r\n  }\r\n}", "<div class=\"employee-excuses-page\">\r\n  <!-- Page Header -->\r\n  <app-page-header\r\n    [title]=\"i18n.t('employee_excuses.management_title')\">\r\n  </app-page-header>\r\n\r\n  <!-- Filters Component -->\r\n  <app-unified-filter\r\n    moduleName=\"employee-excuses\"\r\n    [refreshing]=\"loading()\"\r\n    (searchChange)=\"onSearchChange($event)\"\r\n    (filtersChange)=\"onFiltersChange($event)\"\r\n    (add)=\"onAddExcuse()\"\r\n    (refresh)=\"onRefreshData()\">\r\n  </app-unified-filter>\r\n\r\n  <!-- Data Table -->\r\n  <div class=\"card\">\r\n    <div class=\"card-body\">\r\n      <app-data-table\r\n        [data]=\"employeeExcuses() || []\"\r\n        [columns]=\"tableColumns\"\r\n        [actions]=\"tableActions\"\r\n        [loading]=\"loading()\"\r\n        [totalItems]=\"pagedResult()?.totalCount || 0\"\r\n        [currentPage]=\"currentPage()\"\r\n        [pageSize]=\"pageSize()\"\r\n        [pageSizeOptions]=\"[10, 25, 50, 100]\"\r\n        (pageChange)=\"onPageChange($event)\"\r\n        (pageSizeChange)=\"onPageSizeChange($event)\"\r\n        (actionClick)=\"onTableAction($event)\"\r\n        [emptyMessage]=\"i18n.t('employee_excuses.no_requests_found')\"\r\n      >\r\n        <!-- Custom templates for specific columns -->\r\n        <ng-template #durationTemplate let-item>\r\n          {{ formatDuration(item.durationHours) }}\r\n        </ng-template>\r\n\r\n        <ng-template #reasonTemplate let-item>\r\n          <span\r\n            [title]=\"item.reason\"\r\n            class=\"text-truncate d-inline-block\"\r\n            style=\"max-width: 200px;\">\r\n            {{ item.reason }}\r\n          </span>\r\n        </ng-template>\r\n\r\n        <ng-template #statusTemplate let-item>\r\n          <span [class]=\"getStatusClass(item.status)\">\r\n            {{ formatStatus(item.status) }}\r\n          </span>\r\n          @if (!item.isWithinPolicy && item.policyViolationReason) {\r\n            <i\r\n              class=\"fas fa-exclamation-triangle text-warning ms-1\"\r\n              [title]=\"item.policyViolationReason\"\r\n              data-bs-toggle=\"tooltip\">\r\n            </i>\r\n          }\r\n        </ng-template>\r\n\r\n        <ng-template #dateTemplate let-item let-column=\"column\">\r\n          {{ (column === 'excuseDate' ? item.excuseDate : item.submissionDate) | date:'short' }}\r\n        </ng-template>\r\n      </app-data-table>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Error Display -->\r\n  @if (error()) {\r\n    <div class=\"alert alert-danger mt-3\" role=\"alert\">\r\n      <i class=\"fas fa-exclamation-triangle me-2\"></i>\r\n      {{ error() }}\r\n    </div>\r\n  }\r\n</div>"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmCU,IAAA,iBAAA,CAAA;;;;;AAAA,IAAA,6BAAA,KAAA,OAAA,eAAA,QAAA,aAAA,GAAA,GAAA;;;;;;AAIA,IAAA,yBAAA,GAAA,QAAA,EAAA;AAIE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AAJE,IAAA,qBAAA,SAAA,QAAA,MAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,QAAA,QAAA,GAAA;;;;;;AASA,IAAA,oBAAA,GAAA,KAAA,EAAA;;;;AAEE,IAAA,qBAAA,SAAA,QAAA,qBAAA;;;;;;AANJ,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;AACA,IAAA,8BAAA,GAAA,gEAAA,GAAA,GAAA,KAAA,EAAA;;;;;AAHM,IAAA,qBAAA,OAAA,eAAA,QAAA,MAAA,CAAA;AACJ,IAAA,oBAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,aAAA,QAAA,MAAA,GAAA,GAAA;AAEF,IAAA,oBAAA;AAAA,IAAA,wBAAA,CAAA,QAAA,kBAAA,QAAA,wBAAA,IAAA,EAAA;;;;;;AAUA,IAAA,iBAAA,CAAA;;;;;;AAAA,IAAA,6BAAA,KAAA,sBAAA,GAAA,GAAA,cAAA,eAAA,QAAA,aAAA,QAAA,gBAAA,OAAA,GAAA,GAAA;;;;;;AAQN,IAAA,yBAAA,GAAA,OAAA,EAAA;AACE,IAAA,oBAAA,GAAA,KAAA,EAAA;AACA,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,KAAA,OAAA,MAAA,GAAA,GAAA;;;;ADxCA,IAAO,4BAAP,MAAO,0BAAwB;EAC3B,yBAAyB,OAAO,sBAAsB;EACtD,sBAAsB,OAAO,mBAAmB;EAChD,sBAAsB,OAAO,mBAAmB;EAChD,SAAS,OAAO,MAAM;EACvB,OAAO,OAAO,WAAW;EACzB,oBAAoB,OAAO,iBAAiB;;EAG1C,cAAc;IACrB,eAAe,UAAU,kBAAkB,MAAM;IACjD,aAAa,UAAU,kBAAkB,IAAI;IAC7C,eAAe,UAAU,kBAAkB,MAAM;IACjD,eAAe,UAAU,kBAAkB,MAAM;;;EAKnD,UAAU,OAAO,OAAK,GAAA,YAAA,CAAA,EAAA,WAAA,UAAA,CAAA,IAAA,CAAA,CAAA;EACtB,cAAc,OAAO,GAAC,GAAA,YAAA,CAAA,EAAA,WAAA,cAAA,CAAA,IAAA,CAAA,CAAA;EACtB,WAAW,OAAO,IAAE,GAAA,YAAA,CAAA,EAAA,WAAA,WAAA,CAAA,IAAA,CAAA,CAAA;EACpB,qBAAqB,OAA2B,QAAS,GAAA,YAAA,CAAA,EAAA,WAAA,qBAAA,CAAA,IAAA,CAAA,CAAA;EACzD,uBAAuB,OAA2B,QAAS,GAAA,YAAA,CAAA,EAAA,WAAA,uBAAA,CAAA,IAAA,CAAA,CAAA;EAC3D,mBAAmB,OAA2B,QAAS,GAAA,YAAA,CAAA,EAAA,WAAA,mBAAA,CAAA,IAAA,CAAA,CAAA;EACvD,iBAAiB,OAAiC,QAAS,GAAA,YAAA,CAAA,EAAA,WAAA,iBAAA,CAAA,IAAA,CAAA,CAAA;EAC3D,WAAW,OAA2B,QAAS,GAAA,YAAA,CAAA,EAAA,WAAA,WAAA,CAAA,IAAA,CAAA,CAAA;EAC/C,SAAS,OAA2B,QAAS,GAAA,YAAA,CAAA,EAAA,WAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAC7C,aAAa,OAA2B,QAAS,GAAA,YAAA,CAAA,EAAA,WAAA,aAAA,CAAA,IAAA,CAAA,CAAA;;EAGjD,kBAAkB,KAAK,uBAAuB;EAC9C,cAAc,KAAK,uBAAuB;EAC1C,aAAa,KAAK,uBAAuB;EACzC,QAAQ,KAAK,uBAAuB;;EAGpC,eAA8B;IAC5B,EAAE,KAAK,gBAAgB,OAAO,KAAK,KAAK,EAAE,2BAA2B,GAAG,UAAU,MAAM,OAAO,MAAK;IACpG,EAAE,KAAK,kBAAkB,OAAO,KAAK,KAAK,EAAE,kCAAkC,GAAG,UAAU,MAAM,OAAO,MAAK;IAC7G,EAAE,KAAK,kBAAkB,OAAO,KAAK,KAAK,EAAE,6BAA6B,GAAG,UAAU,MAAM,OAAO,MAAK;IACxG,EAAE,KAAK,cAAc,OAAO,KAAK,KAAK,EAAE,8BAA8B,GAAG,UAAU,MAAM,OAAO,MAAK;IACrG,EAAE,KAAK,iBAAiB,OAAO,KAAK,KAAK,EAAE,2BAA2B,GAAG,UAAU,OAAO,OAAO,KAAI;IACrG,EAAE,KAAK,UAAU,OAAO,KAAK,KAAK,EAAE,yBAAyB,GAAG,UAAU,OAAO,OAAO,MAAK;IAC7F,EAAE,KAAK,UAAU,OAAO,KAAK,KAAK,EAAE,yBAAyB,GAAG,UAAU,MAAM,OAAO,MAAK;IAC5F,EAAE,KAAK,kBAAkB,OAAO,KAAK,KAAK,EAAE,iCAAiC,GAAG,UAAU,MAAM,OAAO,MAAK;;;EAI9G,eAA8B;IAC5B;MACE,KAAK;MACL,OAAO,KAAK,KAAK,EAAE,aAAa;MAChC,MAAM;MACN,OAAO;MACP,WAAW,wBAAC,SAA2B;AACrC,eAAO,KAAK,kBAAkB,IAAI,UAAU,kBAAkB,IAAI,EAAE,KAC7D,KAAK,kBAAkB,QAAQ,aAAa;MACrD,GAHW;;IAKb;MACE,KAAK;MACL,OAAO,KAAK,KAAK,EAAE,aAAa;MAChC,MAAM;MACN,OAAO;MACP,WAAW,wBAAC,SAA2B;AAErC,cAAM,gBAAgB,KAAK,kBAAkB,IAAI,UAAU,kBAAkB,MAAM,EAAE,KAChE,KAAK,kBAAkB,QAAQ,aAAa;AACjE,cAAM,kBAAkB,KAAK,cAAc,IAAI;AAE/C,eAAO,iBAAiB;MAC1B,GAPW;;IASb;MACE,KAAK;MACL,OAAO,KAAK,KAAK,EAAE,0BAA0B;MAC7C,MAAM;MACN,OAAO;MACP,WAAW,wBAAC,SAA2B;AAErC,cAAM,mBAAmB,KAAK,WAAW,aAAa;AACtD,cAAM,gBAAgB,KAAK,kBAAkB,IAAI,UAAU,kBAAkB,OAAO,EAAE,KACjE,KAAK,kBAAkB,QAAQ,aAAa;AACjE,cAAM,oBAAoB,KAAK,gBAAgB,IAAI;AAEnD,eAAO,oBAAoB,iBAAiB;MAC9C,GARW;;IAUb;MACE,KAAK;MACL,OAAO,KAAK,KAAK,EAAE,yBAAyB;MAC5C,MAAM;MACN,OAAO;MACP,WAAW,wBAAC,SAA2B;AAErC,cAAM,kBAAkB,KAAK,WAAW,aAAa;AACrD,cAAM,gBAAgB,KAAK,kBAAkB,IAAI,UAAU,kBAAkB,OAAO,EAAE,KACjE,KAAK,kBAAkB,QAAQ,aAAa;AACjE,cAAM,oBAAoB,KAAK,gBAAgB,IAAI;AAEnD,eAAO,mBAAmB,iBAAiB;MAC7C,GARW;;IAUb;MACE,KAAK;MACL,OAAO,KAAK,KAAK,EAAE,yBAAyB;MAC5C,MAAM;MACN,OAAO;MACP,WAAW,wBAAC,SAA2B;AAErC,cAAM,kBAAkB,KAAK,WAAW,aAAa;AACrD,cAAM,gBAAgB,KAAK,kBAAkB,IAAI,UAAU,kBAAkB,MAAM,EAAE,KAChE,KAAK,kBAAkB,QAAQ,aAAa;AACjE,cAAM,oBAAoB,KAAK,gBAAgB,IAAI;AAEnD,eAAO,mBAAmB,iBAAiB;MAC7C,GARW;;IAUb;MACE,KAAK;MACL,OAAO,KAAK,KAAK,EAAE,yBAAyB;MAC5C,MAAM;MACN,OAAO;MACP,WAAW,wBAAC,SAA2B;AAErC,cAAM,kBAAkB,KAAK,WAAW,aAAa,YAAY,KAAK,WAAW,aAAa;AAC9F,cAAM,gBAAgB,KAAK,kBAAkB,QAAQ,aAAa;AAElE,eAAO,mBAAmB;MAC5B,GANW;;IAQb;MACE,KAAK;MACL,OAAO,KAAK,KAAK,EAAE,eAAe;MAClC,MAAM;MACN,OAAO;MACP,WAAW,wBAAC,SAA2B;AAErC,cAAM,gBAAgB,KAAK,kBAAkB,QAAQ,aAAa;AAClE,cAAM,gBAAgB,KAAK,kBAAkB,IAAI,UAAU,kBAAkB,MAAM,EAAE;AAErF,YAAI,eAAe;AACjB,iBAAO;QACT;AAGA,eAAO,KAAK,WAAW,aAAa,WAC7B,iBACA,KAAK,gBAAgB,IAAI;MAClC,GAbW;;IAeb;MACE,KAAK;MACL,OAAO,KAAK,KAAK,EAAE,sCAAsC;MACzD,MAAM;MACN,OAAO;MACP,WAAW,wBAAC,SAA2B;AACrC,cAAM,gBAAgB,CAAC,CAAC,KAAK;AAC7B,cAAM,gBAAgB,KAAK,kBAAkB,IAAI,UAAU,kBAAkB,IAAI,EAAE,KAC9D,KAAK,kBAAkB,QAAQ,aAAa;AAEjE,eAAO,iBAAiB;MAC1B,GANW;;;;EAWf,gBAAgB,SAAS,OAAO;IAC9B,YAAY,KAAK,mBAAkB;IACnC,cAAc,KAAK,qBAAoB;IACvC,UAAU,KAAK,iBAAgB;IAC/B,QAAQ,KAAK,eAAc;IAC3B,UAAU,KAAK,SAAQ;IACvB,QAAQ,KAAK,OAAM;IACnB,YAAY,KAAK,WAAU;MAC3B,GAAA,YAAA,CAAA,EAAA,WAAA,gBAAA,CAAA,IAAA,CAAA,CAAA;;EAIF,cAAA;AAEE,WAAO,MAAK;AACV,YAAM,SAAS,KAAK,cAAa;AACjC,YAAM,OAAO,KAAK,YAAW;AAC7B,YAAM,WAAW,KAAK,SAAQ;AAE9B,WAAK,oBAAoB;QACvB;QACA;SACG,OACJ;IACH,CAAC;AAGD,WAAO,MAAK;AACV,WAAK,QAAQ,IAAI,KAAK,uBAAuB,QAAO,CAAE;IACxD,CAAC;EACH;EAEA,WAAQ;AAEN,SAAK,oBAAmB;EAC1B;;;;EAKA,oBAAoB,SAAqC,CAAA,GAAE;AACzD,UAAM,cAA0C;MAC9C,MAAM,KAAK,YAAW;MACtB,UAAU,KAAK,SAAQ;OACpB,KAAK,cAAa,IAClB;AAGL,SAAK,uBAAuB,mBAAmB,WAAW,EAAE,UAAU;MACpE,MAAM,6BAAK;AAET,aAAK,6BAA4B;MACnC,GAHM;MAIN,OAAO,wBAAC,UAAS;AACf,aAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,6BAA6B,CAAC;MAE9C,GAJO;KAKR;EACH;;;;EAKA,iBAAc;AAGZ,SAAK,6BAA4B;EACnC;;;;EAKQ,+BAA4B;AAClC,UAAM,aAAa,KAAK,uBAAuB,gBAAe,KAAM,CAAA;AAEpE,UAAM,QAAQ;MACZ,eAAe,WAAW;MAC1B,iBAAiB,WAAW,OAAO,YAAU,OAAO,WAAW,SAAS,EAAE;MAC1E,kBAAkB,WAAW,OAAO,YAAU,OAAO,WAAW,UAAU,EAAE;MAC5E,kBAAkB,WAAW,OAAO,YAAU,OAAO,WAAW,UAAU,EAAE;MAC5E,mBAAmB;;MACnB,uBAAuB;;MACvB,cAAc;;;AAGhB,SAAK,uBAAuB,WAAW,IAAI,KAAK;EAClD;;;;EAKA,mBAAgB;AACd,SAAK,OAAO,SAAS,CAAC,0BAA0B,CAAC;EACnD;;;;EAKA,WAAW,QAAyB;AAClC,SAAK,OAAO,SAAS,CAAC,qBAAqB,OAAO,IAAI,MAAM,CAAC;EAC/D;;;;EAKA,WAAW,QAAyB;AAClC,SAAK,OAAO,SAAS,CAAC,qBAAqB,OAAO,IAAI,MAAM,CAAC;EAC/D;;;;EAKA,cAAc,QAAyB;AACrC,UAAM,UAAU,KAAK,KAAK,EAAE,kCAAkC;AAE9D,SAAK,oBAAoB,QAAQ;MAC/B,OAAO,KAAK,KAAK,EAAE,gCAAgC;MACnD;MACA,aAAa,KAAK,KAAK,EAAE,0BAA0B;KACpD,EAAE,KAAK,YAAS;AACf,UAAI,OAAO,WAAW;AACpB,aAAK,uBAAuB,qBAAqB,OAAO,IAAI;UAC1D,QAAQ,aAAa;UACrB,kBAAkB,OAAO;SAC1B,EAAE,UAAU;UACX,MAAM,6BAAK;AACT,iBAAK,oBAAoB,QACvB,KAAK,KAAK,EAAE,kCAAkC,CAAC;UAEnD,GAJM;UAKN,OAAO,6BAAK;AACV,iBAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,gCAAgC,CAAC;UAEjD,GAJO;SAKR;MACH;IACF,CAAC;EACH;;;;EAKA,aAAa,QAAyB;AACpC,UAAM,UAAU,KAAK,KAAK,EAAE,iCAAiC;AAE7D,SAAK,oBAAoB,QAAQ;MAC/B,OAAO,KAAK,KAAK,EAAE,+BAA+B;MAClD;MACA,aAAa,KAAK,KAAK,EAAE,yBAAyB;MAClD,iBAAiB;KAClB,EAAE,KAAK,YAAS;AACf,UAAI,OAAO,WAAW;AACpB,aAAK,uBAAuB,qBAAqB,OAAO,IAAI;UAC1D,QAAQ,aAAa;UACrB,kBAAkB,OAAO;SAC1B,EAAE,UAAU;UACX,MAAM,6BAAK;AACT,iBAAK,oBAAoB,QACvB,KAAK,KAAK,EAAE,iCAAiC,CAAC;UAElD,GAJM;UAKN,OAAO,6BAAK;AACV,iBAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,+BAA+B,CAAC;UAEhD,GAJO;SAKR;MACH;IACF,CAAC;EACH;;;;EAKA,aAAa,QAAyB;AACpC,UAAM,UAAU,KAAK,KAAK,EAAE,iCAAiC;AAE7D,SAAK,oBAAoB,QAAQ;MAC/B,OAAO,KAAK,KAAK,EAAE,+BAA+B;MAClD;MACA,aAAa,KAAK,KAAK,EAAE,yBAAyB;KACnD,EAAE,KAAK,YAAS;AACf,UAAI,OAAO,WAAW;AACpB,aAAK,uBAAuB,qBAAqB,OAAO,EAAE,EAAE,UAAU;UACpE,MAAM,6BAAK;AACT,iBAAK,oBAAoB,QACvB,KAAK,KAAK,EAAE,iCAAiC,CAAC;UAElD,GAJM;UAKN,OAAO,6BAAK;AACV,iBAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,+BAA+B,CAAC;UAEhD,GAJO;SAKR;MACH;IACF,CAAC;EACH;;;;EAKA,mBAAmB,QAAyB;AAC1C,SAAK,uBAAuB,mBAAmB,OAAO,EAAE,EAAE,UAAU;MAClE,MAAM,wBAAC,SAAQ;AACb,cAAM,MAAM,OAAO,IAAI,gBAAgB,IAAI;AAC3C,cAAM,OAAO,SAAS,cAAc,GAAG;AACvC,aAAK,OAAO;AACZ,aAAK,WAAW,UAAU,OAAO,EAAE;AACnC,aAAK,MAAK;AACV,eAAO,IAAI,gBAAgB,GAAG;MAChC,GAPM;MAQN,OAAO,6BAAK;AACV,aAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,iCAAiC,CAAC;MAElD,GAJO;KAKR;EACH;;;;EAKA,aAAa,QAAyB;AACpC,UAAM,UAAU,KAAK,KAAK,EAAE,iCAAiC;AAE7D,SAAK,oBAAoB,QAAQ;MAC/B,OAAO,KAAK,KAAK,EAAE,+BAA+B;MAClD;MACA,aAAa,KAAK,KAAK,EAAE,yBAAyB;KACnD,EAAE,KAAK,YAAS;AACf,UAAI,OAAO,WAAW;AAEpB,aAAK,WAAW,MAAM;AACtB,aAAK,oBAAoB,KACvB,KAAK,KAAK,EAAE,8BAA8B,CAAC;MAE/C;IACF,CAAC;EACH;;;;EAKA,aAAa,QAAyB;AACpC,UAAM,UAAU,KAAK,KAAK,EAAE,iCAAiC;AAE7D,SAAK,oBAAoB,QAAQ;MAC/B,OAAO,KAAK,KAAK,EAAE,+BAA+B;MAClD;MACA,aAAa,KAAK,KAAK,EAAE,eAAe;MACxC,iBAAiB;KAClB,EAAE,KAAK,YAAS;AACf,UAAI,OAAO,WAAW;AACpB,aAAK,uBAAuB,qBAAqB,OAAO,EAAE,EAAE,UAAU;UACpE,MAAM,6BAAK;AACT,iBAAK,oBAAoB,QACvB,KAAK,KAAK,EAAE,iCAAiC,CAAC;UAElD,GAJM;UAKN,OAAO,6BAAK;AACV,iBAAK,oBAAoB,MACvB,KAAK,KAAK,EAAE,+BAA+B,CAAC;UAEhD,GAJO;SAKR;MACH;IACF,CAAC;EACH;;;;EAKA,eAAe,QAA4B;AACzC,SAAK,mBAAmB,IAAI,OAAO,UAAU;AAC7C,SAAK,qBAAqB,IAAI,OAAO,YAAY;AACjD,SAAK,iBAAiB,IAAI,OAAO,QAAQ;AACzC,SAAK,eAAe,IAAI,OAAO,MAAM;AACrC,SAAK,SAAS,IAAI,OAAO,QAAQ;AACjC,SAAK,OAAO,IAAI,OAAO,MAAM;AAC7B,SAAK,WAAW,IAAI,OAAO,UAAU;AACrC,SAAK,YAAY,IAAI,CAAC;EACxB;;;;EAKA,eAAY;AACV,SAAK,mBAAmB,IAAI,MAAS;AACrC,SAAK,qBAAqB,IAAI,MAAS;AACvC,SAAK,iBAAiB,IAAI,MAAS;AACnC,SAAK,eAAe,IAAI,MAAS;AACjC,SAAK,SAAS,IAAI,MAAS;AAC3B,SAAK,OAAO,IAAI,MAAS;AACzB,SAAK,WAAW,IAAI,MAAS;AAC7B,SAAK,YAAY,IAAI,CAAC;EACxB;;;;EAKA,aAAa,MAAY;AACvB,SAAK,YAAY,IAAI,IAAI;EAC3B;;;;EAKA,iBAAiB,UAAgB;AAC/B,SAAK,SAAS,IAAI,QAAQ;AAC1B,SAAK,YAAY,IAAI,CAAC;EACxB;;;;EAKA,cAAc,OAAgD;AAC5D,UAAM,EAAE,QAAQ,KAAI,IAAK;AAEzB,YAAQ,QAAQ;MACd,KAAK;AACH,aAAK,WAAW,IAAI;AACpB;MACF,KAAK;AACH,aAAK,WAAW,IAAI;AACpB;MACF,KAAK;AACH,aAAK,cAAc,IAAI;AACvB;MACF,KAAK;AACH,aAAK,aAAa,IAAI;AACtB;MACF,KAAK;AACH,aAAK,aAAa,IAAI;AACtB;MACF,KAAK;AACH,aAAK,aAAa,IAAI;AACtB;MACF,KAAK;AACH,aAAK,aAAa,IAAI;AACtB;MACF,KAAK;AACH,aAAK,mBAAmB,IAAI;AAC5B;MACF;AACE,gBAAQ,KAAK,mBAAmB,MAAM;IAC1C;EACF;;;;EAKA,YAAS;AACP,WAAO,KAAK,kBAAkB,IAAI,UAAU,kBAAkB,MAAM,EAAE;EACxE;;;;EAKA,cAAc,QAAyB;AACrC,UAAM,cAAc,KAAK,kBAAkB,eAAc;AACzD,WAAO,KAAK,kBAAkB,QAAQ,OAAO,KACtC,KAAK,kBAAkB,QAAQ,aAAa,KAC5C,aAAa,eAAe,OAAO;EAC5C;;;;EAKA,gBAAgB,QAAyB;AACvC,UAAM,cAAc,KAAK,kBAAkB,eAAc;AACzD,YAAQ,KAAK,kBAAkB,QAAQ,OAAO,KACvC,KAAK,kBAAkB,QAAQ,aAAa,KAC5C,KAAK,kBAAkB,QAAQ,SAAS,MACxC,aAAa,eAAe,OAAO;EAC5C;;;;EAKA,gBAAgB,QAAyB;AACvC,UAAM,cAAc,KAAK,kBAAkB,eAAc;AACzD,WAAO,KAAK,kBAAkB,QAAQ,OAAO,KACtC,KAAK,kBAAkB,QAAQ,aAAa,KAC5C,aAAa,eAAe,OAAO;EAC5C;;;;EAKA,eAAe,OAAa;AAC1B,QAAI,QAAQ,GAAG;AACb,aAAO,GAAG,KAAK,MAAM,QAAQ,EAAE,CAAC,IAAI,KAAK,KAAK,EAAE,gBAAgB,CAAC;IACnE;AACA,WAAO,GAAG,KAAK,IAAI,KAAK,KAAK,EAAE,cAAc,CAAC;EAChD;;;;EAKA,aAAa,QAAoB;AAC/B,QAAI,CAAC,QAAQ;AACX,aAAO,KAAK,KAAK,EAAE,iCAAiC;IACtD;AACA,WAAO,KAAK,KAAK,EAAE,2BAA2B,OAAO,YAAW,CAAE,EAAE;EACtE;;;;EAKA,eAAe,QAAoB;AACjC,YAAQ,QAAQ;MACd,KAAK,aAAa;AAChB,eAAO;MACT,KAAK,aAAa;AAChB,eAAO;MACT,KAAK,aAAa;AAChB,eAAO;MACT,KAAK,aAAa;AAChB,eAAO;MACT;AACE,eAAO;IACX;EACF;;EAGA,eAAe,YAAkB;AAC/B,SAAK,WAAW,IAAI,UAAU;AAC9B,SAAK,YAAY,IAAI,CAAC;EACxB;EAEA,gBAAgB,SAAY;AAC1B,SAAK,mBAAmB,IAAI,QAAQ,aAAa,CAAC,QAAQ,aAAa,MAAS;AAChF,SAAK,qBAAqB,IAAI,QAAQ,eAAe,CAAC,QAAQ,eAAe,MAAS;AACtF,SAAK,iBAAiB,IAAI,QAAQ,WAAW,CAAC,QAAQ,WAAW,MAAS;AAC1E,SAAK,eAAe,IAAI,QAAQ,UAA0B,MAAS;AACnE,SAAK,YAAY,IAAI,CAAC;EACxB;EAEA,cAAW;AACT,SAAK,OAAO,SAAS,CAAC,0BAA0B,CAAC;EACnD;EAEA,gBAAa;AACX,SAAK,aAAY;AACjB,SAAK,oBAAmB;EAC1B;;AAvmBmC;cAAxB;mCAAA,2BAAwB;AAAA;cAAxB,4FAAA,2BAAwB,WAAA,CAAA,CAAA,sBAAA,CAAA,GAAA,OAAA,IAAA,MAAA,IAAA,QAAA,CAAA,CAAA,oBAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,GAAA,CAAA,gBAAA,EAAA,GAAA,CAAA,GAAA,uBAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,cAAA,oBAAA,GAAA,gBAAA,iBAAA,OAAA,WAAA,YAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,WAAA,GAAA,CAAA,GAAA,cAAA,kBAAA,eAAA,QAAA,WAAA,WAAA,WAAA,cAAA,eAAA,YAAA,mBAAA,cAAA,GAAA,CAAA,QAAA,SAAA,GAAA,SAAA,gBAAA,MAAA,GAAA,CAAA,GAAA,iBAAA,kBAAA,GAAA,aAAA,SAAA,GAAA,OAAA,GAAA,CAAA,kBAAA,WAAA,GAAA,OAAA,2BAAA,gBAAA,QAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,2BAAA,MAAA,CAAA,GAAA,UAAA,gCAAA,kCAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;;AC/BrC,IAAA,yBAAA,GAAA,OAAA,CAAA;AAEE,IAAA,oBAAA,GAAA,mBAAA,CAAA;AAKA,IAAA,yBAAA,GAAA,sBAAA,CAAA;AAGE,IAAA,qBAAA,gBAAA,gCAAA,6EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAgB,IAAA,eAAA,MAAA,CAAsB;IAAA,GAAtC,+EAAsC,EAAC,iBAAA,gCAAA,8EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBACtB,IAAA,gBAAA,MAAA,CAAuB;IAAA,GADD,gFACC,EAAC,OAAA,gCAAA,sEAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAClC,IAAA,YAAA,CAAa;IAAA,GADqB,sEACrB,EAAC,WAAA,gCAAA,0EAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBACV,IAAA,cAAA,CAAe;IAAA,GADL,0EACK;AAC5B,IAAA,uBAAA;AAGA,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAkB,GAAA,OAAA,CAAA,EACO,GAAA,kBAAA,CAAA;AAUnB,IAAA,qBAAA,cAAA,gCAAA,uEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAAc,IAAA,aAAA,MAAA,CAAoB;IAAA,GAAlC,yEAAkC,EAAC,kBAAA,gCAAA,2EAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBACjB,IAAA,iBAAA,MAAA,CAAwB;IAAA,GADP,6EACO,EAAC,eAAA,gCAAA,wEAAA,QAAA;AAAA,MAAA,wBAAA,GAAA;AAAA,aAAA,sBAC5B,IAAA,cAAA,MAAA,CAAqB;IAAA,GADO,0EACP;AAIpC,IAAA,qBAAA,GAAA,iDAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EAAwC,GAAA,iDAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EAIF,IAAA,kDAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA,EASA,IAAA,kDAAA,GAAA,GAAA,eAAA,MAAA,GAAA,gCAAA;AAgBxC,IAAA,uBAAA,EAAiB,EACb;AAIR,IAAA,8BAAA,IAAA,kDAAA,GAAA,GAAA,OAAA,EAAA;AAMF,IAAA,uBAAA;;;;AAvEI,IAAA,oBAAA;AAAA,IAAA,qBAAA,SAAA,IAAA,KAAA,EAAA,mCAAA,CAAA;AAMA,IAAA,oBAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,QAAA,CAAA;AAWI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,gBAAA,KAAA,0BAAA,IAAA,GAAA,CAAA,EAAgC,WAAA,IAAA,YAAA,EACR,WAAA,IAAA,YAAA,EACA,WAAA,IAAA,QAAA,CAAA,EACH,gBAAA,WAAA,IAAA,YAAA,MAAA,OAAA,OAAA,SAAA,eAAA,CAAA,EACwB,eAAA,IAAA,YAAA,CAAA,EAChB,YAAA,IAAA,SAAA,CAAA,EACN,mBAAA,0BAAA,IAAA,GAAA,CAAA,EACc,gBAAA,IAAA,KAAA,EAAA,oCAAA,CAAA;AAyC3C,IAAA,oBAAA,CAAA;AAAA,IAAA,wBAAA,IAAA,MAAA,IAAA,KAAA,EAAA;;GDrCmC;EARjC;EACA;EACA;EACA;EAAsB;AAAA,GAAA,QAAA,CAAA,yxIAAA,EAAA,CAAA;AAKpB,IAAO,2BAAP;;sEAAO,0BAAwB,CAAA;UAZpC;uBACW,wBAAsB,YACpB,MAAI,SACP;MACP;MACA;MACA;MACA;OACD,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAAA,QAAA,CAAA,kvGAAA,EAAA,CAAA;;;;6EAIU,0BAAwB,EAAA,WAAA,4BAAA,UAAA,gEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
