{
  "version": 3,
  "sources": ["src/app/pages/excuse-policies/excuse-policies.service.ts"],
  "sourcesContent": ["import { Injectable, signal, computed } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, map, catchError, throwError, tap } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport {\r\n  ExcusePolicyDto,\r\n  CreateExcusePolicyRequest,\r\n  UpdateExcusePolicyRequest,\r\n  ExcusePoliciesQueryParams,\r\n  ExcusePolicyFilter,\r\n  PagedResult\r\n} from '../../shared/models/excuse-policy.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExcusePoliciesService {\r\n  private readonly baseUrl = `${environment.apiUrl}/api/v1/excuse-policies`;\r\n\r\n  // Signals for state management\r\n  private readonly _excusePolicies = signal<ExcusePolicyDto[]>([]);\r\n  private readonly _pagedResult = signal<PagedResult<ExcusePolicyDto> | null>(null);\r\n  private readonly _loading = signal(false);\r\n  private readonly _error = signal<string | null>(null);\r\n  private readonly _selectedExcusePolicy = signal<ExcusePolicyDto | null>(null);\r\n  private readonly _currentFilter = signal<ExcusePolicyFilter>({});\r\n\r\n  // Public readonly signals\r\n  readonly excusePolicies = this._excusePolicies.asReadonly();\r\n  readonly pagedResult = this._pagedResult.asReadonly();\r\n  readonly loading = this._loading.asReadonly();\r\n  readonly error = this._error.asReadonly();\r\n  readonly selectedExcusePolicy = this._selectedExcusePolicy.asReadonly();\r\n  readonly currentFilter = this._currentFilter.asReadonly();\r\n\r\n  // Computed signals\r\n  readonly totalItems = computed(() => this._pagedResult()?.totalCount ?? 0);\r\n  readonly totalPages = computed(() => {\r\n    const result = this._pagedResult();\r\n    if (!result || result.pageSize === 0) return 1;\r\n    return Math.ceil(result.totalCount / result.pageSize);\r\n  });\r\n  readonly hasNextPage = computed(() => {\r\n    const result = this._pagedResult();\r\n    if (!result) return false;\r\n    return result.page < this.totalPages();\r\n  });\r\n  readonly hasPreviousPage = computed(() => {\r\n    const result = this._pagedResult();\r\n    if (!result) return false;\r\n    return result.page > 1;\r\n  });\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  /**\r\n   * Get paginated excuse policies\r\n   */\r\n  getExcusePolicies(params: ExcusePoliciesQueryParams = {}): Observable<PagedResult<ExcusePolicyDto>> {\r\n    this._loading.set(true);\r\n    this._error.set(null);\r\n\r\n    let httpParams = new HttpParams();\r\n    if (params.page) httpParams = httpParams.set('pageNumber', params.page.toString());\r\n    if (params.pageSize) httpParams = httpParams.set('pageSize', params.pageSize.toString());\r\n    if (params.branchId) httpParams = httpParams.set('branchId', params.branchId.toString());\r\n    if (params.isActive !== undefined) httpParams = httpParams.set('isActive', params.isActive.toString());\r\n\r\n    return this.http.get<any>(this.baseUrl, { params: httpParams }).pipe(\r\n      map(response => response.value as PagedResult<ExcusePolicyDto>),\r\n      tap(result => {\r\n        this._pagedResult.set(result);\r\n        this._excusePolicies.set(result.items);\r\n        this._loading.set(false);\r\n      }),\r\n      catchError(error => {\r\n        this._loading.set(false);\r\n        this._error.set(error.message || 'Failed to load excuse policies');\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get excuse policy by ID\r\n   */\r\n  getExcusePolicyById(id: number): Observable<ExcusePolicyDto> {\r\n    this._loading.set(true);\r\n    this._error.set(null);\r\n\r\n    return this.http.get<any>(`${this.baseUrl}/${id}`).pipe(\r\n      map(response => response.value as ExcusePolicyDto),\r\n      tap(excusePolicy => {\r\n        this._selectedExcusePolicy.set(excusePolicy);\r\n        this._loading.set(false);\r\n      }),\r\n      catchError(error => {\r\n        this._loading.set(false);\r\n        this._error.set(error.error?.message || 'Failed to load excuse policy');\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get branches for dropdown selection\r\n   */\r\n  getBranches(): Observable<Array<{id: number, name: string}>> {\r\n    return this.http.get<any>(`${environment.apiUrl}/api/v1/branches/all`).pipe(\r\n      map(response => response.value as Array<{id: number, name: string}>),\r\n      catchError(error => {\r\n        console.error('Failed to load branches:', error);\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create new excuse policy\r\n   */\r\n  createExcusePolicy(request: CreateExcusePolicyRequest): Observable<number> {\r\n    this._loading.set(true);\r\n    this._error.set(null);\r\n\r\n    return this.http.post<any>(this.baseUrl, request).pipe(\r\n      map(response => response.value as number),\r\n      tap(() => {\r\n        this._loading.set(false);\r\n        // Refresh the list after successful creation\r\n        this.refreshCurrentPage();\r\n      }),\r\n      catchError(error => {\r\n        this._loading.set(false);\r\n        this._error.set(error.error?.message || 'Failed to create excuse policy');\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update excuse policy\r\n   */\r\n  updateExcusePolicy(id: number, request: UpdateExcusePolicyRequest): Observable<boolean> {\r\n    this._loading.set(true);\r\n    this._error.set(null);\r\n\r\n    return this.http.put<any>(`${this.baseUrl}/${id}`, { ...request, id }).pipe(\r\n      map(response => response.value as boolean),\r\n      tap(() => {\r\n        this._loading.set(false);\r\n        // Refresh the list after successful update\r\n        this.refreshCurrentPage();\r\n      }),\r\n      catchError(error => {\r\n        this._loading.set(false);\r\n        this._error.set(error.error?.message || 'Failed to update excuse policy');\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Toggle excuse policy status\r\n   */\r\n  toggleExcusePolicyStatus(id: number): Observable<boolean> {\r\n    this._loading.set(true);\r\n    this._error.set(null);\r\n\r\n    return this.http.patch<any>(`${this.baseUrl}/${id}/toggle-status`, {}).pipe(\r\n      map(response => response.value as boolean),\r\n      tap(() => {\r\n        this._loading.set(false);\r\n        // Refresh the list after successful toggle\r\n        this.refreshCurrentPage();\r\n      }),\r\n      catchError(error => {\r\n        this._loading.set(false);\r\n        this._error.set(error.error?.message || 'Failed to toggle excuse policy status');\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Delete excuse policy\r\n   */\r\n  deleteExcusePolicy(id: number): Observable<boolean> {\r\n    this._loading.set(true);\r\n    this._error.set(null);\r\n\r\n    return this.http.delete<any>(`${this.baseUrl}/${id}`).pipe(\r\n      map(response => response.value as boolean),\r\n      tap(() => {\r\n        this._loading.set(false);\r\n        // Refresh the list after successful deletion\r\n        this.refreshCurrentPage();\r\n      }),\r\n      catchError(error => {\r\n        this._loading.set(false);\r\n        this._error.set(error.error?.message || 'Failed to delete excuse policy');\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Set current filter\r\n   */\r\n  setFilter(filter: ExcusePolicyFilter): void {\r\n    this._currentFilter.set(filter);\r\n  }\r\n\r\n  /**\r\n   * Clear current filter\r\n   */\r\n  clearFilter(): void {\r\n    this._currentFilter.set({});\r\n  }\r\n\r\n  /**\r\n   * Set selected excuse policy\r\n   */\r\n  setSelectedExcusePolicy(excusePolicy: ExcusePolicyDto | null): void {\r\n    this._selectedExcusePolicy.set(excusePolicy);\r\n  }\r\n\r\n  /**\r\n   * Clear error state\r\n   */\r\n  clearError(): void {\r\n    this._error.set(null);\r\n  }\r\n\r\n  /**\r\n   * Refresh current page with current filter\r\n   */\r\n  private refreshCurrentPage(): void {\r\n    const currentResult = this._pagedResult();\r\n    const currentFilter = this._currentFilter();\r\n\r\n    if (currentResult) {\r\n      const params: ExcusePoliciesQueryParams = {\r\n        page: currentResult.page,\r\n        pageSize: currentResult.pageSize,\r\n        ...currentFilter\r\n      };\r\n\r\n      this.getExcusePolicies(params).subscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset service state\r\n   */\r\n  reset(): void {\r\n    this._excusePolicies.set([]);\r\n    this._pagedResult.set(null);\r\n    this._loading.set(false);\r\n    this._error.set(null);\r\n    this._selectedExcusePolicy.set(null);\r\n    this._currentFilter.set({});\r\n  }\r\n}"],
  "mappings": "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",
  "names": []
}
